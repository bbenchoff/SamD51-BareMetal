
SamD51.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000023a8  00000000  00000000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000844  20000000  000023a8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bkupram      00000000  47000000  47000000  00020844  2**0
                  CONTENTS
  3 .qspi         00000000  04000000  04000000  00020844  2**0
                  CONTENTS
  4 .bss          0000007c  20000844  00002bec  00020844  2**2
                  ALLOC
  5 .stack        0000c000  200008c0  00002c68  00020844  2**0
                  ALLOC
  6 .ARM.attributes 0000002a  00000000  00000000  00020844  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  0002086e  2**0
                  CONTENTS, READONLY
  8 .debug_info   00007a4b  00000000  00000000  000208c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000076d  00000000  00000000  00028312  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000049e  00000000  00000000  00028a7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 000000f0  00000000  00000000  00028f1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  0002900d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00021aad  00000000  00000000  000290cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00001745  00000000  00000000  0004ab7a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000d6c24  00000000  00000000  0004c2bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00000b84  00000000  00000000  00122ee4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	c0 c8 00 20 d5 02 00 00 d1 02 00 00 d1 02 00 00     ... ............
      10:	d1 02 00 00 d1 02 00 00 d1 02 00 00 00 00 00 00     ................
	...
      2c:	d1 02 00 00 d1 02 00 00 00 00 00 00 d1 02 00 00     ................
      3c:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
      4c:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
      5c:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
      6c:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
      7c:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
      8c:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
      9c:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
      ac:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
      bc:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
      cc:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
      dc:	d1 02 00 00 d1 02 00 00 d1 02 00 00 00 00 00 00     ................
	...
      f4:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     104:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     114:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     124:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     134:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     144:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     154:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     164:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     174:	d1 02 00 00 00 00 00 00 00 00 00 00 d1 02 00 00     ................
     184:	d1 02 00 00 d1 02 00 00 d1 02 00 00 00 00 00 00     ................
     194:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     1a4:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     1b4:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     1c4:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     1d4:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     1e4:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     1f4:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     204:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     214:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     224:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     234:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     244:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................
     254:	d1 02 00 00 d1 02 00 00 d1 02 00 00 d1 02 00 00     ................

00000264 <__do_global_dtors_aux>:
     264:	b510      	push	{r4, lr}
     266:	4c05      	ldr	r4, [pc, #20]	; (27c <__do_global_dtors_aux+0x18>)
     268:	7823      	ldrb	r3, [r4, #0]
     26a:	b933      	cbnz	r3, 27a <__do_global_dtors_aux+0x16>
     26c:	4b04      	ldr	r3, [pc, #16]	; (280 <__do_global_dtors_aux+0x1c>)
     26e:	b113      	cbz	r3, 276 <__do_global_dtors_aux+0x12>
     270:	4804      	ldr	r0, [pc, #16]	; (284 <__do_global_dtors_aux+0x20>)
     272:	f3af 8000 	nop.w
     276:	2301      	movs	r3, #1
     278:	7023      	strb	r3, [r4, #0]
     27a:	bd10      	pop	{r4, pc}
     27c:	20000844 	.word	0x20000844
     280:	00000000 	.word	0x00000000
     284:	000023a8 	.word	0x000023a8

00000288 <frame_dummy>:
     288:	4b0c      	ldr	r3, [pc, #48]	; (2bc <frame_dummy+0x34>)
     28a:	b143      	cbz	r3, 29e <frame_dummy+0x16>
     28c:	480c      	ldr	r0, [pc, #48]	; (2c0 <frame_dummy+0x38>)
     28e:	490d      	ldr	r1, [pc, #52]	; (2c4 <frame_dummy+0x3c>)
     290:	b510      	push	{r4, lr}
     292:	f3af 8000 	nop.w
     296:	480c      	ldr	r0, [pc, #48]	; (2c8 <frame_dummy+0x40>)
     298:	6803      	ldr	r3, [r0, #0]
     29a:	b923      	cbnz	r3, 2a6 <frame_dummy+0x1e>
     29c:	bd10      	pop	{r4, pc}
     29e:	480a      	ldr	r0, [pc, #40]	; (2c8 <frame_dummy+0x40>)
     2a0:	6803      	ldr	r3, [r0, #0]
     2a2:	b933      	cbnz	r3, 2b2 <frame_dummy+0x2a>
     2a4:	4770      	bx	lr
     2a6:	4b09      	ldr	r3, [pc, #36]	; (2cc <frame_dummy+0x44>)
     2a8:	2b00      	cmp	r3, #0
     2aa:	d0f7      	beq.n	29c <frame_dummy+0x14>
     2ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     2b0:	4718      	bx	r3
     2b2:	4b06      	ldr	r3, [pc, #24]	; (2cc <frame_dummy+0x44>)
     2b4:	2b00      	cmp	r3, #0
     2b6:	d0f5      	beq.n	2a4 <frame_dummy+0x1c>
     2b8:	4718      	bx	r3
     2ba:	bf00      	nop
     2bc:	00000000 	.word	0x00000000
     2c0:	000023a8 	.word	0x000023a8
     2c4:	20000848 	.word	0x20000848
     2c8:	000023a8 	.word	0x000023a8
     2cc:	00000000 	.word	0x00000000

000002d0 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     2d0:	e7fe      	b.n	2d0 <Dummy_Handler>
	...

000002d4 <Reset_Handler>:
{
     2d4:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
     2d6:	4b10      	ldr	r3, [pc, #64]	; (318 <Reset_Handler+0x44>)
     2d8:	4a10      	ldr	r2, [pc, #64]	; (31c <Reset_Handler+0x48>)
     2da:	429a      	cmp	r2, r3
     2dc:	d009      	beq.n	2f2 <Reset_Handler+0x1e>
     2de:	4b0e      	ldr	r3, [pc, #56]	; (318 <Reset_Handler+0x44>)
     2e0:	4a0e      	ldr	r2, [pc, #56]	; (31c <Reset_Handler+0x48>)
     2e2:	e003      	b.n	2ec <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
     2e4:	6811      	ldr	r1, [r2, #0]
     2e6:	6019      	str	r1, [r3, #0]
     2e8:	3304      	adds	r3, #4
     2ea:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     2ec:	490c      	ldr	r1, [pc, #48]	; (320 <Reset_Handler+0x4c>)
     2ee:	428b      	cmp	r3, r1
     2f0:	d3f8      	bcc.n	2e4 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
     2f2:	4b0c      	ldr	r3, [pc, #48]	; (324 <Reset_Handler+0x50>)
     2f4:	e002      	b.n	2fc <Reset_Handler+0x28>
                *pDest++ = 0;
     2f6:	2200      	movs	r2, #0
     2f8:	601a      	str	r2, [r3, #0]
     2fa:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
     2fc:	4a0a      	ldr	r2, [pc, #40]	; (328 <Reset_Handler+0x54>)
     2fe:	4293      	cmp	r3, r2
     300:	d3f9      	bcc.n	2f6 <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     302:	4a0a      	ldr	r2, [pc, #40]	; (32c <Reset_Handler+0x58>)
     304:	4b0a      	ldr	r3, [pc, #40]	; (330 <Reset_Handler+0x5c>)
     306:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
     30a:	6093      	str	r3, [r2, #8]
        __libc_init_array();
     30c:	4b09      	ldr	r3, [pc, #36]	; (334 <Reset_Handler+0x60>)
     30e:	4798      	blx	r3
        main();
     310:	4b09      	ldr	r3, [pc, #36]	; (338 <Reset_Handler+0x64>)
     312:	4798      	blx	r3
     314:	e7fe      	b.n	314 <Reset_Handler+0x40>
     316:	bf00      	nop
     318:	20000000 	.word	0x20000000
     31c:	000023a8 	.word	0x000023a8
     320:	20000844 	.word	0x20000844
     324:	20000844 	.word	0x20000844
     328:	200008c0 	.word	0x200008c0
     32c:	e000ed00 	.word	0xe000ed00
     330:	00000000 	.word	0x00000000
     334:	0000066d 	.word	0x0000066d
     338:	00000581 	.word	0x00000581

0000033c <initGPIO>:
}

void initGPIO(void)
{
	// set UART RX input
	PORT->Group[GPIO_PORTA].WRCONFIG.reg =
     33c:	4b03      	ldr	r3, [pc, #12]	; (34c <initGPIO+0x10>)
     33e:	4a04      	ldr	r2, [pc, #16]	; (350 <initGPIO+0x14>)
     340:	629a      	str	r2, [r3, #40]	; 0x28
	| PORT_WRCONFIG_PMUXEN
	| PORT_WRCONFIG_WRPINCFG
	| ((1 << 9) & 0xffff);

	// set UART TX output
	PORT->Group[GPIO_PORTA].WRCONFIG.reg =
     342:	f5a2 7280 	sub.w	r2, r2, #256	; 0x100
     346:	629a      	str	r2, [r3, #40]	; 0x28
     348:	4770      	bx	lr
     34a:	bf00      	nop
     34c:	41008000 	.word	0x41008000
     350:	52010200 	.word	0x52010200

00000354 <initUSART>:

void initUSART(void)
{
	
	//unmask SERCOM0 in MCLK to enable clock to user interface
	MCLK->APBAMASK.bit.SERCOM0_ = 1;
     354:	4a18      	ldr	r2, [pc, #96]	; (3b8 <initUSART+0x64>)
     356:	6953      	ldr	r3, [r2, #20]
     358:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
     35c:	6153      	str	r3, [r2, #20]
	
	//connect GCLK3 with SERCOM0_SLOW running at 32khz
	//connect GLCK0 with SERCOM0_CORE running at 120MHz
	GCLK->PCHCTRL[SERCOM0_GCLK_ID_CORE].reg = GCLK_PCHCTRL_GEN_GCLK0 | GCLK_PCHCTRL_CHEN;
     35e:	4b17      	ldr	r3, [pc, #92]	; (3bc <initUSART+0x68>)
     360:	2240      	movs	r2, #64	; 0x40
     362:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
	GCLK->PCHCTRL[SERCOM0_GCLK_ID_SLOW].reg = GCLK_PCHCTRL_GEN_GCLK3 | GCLK_PCHCTRL_CHEN;
     366:	2243      	movs	r2, #67	; 0x43
     368:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
	
	//do a software reset of the module (write-synchronized)
	SERCOM0->USART.CTRLA.reg = SERCOM_USART_CTRLA_SWRST;
     36c:	2201      	movs	r2, #1
     36e:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
     372:	601a      	str	r2, [r3, #0]
	while(SERCOM0->USART.SYNCBUSY.bit.SWRST);
     374:	4b12      	ldr	r3, [pc, #72]	; (3c0 <initUSART+0x6c>)
     376:	69db      	ldr	r3, [r3, #28]
     378:	f013 0f01 	tst.w	r3, #1
     37c:	d1fa      	bne.n	374 <initUSART+0x20>
	
	//configure USART mode and bit order
	SERCOM0->USART.CTRLA.reg = 
     37e:	4b10      	ldr	r3, [pc, #64]	; (3c0 <initUSART+0x6c>)
     380:	4a10      	ldr	r2, [pc, #64]	; (3c4 <initUSART+0x70>)
     382:	601a      	str	r2, [r3, #0]
		|	SERCOM_USART_CTRLA_RXPO(1)
		|	SERCOM_USART_CTRLA_TXPO(0)
		|	SERCOM_USART_CTRLA_DORD;
		
	//set character size to 8
	SERCOM0->USART.CTRLB.bit.CHSIZE = 0;
     384:	685a      	ldr	r2, [r3, #4]
     386:	f36f 0202 	bfc	r2, #0, #3
     38a:	605a      	str	r2, [r3, #4]
	
	//setup baud rate
	SERCOM0->USART.BAUD.reg = CONF_SERCOM_0_USART_BAUD_RATE_REGISTER_VAL;
     38c:	f64f 72ac 	movw	r2, #65452	; 0xffac
     390:	819a      	strh	r2, [r3, #12]
	
		
	//enable transmitter and receiver
	SERCOM0->USART.CTRLB.reg = 
     392:	f44f 3240 	mov.w	r2, #196608	; 0x30000
     396:	605a      	str	r2, [r3, #4]
			SERCOM_USART_CTRLB_TXEN
		|	SERCOM_USART_CTRLB_RXEN;
	while(SERCOM0->USART.SYNCBUSY.bit.CTRLB);
     398:	4b09      	ldr	r3, [pc, #36]	; (3c0 <initUSART+0x6c>)
     39a:	69db      	ldr	r3, [r3, #28]
     39c:	f013 0f04 	tst.w	r3, #4
     3a0:	d1fa      	bne.n	398 <initUSART+0x44>
	

	
	//enable USART
	SERCOM0->USART.CTRLA.reg |= SERCOM_USART_CTRLA_ENABLE;
     3a2:	4a07      	ldr	r2, [pc, #28]	; (3c0 <initUSART+0x6c>)
     3a4:	6813      	ldr	r3, [r2, #0]
     3a6:	f043 0302 	orr.w	r3, r3, #2
     3aa:	6013      	str	r3, [r2, #0]
	while(SERCOM0->USART.SYNCBUSY.bit.ENABLE);
     3ac:	4b04      	ldr	r3, [pc, #16]	; (3c0 <initUSART+0x6c>)
     3ae:	69db      	ldr	r3, [r3, #28]
     3b0:	f013 0f02 	tst.w	r3, #2
     3b4:	d1fa      	bne.n	3ac <initUSART+0x58>

}
     3b6:	4770      	bx	lr
     3b8:	40000800 	.word	0x40000800
     3bc:	40001c00 	.word	0x40001c00
     3c0:	40003000 	.word	0x40003000
     3c4:	40100004 	.word	0x40100004

000003c8 <SERCOM0_write>:


int32_t SERCOM0_write(const char *const buf, const uint32_t length) {
     3c8:	b410      	push	{r4}
	uint32_t offset = 0;
	
	while(!(SERCOM0->USART.INTFLAG.bit.DRE));
     3ca:	4b0c      	ldr	r3, [pc, #48]	; (3fc <SERCOM0_write+0x34>)
     3cc:	7e1b      	ldrb	r3, [r3, #24]
     3ce:	f013 0f01 	tst.w	r3, #1
     3d2:	d0fa      	beq.n	3ca <SERCOM0_write+0x2>
     3d4:	2200      	movs	r2, #0
	
	do {
		SERCOM0->USART.DATA.reg = buf[offset];
     3d6:	5c84      	ldrb	r4, [r0, r2]
     3d8:	4b08      	ldr	r3, [pc, #32]	; (3fc <SERCOM0_write+0x34>)
     3da:	629c      	str	r4, [r3, #40]	; 0x28
		while(!(SERCOM0->USART.INTFLAG.bit.DRE));
     3dc:	4b07      	ldr	r3, [pc, #28]	; (3fc <SERCOM0_write+0x34>)
     3de:	7e1b      	ldrb	r3, [r3, #24]
     3e0:	f013 0f01 	tst.w	r3, #1
     3e4:	d0fa      	beq.n	3dc <SERCOM0_write+0x14>
	} while (++offset < length);
     3e6:	3201      	adds	r2, #1
     3e8:	428a      	cmp	r2, r1
     3ea:	d3f4      	bcc.n	3d6 <SERCOM0_write+0xe>
	
	while(!(SERCOM0->USART.INTFLAG.bit.TXC));
     3ec:	4b03      	ldr	r3, [pc, #12]	; (3fc <SERCOM0_write+0x34>)
     3ee:	7e1b      	ldrb	r3, [r3, #24]
     3f0:	f013 0f02 	tst.w	r3, #2
     3f4:	d0fa      	beq.n	3ec <SERCOM0_write+0x24>
	
	return (int32_t)offset;
}
     3f6:	4610      	mov	r0, r2
     3f8:	bc10      	pop	{r4}
     3fa:	4770      	bx	lr
     3fc:	40003000 	.word	0x40003000

00000400 <SERCOM0_read>:

int32_t SERCOM0_read(char *const buf, const uint32_t length) {
	uint32_t offset = 0;
     400:	2200      	movs	r2, #0
	
	do {
		while(!(SERCOM0->USART.INTFLAG.bit.RXC));
     402:	4b06      	ldr	r3, [pc, #24]	; (41c <SERCOM0_read+0x1c>)
     404:	7e1b      	ldrb	r3, [r3, #24]
     406:	f013 0f04 	tst.w	r3, #4
     40a:	d0fa      	beq.n	402 <SERCOM0_read+0x2>
		buf[offset] = SERCOM0->USART.DATA.reg;
     40c:	4b03      	ldr	r3, [pc, #12]	; (41c <SERCOM0_read+0x1c>)
     40e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
     410:	5483      	strb	r3, [r0, r2]
	} while (++offset < length);
     412:	3201      	adds	r2, #1
     414:	428a      	cmp	r2, r1
     416:	d3f4      	bcc.n	402 <SERCOM0_read+0x2>

	return (int32_t)offset;
}
     418:	4610      	mov	r0, r2
     41a:	4770      	bx	lr
     41c:	40003000 	.word	0x40003000

00000420 <initClocks>:
{
	return (SERCOM0->USART.INTFLAG.reg & SERCOM_USART_INTFLAG_RXC) ? 1 : 0;
}

void initClocks(void)
{
     420:	b410      	push	{r4}
	7) Setup Core and slow clocks for Peripherals
	8) Setup MCLK, including CLK_CPU and CLK_APBx, CLK_AHBx.

	*/
	//Set wait states
	NVMCTRL->CTRLA.bit.RWS = 5;		//5ws for 120MHz
     422:	4b50      	ldr	r3, [pc, #320]	; (564 <initClocks+0x144>)
     424:	881a      	ldrh	r2, [r3, #0]
     426:	2105      	movs	r1, #5
     428:	f361 220b 	bfi	r2, r1, #8, #4
     42c:	801a      	strh	r2, [r3, #0]
	
	//Gclk reset
	GCLK->CTRLA.bit.SWRST;
     42e:	484e      	ldr	r0, [pc, #312]	; (568 <initClocks+0x148>)
     430:	7803      	ldrb	r3, [r0, #0]

	//OSCILLATOR CONTROL
	//STEP 1) Setup XOSC32K
	OSC32KCTRL->XOSC32K.bit.CGM = 01;
     432:	4b4e      	ldr	r3, [pc, #312]	; (56c <initClocks+0x14c>)
     434:	8a9a      	ldrh	r2, [r3, #20]
     436:	2101      	movs	r1, #1
     438:	f361 324e 	bfi	r2, r1, #13, #2
     43c:	829a      	strh	r2, [r3, #20]
	OSC32KCTRL->XOSC32K.bit.XTALEN = 1;
     43e:	8a9c      	ldrh	r4, [r3, #20]
     440:	f044 0204 	orr.w	r2, r4, #4
     444:	829a      	strh	r2, [r3, #20]
	OSC32KCTRL->XOSC32K.bit.EN32K = 1;
     446:	8a9c      	ldrh	r4, [r3, #20]
     448:	f044 0208 	orr.w	r2, r4, #8
     44c:	829a      	strh	r2, [r3, #20]
	OSC32KCTRL->XOSC32K.bit.ONDEMAND = 1;
     44e:	8a9c      	ldrh	r4, [r3, #20]
     450:	f044 0280 	orr.w	r2, r4, #128	; 0x80
     454:	829a      	strh	r2, [r3, #20]
	OSC32KCTRL->XOSC32K.bit.RUNSTDBY = 1;
     456:	8a9c      	ldrh	r4, [r3, #20]
     458:	f044 0240 	orr.w	r2, r4, #64	; 0x40
     45c:	829a      	strh	r2, [r3, #20]
	OSC32KCTRL->XOSC32K.bit.STARTUP = 0;
     45e:	8a9a      	ldrh	r2, [r3, #20]
     460:	f36f 220a 	bfc	r2, #8, #3
     464:	829a      	strh	r2, [r3, #20]
	OSC32KCTRL->XOSC32K.bit.ENABLE = 1;	
     466:	8a9c      	ldrh	r4, [r3, #20]
     468:	f044 0202 	orr.w	r2, r4, #2
     46c:	829a      	strh	r2, [r3, #20]
	OSC32KCTRL->CFDCTRL.bit.CFDPRESC = 0;
     46e:	7d9a      	ldrb	r2, [r3, #22]
     470:	f36f 0282 	bfc	r2, #2, #1
     474:	759a      	strb	r2, [r3, #22]
	OSC32KCTRL->CFDCTRL.bit.SWBACK = 0;
     476:	7d9a      	ldrb	r2, [r3, #22]
     478:	f36f 0241 	bfc	r2, #1, #1
     47c:	759a      	strb	r2, [r3, #22]
	OSC32KCTRL->CFDCTRL.bit.CFDEN = 0;
     47e:	7d9a      	ldrb	r2, [r3, #22]
     480:	f36f 0200 	bfc	r2, #0, #1
     484:	759a      	strb	r2, [r3, #22]
	OSC32KCTRL->EVCTRL.bit.CFDEO = 0;
     486:	7dda      	ldrb	r2, [r3, #23]
     488:	f36f 0200 	bfc	r2, #0, #1
     48c:	75da      	strb	r2, [r3, #23]
	// make sure osc32kcrtl is ready
	//while (!OSC32KCTRL->INTFLAG.bit.XOSC32KRDY);
	
	//GCLK3 Control
	//Step 2) Setup GCLK3 for 32kHz
	GCLK->GENCTRL[3].reg = 
     48e:	f240 1305 	movw	r3, #261	; 0x105
     492:	62c3      	str	r3, [r0, #44]	; 0x2c
			GCLK_GENCTRL_GENEN
		|	GCLK_GENCTRL_SRC_XOSC32K;
		
	//DPLL0 SETUP
	//Step 3) Setup DPLL0 for 120 MHz 
	OSCCTRL->Dpll[0].DPLLCTRLB.bit.DIV = 1;
     494:	4b36      	ldr	r3, [pc, #216]	; (570 <initClocks+0x150>)
     496:	6b9a      	ldr	r2, [r3, #56]	; 0x38
     498:	f361 421a 	bfi	r2, r1, #16, #11
     49c:	639a      	str	r2, [r3, #56]	; 0x38
	OSCCTRL->Dpll[0].DPLLCTRLB.bit.DCOEN = 0;
     49e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
     4a0:	f36f 32cf 	bfc	r2, #15, #1
     4a4:	639a      	str	r2, [r3, #56]	; 0x38
	OSCCTRL->Dpll[0].DPLLCTRLB.bit.LBYPASS = 1;
     4a6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
     4a8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
     4ac:	639a      	str	r2, [r3, #56]	; 0x38
	OSCCTRL->Dpll[0].DPLLCTRLB.bit.LTIME = 0;
     4ae:	6b9a      	ldr	r2, [r3, #56]	; 0x38
     4b0:	f36f 220a 	bfc	r2, #8, #3
     4b4:	639a      	str	r2, [r3, #56]	; 0x38
	OSCCTRL->Dpll[0].DPLLCTRLB.bit.REFCLK = 1;	//Sets input to XOSC32k
     4b6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
     4b8:	f361 1247 	bfi	r2, r1, #5, #3
     4bc:	639a      	str	r2, [r3, #56]	; 0x38
	OSCCTRL->Dpll[0].DPLLCTRLB.bit.WUF = 1;
     4be:	6b9a      	ldr	r2, [r3, #56]	; 0x38
     4c0:	f042 0210 	orr.w	r2, r2, #16
     4c4:	639a      	str	r2, [r3, #56]	; 0x38
	OSCCTRL->Dpll[0].DPLLRATIO.reg = (3<<16) + 0xe4d;
     4c6:	4a2b      	ldr	r2, [pc, #172]	; (574 <initClocks+0x154>)
     4c8:	635a      	str	r2, [r3, #52]	; 0x34
		
	OSCCTRL->Dpll[0].DPLLCTRLA.bit.ONDEMAND = 0;
     4ca:	f893 2030 	ldrb.w	r2, [r3, #48]	; 0x30
     4ce:	f36f 12c7 	bfc	r2, #7, #1
     4d2:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	OSCCTRL->Dpll[0].DPLLCTRLA.bit.RUNSTDBY = 1;
     4d6:	f893 2030 	ldrb.w	r2, [r3, #48]	; 0x30
     4da:	f042 0240 	orr.w	r2, r2, #64	; 0x40
     4de:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	OSCCTRL->Dpll[0].DPLLCTRLA.bit.ENABLE = 1;
     4e2:	f893 2030 	ldrb.w	r2, [r3, #48]	; 0x30
     4e6:	f042 0202 	orr.w	r2, r2, #2
     4ea:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30

	//Per errata 2.13.1
	while(!(OSCCTRL->Dpll[0].DPLLSTATUS.bit.CLKRDY == 1))
     4ee:	4b20      	ldr	r3, [pc, #128]	; (570 <initClocks+0x150>)
     4f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
     4f2:	f013 0f02 	tst.w	r3, #2
     4f6:	d0fa      	beq.n	4ee <initClocks+0xce>
		;
		
	//GCLK0 Control
	//3) Setup DPLL0 for 120MHz
	GCLK->GENCTRL[0].reg = 
     4f8:	491b      	ldr	r1, [pc, #108]	; (568 <initClocks+0x148>)
     4fa:	f240 1307 	movw	r3, #263	; 0x107
     4fe:	620b      	str	r3, [r1, #32]
		|	GCLK_GENCTRL_SRC_DPLL0;
		
		
	//Setup DFLL48M
	//5) Setup DFLL48M for 48MHz
	OSCCTRL->DFLLCTRLB.bit.MODE = 1;
     500:	4b1b      	ldr	r3, [pc, #108]	; (570 <initClocks+0x150>)
     502:	f893 2020 	ldrb.w	r2, [r3, #32]
     506:	f042 0201 	orr.w	r2, r2, #1
     50a:	f883 2020 	strb.w	r2, [r3, #32]
	OSCCTRL->DFLLCTRLB.bit.WAITLOCK = 1;
     50e:	f893 2020 	ldrb.w	r2, [r3, #32]
     512:	f042 0280 	orr.w	r2, r2, #128	; 0x80
     516:	f883 2020 	strb.w	r2, [r3, #32]
	OSCCTRL->DFLLCTRLA.bit.ENABLE = 1;
     51a:	7f1a      	ldrb	r2, [r3, #28]
     51c:	f042 0202 	orr.w	r2, r2, #2
     520:	771a      	strb	r2, [r3, #28]
	OSCCTRL->DFLLCTRLA.bit.ONDEMAND = 0;
     522:	7f1a      	ldrb	r2, [r3, #28]
     524:	f36f 12c7 	bfc	r2, #7, #1
     528:	771a      	strb	r2, [r3, #28]
	OSCCTRL->DFLLCTRLA.bit.RUNSTDBY = 1;
     52a:	7f1a      	ldrb	r2, [r3, #28]
     52c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
     530:	771a      	strb	r2, [r3, #28]
	
	
	//GCLK2 Control
	//Setup GCLK2 for 48MHz
	GCLK->GENCTRL[2].reg =
     532:	f44f 7383 	mov.w	r3, #262	; 0x106
     536:	628b      	str	r3, [r1, #40]	; 0x28
			GCLK_GENCTRL_GENEN
		|	GCLK_GENCTRL_SRC_DFLL;
	
	
	GCLK->GENCTRL[0].reg = (0 << 16) | (0x21 << 8) | 7; // dpll0 = 7, enabled and standby = 0x21, divide by 1
     538:	f242 1307 	movw	r3, #8455	; 0x2107
     53c:	620b      	str	r3, [r1, #32]
	while (GCLK->SYNCBUSY.bit.GENCTRL0)
     53e:	4b0a      	ldr	r3, [pc, #40]	; (568 <initClocks+0x148>)
     540:	685b      	ldr	r3, [r3, #4]
     542:	f013 0f04 	tst.w	r3, #4
     546:	d1fa      	bne.n	53e <initClocks+0x11e>
		;
		
	GCLK->GENCTRL[1].reg = (100 << 16) | (0x21 << 8) | 7; // dpll0 = 7, enabled and standby = 0x21, divide by 100
     548:	4a0b      	ldr	r2, [pc, #44]	; (578 <initClocks+0x158>)
     54a:	4b07      	ldr	r3, [pc, #28]	; (568 <initClocks+0x148>)
     54c:	625a      	str	r2, [r3, #36]	; 0x24
	while (GCLK->SYNCBUSY.bit.GENCTRL1)
     54e:	4b06      	ldr	r3, [pc, #24]	; (568 <initClocks+0x148>)
     550:	685b      	ldr	r3, [r3, #4]
     552:	f013 0f08 	tst.w	r3, #8
     556:	d1fa      	bne.n	54e <initClocks+0x12e>
		;
		
	MCLK->CPUDIV.reg = MCLK_CPUDIV_DIV_DIV1;
     558:	2201      	movs	r2, #1
     55a:	4b08      	ldr	r3, [pc, #32]	; (57c <initClocks+0x15c>)
     55c:	715a      	strb	r2, [r3, #5]
	
	
}
     55e:	bc10      	pop	{r4}
     560:	4770      	bx	lr
     562:	bf00      	nop
     564:	41004000 	.word	0x41004000
     568:	40001c00 	.word	0x40001c00
     56c:	40001400 	.word	0x40001400
     570:	40001000 	.word	0x40001000
     574:	00030e4d 	.word	0x00030e4d
     578:	00642107 	.word	0x00642107
     57c:	40000800 	.word	0x40000800

00000580 <main>:
{
     580:	b508      	push	{r3, lr}
	initClocks();
     582:	4b08      	ldr	r3, [pc, #32]	; (5a4 <main+0x24>)
     584:	4798      	blx	r3
	initUSART();
     586:	4b08      	ldr	r3, [pc, #32]	; (5a8 <main+0x28>)
     588:	4798      	blx	r3
	initGPIO();
     58a:	4b08      	ldr	r3, [pc, #32]	; (5ac <main+0x2c>)
     58c:	4798      	blx	r3
	print_init();
     58e:	4b08      	ldr	r3, [pc, #32]	; (5b0 <main+0x30>)
     590:	4798      	blx	r3
	SERCOM0_write(buffer,5);
     592:	2105      	movs	r1, #5
     594:	4807      	ldr	r0, [pc, #28]	; (5b4 <main+0x34>)
     596:	4b08      	ldr	r3, [pc, #32]	; (5b8 <main+0x38>)
     598:	4798      	blx	r3
	printf("this works\n");
     59a:	4808      	ldr	r0, [pc, #32]	; (5bc <main+0x3c>)
     59c:	4b08      	ldr	r3, [pc, #32]	; (5c0 <main+0x40>)
     59e:	4798      	blx	r3
     5a0:	e7fe      	b.n	5a0 <main+0x20>
     5a2:	bf00      	nop
     5a4:	00000421 	.word	0x00000421
     5a8:	00000355 	.word	0x00000355
     5ac:	0000033d 	.word	0x0000033d
     5b0:	000005c5 	.word	0x000005c5
     5b4:	00002368 	.word	0x00002368
     5b8:	000003c9 	.word	0x000003c9
     5bc:	00002370 	.word	0x00002370
     5c0:	000007f5 	.word	0x000007f5

000005c4 <print_init>:
extern int _end;

/**
 * redirect the stdio output for printf
 */
void print_init(void) {
     5c4:	b538      	push	{r3, r4, r5, lr}
	/* set STDIO to unbuffered */
	setbuf(stdout, NULL);
     5c6:	4d05      	ldr	r5, [pc, #20]	; (5dc <print_init+0x18>)
     5c8:	682b      	ldr	r3, [r5, #0]
     5ca:	2100      	movs	r1, #0
     5cc:	6898      	ldr	r0, [r3, #8]
     5ce:	4c04      	ldr	r4, [pc, #16]	; (5e0 <print_init+0x1c>)
     5d0:	47a0      	blx	r4
	setbuf(stdin, NULL);
     5d2:	682b      	ldr	r3, [r5, #0]
     5d4:	2100      	movs	r1, #0
     5d6:	6858      	ldr	r0, [r3, #4]
     5d8:	47a0      	blx	r4
     5da:	bd38      	pop	{r3, r4, r5, pc}
     5dc:	20000000 	.word	0x20000000
     5e0:	00000805 	.word	0x00000805

000005e4 <_read>:
}

int _read(int file, char *ptr, int len) {
	int n = 0;

	if (file != 0) {
     5e4:	b958      	cbnz	r0, 5fe <_read+0x1a>
int _read(int file, char *ptr, int len) {
     5e6:	b508      	push	{r3, lr}
     5e8:	460b      	mov	r3, r1
     5ea:	4611      	mov	r1, r2
     5ec:	4618      	mov	r0, r3
		return -1;
	}

	n = SERCOM0_read((char *)ptr, len);
     5ee:	4b05      	ldr	r3, [pc, #20]	; (604 <_read+0x20>)
     5f0:	4798      	blx	r3
	if (n < 0) {
     5f2:	2800      	cmp	r0, #0
     5f4:	db00      	blt.n	5f8 <_read+0x14>
		return -1;
	}

	return n;
}
     5f6:	bd08      	pop	{r3, pc}
		return -1;
     5f8:	f04f 30ff 	mov.w	r0, #4294967295
     5fc:	bd08      	pop	{r3, pc}
		return -1;
     5fe:	f04f 30ff 	mov.w	r0, #4294967295
     602:	4770      	bx	lr
     604:	00000401 	.word	0x00000401

00000608 <_write>:

int _write(int file, char *ptr, int len) {
	int n = 0;

	if ((file != 1) && (file != 2) && (file != 3)) {
     608:	3801      	subs	r0, #1
     60a:	2802      	cmp	r0, #2
     60c:	d80b      	bhi.n	626 <_write+0x1e>
int _write(int file, char *ptr, int len) {
     60e:	b508      	push	{r3, lr}
     610:	460b      	mov	r3, r1
     612:	4611      	mov	r1, r2
     614:	4618      	mov	r0, r3
		return -1;
	}

	n = SERCOM0_write((const char *)ptr, len);
     616:	4b05      	ldr	r3, [pc, #20]	; (62c <_write+0x24>)
     618:	4798      	blx	r3
	if (n < 0) {
     61a:	2800      	cmp	r0, #0
     61c:	db00      	blt.n	620 <_write+0x18>
		return -1;
	}

	return n;
}
     61e:	bd08      	pop	{r3, pc}
		return -1;
     620:	f04f 30ff 	mov.w	r0, #4294967295
     624:	bd08      	pop	{r3, pc}
		return -1;
     626:	f04f 30ff 	mov.w	r0, #4294967295
     62a:	4770      	bx	lr
     62c:	000003c9 	.word	0x000003c9

00000630 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
caddr_t _sbrk(int incr)
{
     630:	4603      	mov	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     632:	4a06      	ldr	r2, [pc, #24]	; (64c <_sbrk+0x1c>)
     634:	6812      	ldr	r2, [r2, #0]
     636:	b122      	cbz	r2, 642 <_sbrk+0x12>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
     638:	4a04      	ldr	r2, [pc, #16]	; (64c <_sbrk+0x1c>)
     63a:	6810      	ldr	r0, [r2, #0]

	heap += incr;
     63c:	4403      	add	r3, r0
     63e:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
     640:	4770      	bx	lr
		heap = (unsigned char *)&_end;
     642:	4903      	ldr	r1, [pc, #12]	; (650 <_sbrk+0x20>)
     644:	4a01      	ldr	r2, [pc, #4]	; (64c <_sbrk+0x1c>)
     646:	6011      	str	r1, [r2, #0]
     648:	e7f6      	b.n	638 <_sbrk+0x8>
     64a:	bf00      	nop
     64c:	20000860 	.word	0x20000860
     650:	2000c8c0 	.word	0x2000c8c0

00000654 <_close>:
 */
int _close(int file)
{
	(void)file;
	return -1;
}
     654:	f04f 30ff 	mov.w	r0, #4294967295
     658:	4770      	bx	lr

0000065a <_fstat>:
 * \brief Replacement of C library of _fstat
 */
int _fstat(int file, struct stat *st)
{
	(void)file;
	st->st_mode = S_IFCHR;
     65a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
     65e:	604b      	str	r3, [r1, #4]

	return 0;
}
     660:	2000      	movs	r0, #0
     662:	4770      	bx	lr

00000664 <_isatty>:
 */
int _isatty(int file)
{
	(void)file;
	return 1;
}
     664:	2001      	movs	r0, #1
     666:	4770      	bx	lr

00000668 <_lseek>:
 */
int _lseek(int file, int ptr, int dir)
{
	(void)file, (void)ptr, (void)dir;
	return 0;
}
     668:	2000      	movs	r0, #0
     66a:	4770      	bx	lr

0000066c <__libc_init_array>:
     66c:	b570      	push	{r4, r5, r6, lr}
     66e:	4e0f      	ldr	r6, [pc, #60]	; (6ac <__libc_init_array+0x40>)
     670:	4d0f      	ldr	r5, [pc, #60]	; (6b0 <__libc_init_array+0x44>)
     672:	1b76      	subs	r6, r6, r5
     674:	10b6      	asrs	r6, r6, #2
     676:	bf18      	it	ne
     678:	2400      	movne	r4, #0
     67a:	d005      	beq.n	688 <__libc_init_array+0x1c>
     67c:	3401      	adds	r4, #1
     67e:	f855 3b04 	ldr.w	r3, [r5], #4
     682:	4798      	blx	r3
     684:	42a6      	cmp	r6, r4
     686:	d1f9      	bne.n	67c <__libc_init_array+0x10>
     688:	4e0a      	ldr	r6, [pc, #40]	; (6b4 <__libc_init_array+0x48>)
     68a:	4d0b      	ldr	r5, [pc, #44]	; (6b8 <__libc_init_array+0x4c>)
     68c:	1b76      	subs	r6, r6, r5
     68e:	f001 fe79 	bl	2384 <_init>
     692:	10b6      	asrs	r6, r6, #2
     694:	bf18      	it	ne
     696:	2400      	movne	r4, #0
     698:	d006      	beq.n	6a8 <__libc_init_array+0x3c>
     69a:	3401      	adds	r4, #1
     69c:	f855 3b04 	ldr.w	r3, [r5], #4
     6a0:	4798      	blx	r3
     6a2:	42a6      	cmp	r6, r4
     6a4:	d1f9      	bne.n	69a <__libc_init_array+0x2e>
     6a6:	bd70      	pop	{r4, r5, r6, pc}
     6a8:	bd70      	pop	{r4, r5, r6, pc}
     6aa:	bf00      	nop
     6ac:	00002390 	.word	0x00002390
     6b0:	00002390 	.word	0x00002390
     6b4:	00002398 	.word	0x00002398
     6b8:	00002390 	.word	0x00002390

000006bc <memset>:
     6bc:	b470      	push	{r4, r5, r6}
     6be:	0786      	lsls	r6, r0, #30
     6c0:	d046      	beq.n	750 <memset+0x94>
     6c2:	1e54      	subs	r4, r2, #1
     6c4:	2a00      	cmp	r2, #0
     6c6:	d041      	beq.n	74c <memset+0x90>
     6c8:	b2ca      	uxtb	r2, r1
     6ca:	4603      	mov	r3, r0
     6cc:	e002      	b.n	6d4 <memset+0x18>
     6ce:	f114 34ff 	adds.w	r4, r4, #4294967295
     6d2:	d33b      	bcc.n	74c <memset+0x90>
     6d4:	f803 2b01 	strb.w	r2, [r3], #1
     6d8:	079d      	lsls	r5, r3, #30
     6da:	d1f8      	bne.n	6ce <memset+0x12>
     6dc:	2c03      	cmp	r4, #3
     6de:	d92e      	bls.n	73e <memset+0x82>
     6e0:	b2cd      	uxtb	r5, r1
     6e2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
     6e6:	2c0f      	cmp	r4, #15
     6e8:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
     6ec:	d919      	bls.n	722 <memset+0x66>
     6ee:	f103 0210 	add.w	r2, r3, #16
     6f2:	4626      	mov	r6, r4
     6f4:	3e10      	subs	r6, #16
     6f6:	2e0f      	cmp	r6, #15
     6f8:	f842 5c10 	str.w	r5, [r2, #-16]
     6fc:	f842 5c0c 	str.w	r5, [r2, #-12]
     700:	f842 5c08 	str.w	r5, [r2, #-8]
     704:	f842 5c04 	str.w	r5, [r2, #-4]
     708:	f102 0210 	add.w	r2, r2, #16
     70c:	d8f2      	bhi.n	6f4 <memset+0x38>
     70e:	f1a4 0210 	sub.w	r2, r4, #16
     712:	f022 020f 	bic.w	r2, r2, #15
     716:	f004 040f 	and.w	r4, r4, #15
     71a:	3210      	adds	r2, #16
     71c:	2c03      	cmp	r4, #3
     71e:	4413      	add	r3, r2
     720:	d90d      	bls.n	73e <memset+0x82>
     722:	461e      	mov	r6, r3
     724:	4622      	mov	r2, r4
     726:	3a04      	subs	r2, #4
     728:	2a03      	cmp	r2, #3
     72a:	f846 5b04 	str.w	r5, [r6], #4
     72e:	d8fa      	bhi.n	726 <memset+0x6a>
     730:	1f22      	subs	r2, r4, #4
     732:	f022 0203 	bic.w	r2, r2, #3
     736:	3204      	adds	r2, #4
     738:	4413      	add	r3, r2
     73a:	f004 0403 	and.w	r4, r4, #3
     73e:	b12c      	cbz	r4, 74c <memset+0x90>
     740:	b2c9      	uxtb	r1, r1
     742:	441c      	add	r4, r3
     744:	f803 1b01 	strb.w	r1, [r3], #1
     748:	429c      	cmp	r4, r3
     74a:	d1fb      	bne.n	744 <memset+0x88>
     74c:	bc70      	pop	{r4, r5, r6}
     74e:	4770      	bx	lr
     750:	4614      	mov	r4, r2
     752:	4603      	mov	r3, r0
     754:	e7c2      	b.n	6dc <memset+0x20>
     756:	bf00      	nop

00000758 <_puts_r>:
     758:	b5f0      	push	{r4, r5, r6, r7, lr}
     75a:	4605      	mov	r5, r0
     75c:	b089      	sub	sp, #36	; 0x24
     75e:	4608      	mov	r0, r1
     760:	460c      	mov	r4, r1
     762:	f000 f92d 	bl	9c0 <strlen>
     766:	6bab      	ldr	r3, [r5, #56]	; 0x38
     768:	4f21      	ldr	r7, [pc, #132]	; (7f0 <_puts_r+0x98>)
     76a:	9404      	str	r4, [sp, #16]
     76c:	2601      	movs	r6, #1
     76e:	1c44      	adds	r4, r0, #1
     770:	a904      	add	r1, sp, #16
     772:	2202      	movs	r2, #2
     774:	9403      	str	r4, [sp, #12]
     776:	9005      	str	r0, [sp, #20]
     778:	68ac      	ldr	r4, [r5, #8]
     77a:	9706      	str	r7, [sp, #24]
     77c:	9607      	str	r6, [sp, #28]
     77e:	9101      	str	r1, [sp, #4]
     780:	9202      	str	r2, [sp, #8]
     782:	b353      	cbz	r3, 7da <_puts_r+0x82>
     784:	6e63      	ldr	r3, [r4, #100]	; 0x64
     786:	f013 0f01 	tst.w	r3, #1
     78a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
     78e:	b29a      	uxth	r2, r3
     790:	d101      	bne.n	796 <_puts_r+0x3e>
     792:	0590      	lsls	r0, r2, #22
     794:	d525      	bpl.n	7e2 <_puts_r+0x8a>
     796:	0491      	lsls	r1, r2, #18
     798:	d406      	bmi.n	7a8 <_puts_r+0x50>
     79a:	6e62      	ldr	r2, [r4, #100]	; 0x64
     79c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
     7a0:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
     7a4:	81a3      	strh	r3, [r4, #12]
     7a6:	6662      	str	r2, [r4, #100]	; 0x64
     7a8:	4628      	mov	r0, r5
     7aa:	aa01      	add	r2, sp, #4
     7ac:	4621      	mov	r1, r4
     7ae:	f000 fc69 	bl	1084 <__sfvwrite_r>
     7b2:	6e63      	ldr	r3, [r4, #100]	; 0x64
     7b4:	2800      	cmp	r0, #0
     7b6:	bf0c      	ite	eq
     7b8:	250a      	moveq	r5, #10
     7ba:	f04f 35ff 	movne.w	r5, #4294967295
     7be:	07da      	lsls	r2, r3, #31
     7c0:	d402      	bmi.n	7c8 <_puts_r+0x70>
     7c2:	89a3      	ldrh	r3, [r4, #12]
     7c4:	059b      	lsls	r3, r3, #22
     7c6:	d502      	bpl.n	7ce <_puts_r+0x76>
     7c8:	4628      	mov	r0, r5
     7ca:	b009      	add	sp, #36	; 0x24
     7cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
     7ce:	6da0      	ldr	r0, [r4, #88]	; 0x58
     7d0:	f000 fe00 	bl	13d4 <__retarget_lock_release_recursive>
     7d4:	4628      	mov	r0, r5
     7d6:	b009      	add	sp, #36	; 0x24
     7d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     7da:	4628      	mov	r0, r5
     7dc:	f000 faca 	bl	d74 <__sinit>
     7e0:	e7d0      	b.n	784 <_puts_r+0x2c>
     7e2:	6da0      	ldr	r0, [r4, #88]	; 0x58
     7e4:	f000 fdf4 	bl	13d0 <__retarget_lock_acquire_recursive>
     7e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
     7ec:	b29a      	uxth	r2, r3
     7ee:	e7d2      	b.n	796 <_puts_r+0x3e>
     7f0:	00002380 	.word	0x00002380

000007f4 <puts>:
     7f4:	4b02      	ldr	r3, [pc, #8]	; (800 <puts+0xc>)
     7f6:	4601      	mov	r1, r0
     7f8:	6818      	ldr	r0, [r3, #0]
     7fa:	f7ff bfad 	b.w	758 <_puts_r>
     7fe:	bf00      	nop
     800:	20000000 	.word	0x20000000

00000804 <setbuf>:
     804:	2900      	cmp	r1, #0
     806:	bf0c      	ite	eq
     808:	2202      	moveq	r2, #2
     80a:	2200      	movne	r2, #0
     80c:	f44f 6380 	mov.w	r3, #1024	; 0x400
     810:	f000 b800 	b.w	814 <setvbuf>

00000814 <setvbuf>:
     814:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
     818:	4c61      	ldr	r4, [pc, #388]	; (9a0 <setvbuf+0x18c>)
     81a:	6825      	ldr	r5, [r4, #0]
     81c:	b083      	sub	sp, #12
     81e:	4604      	mov	r4, r0
     820:	460f      	mov	r7, r1
     822:	4690      	mov	r8, r2
     824:	461e      	mov	r6, r3
     826:	b115      	cbz	r5, 82e <setvbuf+0x1a>
     828:	6bab      	ldr	r3, [r5, #56]	; 0x38
     82a:	2b00      	cmp	r3, #0
     82c:	d064      	beq.n	8f8 <setvbuf+0xe4>
     82e:	f1b8 0f02 	cmp.w	r8, #2
     832:	d006      	beq.n	842 <setvbuf+0x2e>
     834:	f1b8 0f01 	cmp.w	r8, #1
     838:	f200 809f 	bhi.w	97a <setvbuf+0x166>
     83c:	2e00      	cmp	r6, #0
     83e:	f2c0 809c 	blt.w	97a <setvbuf+0x166>
     842:	6e63      	ldr	r3, [r4, #100]	; 0x64
     844:	07d8      	lsls	r0, r3, #31
     846:	d534      	bpl.n	8b2 <setvbuf+0x9e>
     848:	4621      	mov	r1, r4
     84a:	4628      	mov	r0, r5
     84c:	f000 fa3a 	bl	cc4 <_fflush_r>
     850:	6b21      	ldr	r1, [r4, #48]	; 0x30
     852:	b141      	cbz	r1, 866 <setvbuf+0x52>
     854:	f104 0340 	add.w	r3, r4, #64	; 0x40
     858:	4299      	cmp	r1, r3
     85a:	d002      	beq.n	862 <setvbuf+0x4e>
     85c:	4628      	mov	r0, r5
     85e:	f000 fb2b 	bl	eb8 <_free_r>
     862:	2300      	movs	r3, #0
     864:	6323      	str	r3, [r4, #48]	; 0x30
     866:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
     86a:	2200      	movs	r2, #0
     86c:	61a2      	str	r2, [r4, #24]
     86e:	6062      	str	r2, [r4, #4]
     870:	061a      	lsls	r2, r3, #24
     872:	d43a      	bmi.n	8ea <setvbuf+0xd6>
     874:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
     878:	f023 0303 	bic.w	r3, r3, #3
     87c:	f1b8 0f02 	cmp.w	r8, #2
     880:	81a3      	strh	r3, [r4, #12]
     882:	d01d      	beq.n	8c0 <setvbuf+0xac>
     884:	ab01      	add	r3, sp, #4
     886:	466a      	mov	r2, sp
     888:	4621      	mov	r1, r4
     88a:	4628      	mov	r0, r5
     88c:	f000 fda4 	bl	13d8 <__swhatbuf_r>
     890:	89a3      	ldrh	r3, [r4, #12]
     892:	4318      	orrs	r0, r3
     894:	81a0      	strh	r0, [r4, #12]
     896:	2e00      	cmp	r6, #0
     898:	d132      	bne.n	900 <setvbuf+0xec>
     89a:	9e00      	ldr	r6, [sp, #0]
     89c:	4630      	mov	r0, r6
     89e:	f000 fe13 	bl	14c8 <malloc>
     8a2:	4607      	mov	r7, r0
     8a4:	2800      	cmp	r0, #0
     8a6:	d06b      	beq.n	980 <setvbuf+0x16c>
     8a8:	89a3      	ldrh	r3, [r4, #12]
     8aa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
     8ae:	81a3      	strh	r3, [r4, #12]
     8b0:	e028      	b.n	904 <setvbuf+0xf0>
     8b2:	89a3      	ldrh	r3, [r4, #12]
     8b4:	0599      	lsls	r1, r3, #22
     8b6:	d4c7      	bmi.n	848 <setvbuf+0x34>
     8b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
     8ba:	f000 fd89 	bl	13d0 <__retarget_lock_acquire_recursive>
     8be:	e7c3      	b.n	848 <setvbuf+0x34>
     8c0:	2500      	movs	r5, #0
     8c2:	6e61      	ldr	r1, [r4, #100]	; 0x64
     8c4:	2600      	movs	r6, #0
     8c6:	f104 0243 	add.w	r2, r4, #67	; 0x43
     8ca:	f043 0302 	orr.w	r3, r3, #2
     8ce:	2001      	movs	r0, #1
     8d0:	60a6      	str	r6, [r4, #8]
     8d2:	07ce      	lsls	r6, r1, #31
     8d4:	81a3      	strh	r3, [r4, #12]
     8d6:	6022      	str	r2, [r4, #0]
     8d8:	6122      	str	r2, [r4, #16]
     8da:	6160      	str	r0, [r4, #20]
     8dc:	d401      	bmi.n	8e2 <setvbuf+0xce>
     8de:	0598      	lsls	r0, r3, #22
     8e0:	d53e      	bpl.n	960 <setvbuf+0x14c>
     8e2:	4628      	mov	r0, r5
     8e4:	b003      	add	sp, #12
     8e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
     8ea:	6921      	ldr	r1, [r4, #16]
     8ec:	4628      	mov	r0, r5
     8ee:	f000 fae3 	bl	eb8 <_free_r>
     8f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
     8f6:	e7bd      	b.n	874 <setvbuf+0x60>
     8f8:	4628      	mov	r0, r5
     8fa:	f000 fa3b 	bl	d74 <__sinit>
     8fe:	e796      	b.n	82e <setvbuf+0x1a>
     900:	2f00      	cmp	r7, #0
     902:	d0cb      	beq.n	89c <setvbuf+0x88>
     904:	6bab      	ldr	r3, [r5, #56]	; 0x38
     906:	2b00      	cmp	r3, #0
     908:	d033      	beq.n	972 <setvbuf+0x15e>
     90a:	9b00      	ldr	r3, [sp, #0]
     90c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
     910:	6027      	str	r7, [r4, #0]
     912:	429e      	cmp	r6, r3
     914:	bf1c      	itt	ne
     916:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
     91a:	81a2      	strhne	r2, [r4, #12]
     91c:	f1b8 0f01 	cmp.w	r8, #1
     920:	bf04      	itt	eq
     922:	f042 0201 	orreq.w	r2, r2, #1
     926:	81a2      	strheq	r2, [r4, #12]
     928:	b292      	uxth	r2, r2
     92a:	f012 0308 	ands.w	r3, r2, #8
     92e:	6127      	str	r7, [r4, #16]
     930:	6166      	str	r6, [r4, #20]
     932:	d00e      	beq.n	952 <setvbuf+0x13e>
     934:	07d1      	lsls	r1, r2, #31
     936:	d51a      	bpl.n	96e <setvbuf+0x15a>
     938:	6e65      	ldr	r5, [r4, #100]	; 0x64
     93a:	4276      	negs	r6, r6
     93c:	2300      	movs	r3, #0
     93e:	f015 0501 	ands.w	r5, r5, #1
     942:	61a6      	str	r6, [r4, #24]
     944:	60a3      	str	r3, [r4, #8]
     946:	d009      	beq.n	95c <setvbuf+0x148>
     948:	2500      	movs	r5, #0
     94a:	4628      	mov	r0, r5
     94c:	b003      	add	sp, #12
     94e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
     952:	60a3      	str	r3, [r4, #8]
     954:	6e65      	ldr	r5, [r4, #100]	; 0x64
     956:	f015 0501 	ands.w	r5, r5, #1
     95a:	d1f5      	bne.n	948 <setvbuf+0x134>
     95c:	0593      	lsls	r3, r2, #22
     95e:	d4c0      	bmi.n	8e2 <setvbuf+0xce>
     960:	6da0      	ldr	r0, [r4, #88]	; 0x58
     962:	f000 fd37 	bl	13d4 <__retarget_lock_release_recursive>
     966:	4628      	mov	r0, r5
     968:	b003      	add	sp, #12
     96a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
     96e:	60a6      	str	r6, [r4, #8]
     970:	e7f0      	b.n	954 <setvbuf+0x140>
     972:	4628      	mov	r0, r5
     974:	f000 f9fe 	bl	d74 <__sinit>
     978:	e7c7      	b.n	90a <setvbuf+0xf6>
     97a:	f04f 35ff 	mov.w	r5, #4294967295
     97e:	e7b0      	b.n	8e2 <setvbuf+0xce>
     980:	f8dd 9000 	ldr.w	r9, [sp]
     984:	45b1      	cmp	r9, r6
     986:	d004      	beq.n	992 <setvbuf+0x17e>
     988:	4648      	mov	r0, r9
     98a:	f000 fd9d 	bl	14c8 <malloc>
     98e:	4607      	mov	r7, r0
     990:	b920      	cbnz	r0, 99c <setvbuf+0x188>
     992:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
     996:	f04f 35ff 	mov.w	r5, #4294967295
     99a:	e792      	b.n	8c2 <setvbuf+0xae>
     99c:	464e      	mov	r6, r9
     99e:	e783      	b.n	8a8 <setvbuf+0x94>
     9a0:	20000000 	.word	0x20000000
	...

000009c0 <strlen>:
     9c0:	f890 f000 	pld	[r0]
     9c4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
     9c8:	f020 0107 	bic.w	r1, r0, #7
     9cc:	f06f 0c00 	mvn.w	ip, #0
     9d0:	f010 0407 	ands.w	r4, r0, #7
     9d4:	f891 f020 	pld	[r1, #32]
     9d8:	f040 8049 	bne.w	a6e <strlen+0xae>
     9dc:	f04f 0400 	mov.w	r4, #0
     9e0:	f06f 0007 	mvn.w	r0, #7
     9e4:	e9d1 2300 	ldrd	r2, r3, [r1]
     9e8:	f891 f040 	pld	[r1, #64]	; 0x40
     9ec:	f100 0008 	add.w	r0, r0, #8
     9f0:	fa82 f24c 	uadd8	r2, r2, ip
     9f4:	faa4 f28c 	sel	r2, r4, ip
     9f8:	fa83 f34c 	uadd8	r3, r3, ip
     9fc:	faa2 f38c 	sel	r3, r2, ip
     a00:	bb4b      	cbnz	r3, a56 <strlen+0x96>
     a02:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
     a06:	fa82 f24c 	uadd8	r2, r2, ip
     a0a:	f100 0008 	add.w	r0, r0, #8
     a0e:	faa4 f28c 	sel	r2, r4, ip
     a12:	fa83 f34c 	uadd8	r3, r3, ip
     a16:	faa2 f38c 	sel	r3, r2, ip
     a1a:	b9e3      	cbnz	r3, a56 <strlen+0x96>
     a1c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
     a20:	fa82 f24c 	uadd8	r2, r2, ip
     a24:	f100 0008 	add.w	r0, r0, #8
     a28:	faa4 f28c 	sel	r2, r4, ip
     a2c:	fa83 f34c 	uadd8	r3, r3, ip
     a30:	faa2 f38c 	sel	r3, r2, ip
     a34:	b97b      	cbnz	r3, a56 <strlen+0x96>
     a36:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
     a3a:	f101 0120 	add.w	r1, r1, #32
     a3e:	fa82 f24c 	uadd8	r2, r2, ip
     a42:	f100 0008 	add.w	r0, r0, #8
     a46:	faa4 f28c 	sel	r2, r4, ip
     a4a:	fa83 f34c 	uadd8	r3, r3, ip
     a4e:	faa2 f38c 	sel	r3, r2, ip
     a52:	2b00      	cmp	r3, #0
     a54:	d0c6      	beq.n	9e4 <strlen+0x24>
     a56:	2a00      	cmp	r2, #0
     a58:	bf04      	itt	eq
     a5a:	3004      	addeq	r0, #4
     a5c:	461a      	moveq	r2, r3
     a5e:	ba12      	rev	r2, r2
     a60:	fab2 f282 	clz	r2, r2
     a64:	e8fd 4502 	ldrd	r4, r5, [sp], #8
     a68:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
     a6c:	4770      	bx	lr
     a6e:	e9d1 2300 	ldrd	r2, r3, [r1]
     a72:	f004 0503 	and.w	r5, r4, #3
     a76:	f1c4 0000 	rsb	r0, r4, #0
     a7a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
     a7e:	f014 0f04 	tst.w	r4, #4
     a82:	f891 f040 	pld	[r1, #64]	; 0x40
     a86:	fa0c f505 	lsl.w	r5, ip, r5
     a8a:	ea62 0205 	orn	r2, r2, r5
     a8e:	bf1c      	itt	ne
     a90:	ea63 0305 	ornne	r3, r3, r5
     a94:	4662      	movne	r2, ip
     a96:	f04f 0400 	mov.w	r4, #0
     a9a:	e7a9      	b.n	9f0 <strlen+0x30>

00000a9c <__swsetup_r>:
     a9c:	b538      	push	{r3, r4, r5, lr}
     a9e:	4b30      	ldr	r3, [pc, #192]	; (b60 <__swsetup_r+0xc4>)
     aa0:	681b      	ldr	r3, [r3, #0]
     aa2:	4605      	mov	r5, r0
     aa4:	460c      	mov	r4, r1
     aa6:	b113      	cbz	r3, aae <__swsetup_r+0x12>
     aa8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
     aaa:	2a00      	cmp	r2, #0
     aac:	d038      	beq.n	b20 <__swsetup_r+0x84>
     aae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
     ab2:	b293      	uxth	r3, r2
     ab4:	0718      	lsls	r0, r3, #28
     ab6:	d50c      	bpl.n	ad2 <__swsetup_r+0x36>
     ab8:	6920      	ldr	r0, [r4, #16]
     aba:	b1a8      	cbz	r0, ae8 <__swsetup_r+0x4c>
     abc:	f013 0201 	ands.w	r2, r3, #1
     ac0:	d01e      	beq.n	b00 <__swsetup_r+0x64>
     ac2:	6963      	ldr	r3, [r4, #20]
     ac4:	2200      	movs	r2, #0
     ac6:	425b      	negs	r3, r3
     ac8:	61a3      	str	r3, [r4, #24]
     aca:	60a2      	str	r2, [r4, #8]
     acc:	b1f0      	cbz	r0, b0c <__swsetup_r+0x70>
     ace:	2000      	movs	r0, #0
     ad0:	bd38      	pop	{r3, r4, r5, pc}
     ad2:	06d9      	lsls	r1, r3, #27
     ad4:	d53c      	bpl.n	b50 <__swsetup_r+0xb4>
     ad6:	0758      	lsls	r0, r3, #29
     ad8:	d426      	bmi.n	b28 <__swsetup_r+0x8c>
     ada:	6920      	ldr	r0, [r4, #16]
     adc:	f042 0308 	orr.w	r3, r2, #8
     ae0:	81a3      	strh	r3, [r4, #12]
     ae2:	b29b      	uxth	r3, r3
     ae4:	2800      	cmp	r0, #0
     ae6:	d1e9      	bne.n	abc <__swsetup_r+0x20>
     ae8:	f403 7220 	and.w	r2, r3, #640	; 0x280
     aec:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
     af0:	d0e4      	beq.n	abc <__swsetup_r+0x20>
     af2:	4628      	mov	r0, r5
     af4:	4621      	mov	r1, r4
     af6:	f000 fc9d 	bl	1434 <__smakebuf_r>
     afa:	89a3      	ldrh	r3, [r4, #12]
     afc:	6920      	ldr	r0, [r4, #16]
     afe:	e7dd      	b.n	abc <__swsetup_r+0x20>
     b00:	0799      	lsls	r1, r3, #30
     b02:	bf58      	it	pl
     b04:	6962      	ldrpl	r2, [r4, #20]
     b06:	60a2      	str	r2, [r4, #8]
     b08:	2800      	cmp	r0, #0
     b0a:	d1e0      	bne.n	ace <__swsetup_r+0x32>
     b0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
     b10:	061a      	lsls	r2, r3, #24
     b12:	d5dd      	bpl.n	ad0 <__swsetup_r+0x34>
     b14:	f043 0340 	orr.w	r3, r3, #64	; 0x40
     b18:	81a3      	strh	r3, [r4, #12]
     b1a:	f04f 30ff 	mov.w	r0, #4294967295
     b1e:	bd38      	pop	{r3, r4, r5, pc}
     b20:	4618      	mov	r0, r3
     b22:	f000 f927 	bl	d74 <__sinit>
     b26:	e7c2      	b.n	aae <__swsetup_r+0x12>
     b28:	6b21      	ldr	r1, [r4, #48]	; 0x30
     b2a:	b151      	cbz	r1, b42 <__swsetup_r+0xa6>
     b2c:	f104 0340 	add.w	r3, r4, #64	; 0x40
     b30:	4299      	cmp	r1, r3
     b32:	d004      	beq.n	b3e <__swsetup_r+0xa2>
     b34:	4628      	mov	r0, r5
     b36:	f000 f9bf 	bl	eb8 <_free_r>
     b3a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
     b3e:	2300      	movs	r3, #0
     b40:	6323      	str	r3, [r4, #48]	; 0x30
     b42:	2300      	movs	r3, #0
     b44:	6920      	ldr	r0, [r4, #16]
     b46:	6063      	str	r3, [r4, #4]
     b48:	f022 0224 	bic.w	r2, r2, #36	; 0x24
     b4c:	6020      	str	r0, [r4, #0]
     b4e:	e7c5      	b.n	adc <__swsetup_r+0x40>
     b50:	f042 0240 	orr.w	r2, r2, #64	; 0x40
     b54:	2309      	movs	r3, #9
     b56:	602b      	str	r3, [r5, #0]
     b58:	f04f 30ff 	mov.w	r0, #4294967295
     b5c:	81a2      	strh	r2, [r4, #12]
     b5e:	bd38      	pop	{r3, r4, r5, pc}
     b60:	20000000 	.word	0x20000000

00000b64 <register_fini>:
     b64:	4b02      	ldr	r3, [pc, #8]	; (b70 <register_fini+0xc>)
     b66:	b113      	cbz	r3, b6e <register_fini+0xa>
     b68:	4802      	ldr	r0, [pc, #8]	; (b74 <register_fini+0x10>)
     b6a:	f000 b805 	b.w	b78 <atexit>
     b6e:	4770      	bx	lr
     b70:	00000000 	.word	0x00000000
     b74:	00000de5 	.word	0x00000de5

00000b78 <atexit>:
     b78:	2300      	movs	r3, #0
     b7a:	4601      	mov	r1, r0
     b7c:	461a      	mov	r2, r3
     b7e:	4618      	mov	r0, r3
     b80:	f001 baca 	b.w	2118 <__register_exitproc>

00000b84 <__sflush_r>:
     b84:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
     b88:	b29a      	uxth	r2, r3
     b8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     b8e:	460d      	mov	r5, r1
     b90:	0711      	lsls	r1, r2, #28
     b92:	4680      	mov	r8, r0
     b94:	d43a      	bmi.n	c0c <__sflush_r+0x88>
     b96:	686a      	ldr	r2, [r5, #4]
     b98:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
     b9c:	2a00      	cmp	r2, #0
     b9e:	81ab      	strh	r3, [r5, #12]
     ba0:	dd6f      	ble.n	c82 <__sflush_r+0xfe>
     ba2:	6aac      	ldr	r4, [r5, #40]	; 0x28
     ba4:	2c00      	cmp	r4, #0
     ba6:	d049      	beq.n	c3c <__sflush_r+0xb8>
     ba8:	2200      	movs	r2, #0
     baa:	b29b      	uxth	r3, r3
     bac:	f8d8 6000 	ldr.w	r6, [r8]
     bb0:	f8c8 2000 	str.w	r2, [r8]
     bb4:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
     bb8:	d067      	beq.n	c8a <__sflush_r+0x106>
     bba:	6d2a      	ldr	r2, [r5, #80]	; 0x50
     bbc:	075f      	lsls	r7, r3, #29
     bbe:	d505      	bpl.n	bcc <__sflush_r+0x48>
     bc0:	6869      	ldr	r1, [r5, #4]
     bc2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
     bc4:	1a52      	subs	r2, r2, r1
     bc6:	b10b      	cbz	r3, bcc <__sflush_r+0x48>
     bc8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
     bca:	1ad2      	subs	r2, r2, r3
     bcc:	2300      	movs	r3, #0
     bce:	69e9      	ldr	r1, [r5, #28]
     bd0:	4640      	mov	r0, r8
     bd2:	47a0      	blx	r4
     bd4:	1c44      	adds	r4, r0, #1
     bd6:	d03c      	beq.n	c52 <__sflush_r+0xce>
     bd8:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
     bdc:	692a      	ldr	r2, [r5, #16]
     bde:	602a      	str	r2, [r5, #0]
     be0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
     be4:	2200      	movs	r2, #0
     be6:	81ab      	strh	r3, [r5, #12]
     be8:	04db      	lsls	r3, r3, #19
     bea:	606a      	str	r2, [r5, #4]
     bec:	d447      	bmi.n	c7e <__sflush_r+0xfa>
     bee:	6b29      	ldr	r1, [r5, #48]	; 0x30
     bf0:	f8c8 6000 	str.w	r6, [r8]
     bf4:	b311      	cbz	r1, c3c <__sflush_r+0xb8>
     bf6:	f105 0340 	add.w	r3, r5, #64	; 0x40
     bfa:	4299      	cmp	r1, r3
     bfc:	d002      	beq.n	c04 <__sflush_r+0x80>
     bfe:	4640      	mov	r0, r8
     c00:	f000 f95a 	bl	eb8 <_free_r>
     c04:	2000      	movs	r0, #0
     c06:	6328      	str	r0, [r5, #48]	; 0x30
     c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     c0c:	692e      	ldr	r6, [r5, #16]
     c0e:	b1ae      	cbz	r6, c3c <__sflush_r+0xb8>
     c10:	682c      	ldr	r4, [r5, #0]
     c12:	602e      	str	r6, [r5, #0]
     c14:	0791      	lsls	r1, r2, #30
     c16:	bf0c      	ite	eq
     c18:	696b      	ldreq	r3, [r5, #20]
     c1a:	2300      	movne	r3, #0
     c1c:	1ba4      	subs	r4, r4, r6
     c1e:	60ab      	str	r3, [r5, #8]
     c20:	e00a      	b.n	c38 <__sflush_r+0xb4>
     c22:	4623      	mov	r3, r4
     c24:	4632      	mov	r2, r6
     c26:	6a6f      	ldr	r7, [r5, #36]	; 0x24
     c28:	69e9      	ldr	r1, [r5, #28]
     c2a:	4640      	mov	r0, r8
     c2c:	47b8      	blx	r7
     c2e:	2800      	cmp	r0, #0
     c30:	eba4 0400 	sub.w	r4, r4, r0
     c34:	4406      	add	r6, r0
     c36:	dd04      	ble.n	c42 <__sflush_r+0xbe>
     c38:	2c00      	cmp	r4, #0
     c3a:	dcf2      	bgt.n	c22 <__sflush_r+0x9e>
     c3c:	2000      	movs	r0, #0
     c3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     c42:	89ab      	ldrh	r3, [r5, #12]
     c44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
     c48:	81ab      	strh	r3, [r5, #12]
     c4a:	f04f 30ff 	mov.w	r0, #4294967295
     c4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     c52:	f8d8 4000 	ldr.w	r4, [r8]
     c56:	2c1d      	cmp	r4, #29
     c58:	d8f3      	bhi.n	c42 <__sflush_r+0xbe>
     c5a:	4b19      	ldr	r3, [pc, #100]	; (cc0 <__sflush_r+0x13c>)
     c5c:	40e3      	lsrs	r3, r4
     c5e:	43db      	mvns	r3, r3
     c60:	f013 0301 	ands.w	r3, r3, #1
     c64:	d1ed      	bne.n	c42 <__sflush_r+0xbe>
     c66:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
     c6a:	606b      	str	r3, [r5, #4]
     c6c:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
     c70:	6929      	ldr	r1, [r5, #16]
     c72:	81ab      	strh	r3, [r5, #12]
     c74:	04da      	lsls	r2, r3, #19
     c76:	6029      	str	r1, [r5, #0]
     c78:	d5b9      	bpl.n	bee <__sflush_r+0x6a>
     c7a:	2c00      	cmp	r4, #0
     c7c:	d1b7      	bne.n	bee <__sflush_r+0x6a>
     c7e:	6528      	str	r0, [r5, #80]	; 0x50
     c80:	e7b5      	b.n	bee <__sflush_r+0x6a>
     c82:	6bea      	ldr	r2, [r5, #60]	; 0x3c
     c84:	2a00      	cmp	r2, #0
     c86:	dc8c      	bgt.n	ba2 <__sflush_r+0x1e>
     c88:	e7d8      	b.n	c3c <__sflush_r+0xb8>
     c8a:	2301      	movs	r3, #1
     c8c:	69e9      	ldr	r1, [r5, #28]
     c8e:	4640      	mov	r0, r8
     c90:	47a0      	blx	r4
     c92:	1c43      	adds	r3, r0, #1
     c94:	4602      	mov	r2, r0
     c96:	d002      	beq.n	c9e <__sflush_r+0x11a>
     c98:	89ab      	ldrh	r3, [r5, #12]
     c9a:	6aac      	ldr	r4, [r5, #40]	; 0x28
     c9c:	e78e      	b.n	bbc <__sflush_r+0x38>
     c9e:	f8d8 3000 	ldr.w	r3, [r8]
     ca2:	2b00      	cmp	r3, #0
     ca4:	d0f8      	beq.n	c98 <__sflush_r+0x114>
     ca6:	2b1d      	cmp	r3, #29
     ca8:	d001      	beq.n	cae <__sflush_r+0x12a>
     caa:	2b16      	cmp	r3, #22
     cac:	d102      	bne.n	cb4 <__sflush_r+0x130>
     cae:	f8c8 6000 	str.w	r6, [r8]
     cb2:	e7c3      	b.n	c3c <__sflush_r+0xb8>
     cb4:	89ab      	ldrh	r3, [r5, #12]
     cb6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
     cba:	81ab      	strh	r3, [r5, #12]
     cbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     cc0:	20400001 	.word	0x20400001

00000cc4 <_fflush_r>:
     cc4:	b538      	push	{r3, r4, r5, lr}
     cc6:	460d      	mov	r5, r1
     cc8:	4604      	mov	r4, r0
     cca:	b108      	cbz	r0, cd0 <_fflush_r+0xc>
     ccc:	6b83      	ldr	r3, [r0, #56]	; 0x38
     cce:	b1bb      	cbz	r3, d00 <_fflush_r+0x3c>
     cd0:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
     cd4:	b188      	cbz	r0, cfa <_fflush_r+0x36>
     cd6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
     cd8:	07db      	lsls	r3, r3, #31
     cda:	d401      	bmi.n	ce0 <_fflush_r+0x1c>
     cdc:	0581      	lsls	r1, r0, #22
     cde:	d517      	bpl.n	d10 <_fflush_r+0x4c>
     ce0:	4620      	mov	r0, r4
     ce2:	4629      	mov	r1, r5
     ce4:	f7ff ff4e 	bl	b84 <__sflush_r>
     ce8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
     cea:	07da      	lsls	r2, r3, #31
     cec:	4604      	mov	r4, r0
     cee:	d402      	bmi.n	cf6 <_fflush_r+0x32>
     cf0:	89ab      	ldrh	r3, [r5, #12]
     cf2:	059b      	lsls	r3, r3, #22
     cf4:	d507      	bpl.n	d06 <_fflush_r+0x42>
     cf6:	4620      	mov	r0, r4
     cf8:	bd38      	pop	{r3, r4, r5, pc}
     cfa:	4604      	mov	r4, r0
     cfc:	4620      	mov	r0, r4
     cfe:	bd38      	pop	{r3, r4, r5, pc}
     d00:	f000 f838 	bl	d74 <__sinit>
     d04:	e7e4      	b.n	cd0 <_fflush_r+0xc>
     d06:	6da8      	ldr	r0, [r5, #88]	; 0x58
     d08:	f000 fb64 	bl	13d4 <__retarget_lock_release_recursive>
     d0c:	4620      	mov	r0, r4
     d0e:	bd38      	pop	{r3, r4, r5, pc}
     d10:	6da8      	ldr	r0, [r5, #88]	; 0x58
     d12:	f000 fb5d 	bl	13d0 <__retarget_lock_acquire_recursive>
     d16:	e7e3      	b.n	ce0 <_fflush_r+0x1c>

00000d18 <_cleanup_r>:
     d18:	4901      	ldr	r1, [pc, #4]	; (d20 <_cleanup_r+0x8>)
     d1a:	f000 bb2b 	b.w	1374 <_fwalk_reent>
     d1e:	bf00      	nop
     d20:	00002201 	.word	0x00002201

00000d24 <std.isra.0>:
     d24:	b510      	push	{r4, lr}
     d26:	2300      	movs	r3, #0
     d28:	4604      	mov	r4, r0
     d2a:	8181      	strh	r1, [r0, #12]
     d2c:	81c2      	strh	r2, [r0, #14]
     d2e:	6003      	str	r3, [r0, #0]
     d30:	6043      	str	r3, [r0, #4]
     d32:	6083      	str	r3, [r0, #8]
     d34:	6643      	str	r3, [r0, #100]	; 0x64
     d36:	6103      	str	r3, [r0, #16]
     d38:	6143      	str	r3, [r0, #20]
     d3a:	6183      	str	r3, [r0, #24]
     d3c:	4619      	mov	r1, r3
     d3e:	2208      	movs	r2, #8
     d40:	305c      	adds	r0, #92	; 0x5c
     d42:	f7ff fcbb 	bl	6bc <memset>
     d46:	4807      	ldr	r0, [pc, #28]	; (d64 <std.isra.0+0x40>)
     d48:	4907      	ldr	r1, [pc, #28]	; (d68 <std.isra.0+0x44>)
     d4a:	4a08      	ldr	r2, [pc, #32]	; (d6c <std.isra.0+0x48>)
     d4c:	4b08      	ldr	r3, [pc, #32]	; (d70 <std.isra.0+0x4c>)
     d4e:	6220      	str	r0, [r4, #32]
     d50:	61e4      	str	r4, [r4, #28]
     d52:	6261      	str	r1, [r4, #36]	; 0x24
     d54:	62a2      	str	r2, [r4, #40]	; 0x28
     d56:	62e3      	str	r3, [r4, #44]	; 0x2c
     d58:	f104 0058 	add.w	r0, r4, #88	; 0x58
     d5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     d60:	f000 bb32 	b.w	13c8 <__retarget_lock_init_recursive>
     d64:	00002065 	.word	0x00002065
     d68:	00002089 	.word	0x00002089
     d6c:	000020c5 	.word	0x000020c5
     d70:	000020e5 	.word	0x000020e5

00000d74 <__sinit>:
     d74:	b510      	push	{r4, lr}
     d76:	4604      	mov	r4, r0
     d78:	4812      	ldr	r0, [pc, #72]	; (dc4 <__sinit+0x50>)
     d7a:	f000 fb29 	bl	13d0 <__retarget_lock_acquire_recursive>
     d7e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
     d80:	b9d2      	cbnz	r2, db8 <__sinit+0x44>
     d82:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
     d86:	4810      	ldr	r0, [pc, #64]	; (dc8 <__sinit+0x54>)
     d88:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
     d8c:	2103      	movs	r1, #3
     d8e:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
     d92:	63e0      	str	r0, [r4, #60]	; 0x3c
     d94:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
     d98:	6860      	ldr	r0, [r4, #4]
     d9a:	2104      	movs	r1, #4
     d9c:	f7ff ffc2 	bl	d24 <std.isra.0>
     da0:	2201      	movs	r2, #1
     da2:	2109      	movs	r1, #9
     da4:	68a0      	ldr	r0, [r4, #8]
     da6:	f7ff ffbd 	bl	d24 <std.isra.0>
     daa:	2202      	movs	r2, #2
     dac:	2112      	movs	r1, #18
     dae:	68e0      	ldr	r0, [r4, #12]
     db0:	f7ff ffb8 	bl	d24 <std.isra.0>
     db4:	2301      	movs	r3, #1
     db6:	63a3      	str	r3, [r4, #56]	; 0x38
     db8:	4802      	ldr	r0, [pc, #8]	; (dc4 <__sinit+0x50>)
     dba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dbe:	f000 bb09 	b.w	13d4 <__retarget_lock_release_recursive>
     dc2:	bf00      	nop
     dc4:	200008a4 	.word	0x200008a4
     dc8:	00000d19 	.word	0x00000d19

00000dcc <__sfp_lock_acquire>:
     dcc:	4801      	ldr	r0, [pc, #4]	; (dd4 <__sfp_lock_acquire+0x8>)
     dce:	f000 baff 	b.w	13d0 <__retarget_lock_acquire_recursive>
     dd2:	bf00      	nop
     dd4:	200008b8 	.word	0x200008b8

00000dd8 <__sfp_lock_release>:
     dd8:	4801      	ldr	r0, [pc, #4]	; (de0 <__sfp_lock_release+0x8>)
     dda:	f000 bafb 	b.w	13d4 <__retarget_lock_release_recursive>
     dde:	bf00      	nop
     de0:	200008b8 	.word	0x200008b8

00000de4 <__libc_fini_array>:
     de4:	b538      	push	{r3, r4, r5, lr}
     de6:	4c0a      	ldr	r4, [pc, #40]	; (e10 <__libc_fini_array+0x2c>)
     de8:	4d0a      	ldr	r5, [pc, #40]	; (e14 <__libc_fini_array+0x30>)
     dea:	1b64      	subs	r4, r4, r5
     dec:	10a4      	asrs	r4, r4, #2
     dee:	d00a      	beq.n	e06 <__libc_fini_array+0x22>
     df0:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
     df4:	3b01      	subs	r3, #1
     df6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
     dfa:	3c01      	subs	r4, #1
     dfc:	f855 3904 	ldr.w	r3, [r5], #-4
     e00:	4798      	blx	r3
     e02:	2c00      	cmp	r4, #0
     e04:	d1f9      	bne.n	dfa <__libc_fini_array+0x16>
     e06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
     e0a:	f001 bac5 	b.w	2398 <_fini>
     e0e:	bf00      	nop
     e10:	000023a8 	.word	0x000023a8
     e14:	000023a4 	.word	0x000023a4

00000e18 <_malloc_trim_r>:
     e18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     e1a:	4f24      	ldr	r7, [pc, #144]	; (eac <_malloc_trim_r+0x94>)
     e1c:	460c      	mov	r4, r1
     e1e:	4606      	mov	r6, r0
     e20:	f000 ff5c 	bl	1cdc <__malloc_lock>
     e24:	68bb      	ldr	r3, [r7, #8]
     e26:	685d      	ldr	r5, [r3, #4]
     e28:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
     e2c:	310f      	adds	r1, #15
     e2e:	f025 0503 	bic.w	r5, r5, #3
     e32:	4429      	add	r1, r5
     e34:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
     e38:	f021 010f 	bic.w	r1, r1, #15
     e3c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
     e40:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
     e44:	db07      	blt.n	e56 <_malloc_trim_r+0x3e>
     e46:	2100      	movs	r1, #0
     e48:	4630      	mov	r0, r6
     e4a:	f001 f8f9 	bl	2040 <_sbrk_r>
     e4e:	68bb      	ldr	r3, [r7, #8]
     e50:	442b      	add	r3, r5
     e52:	4298      	cmp	r0, r3
     e54:	d004      	beq.n	e60 <_malloc_trim_r+0x48>
     e56:	4630      	mov	r0, r6
     e58:	f000 ff46 	bl	1ce8 <__malloc_unlock>
     e5c:	2000      	movs	r0, #0
     e5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     e60:	4261      	negs	r1, r4
     e62:	4630      	mov	r0, r6
     e64:	f001 f8ec 	bl	2040 <_sbrk_r>
     e68:	3001      	adds	r0, #1
     e6a:	d00d      	beq.n	e88 <_malloc_trim_r+0x70>
     e6c:	4b10      	ldr	r3, [pc, #64]	; (eb0 <_malloc_trim_r+0x98>)
     e6e:	68ba      	ldr	r2, [r7, #8]
     e70:	6819      	ldr	r1, [r3, #0]
     e72:	1b2d      	subs	r5, r5, r4
     e74:	f045 0501 	orr.w	r5, r5, #1
     e78:	4630      	mov	r0, r6
     e7a:	1b09      	subs	r1, r1, r4
     e7c:	6055      	str	r5, [r2, #4]
     e7e:	6019      	str	r1, [r3, #0]
     e80:	f000 ff32 	bl	1ce8 <__malloc_unlock>
     e84:	2001      	movs	r0, #1
     e86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     e88:	2100      	movs	r1, #0
     e8a:	4630      	mov	r0, r6
     e8c:	f001 f8d8 	bl	2040 <_sbrk_r>
     e90:	68ba      	ldr	r2, [r7, #8]
     e92:	1a83      	subs	r3, r0, r2
     e94:	2b0f      	cmp	r3, #15
     e96:	ddde      	ble.n	e56 <_malloc_trim_r+0x3e>
     e98:	4c06      	ldr	r4, [pc, #24]	; (eb4 <_malloc_trim_r+0x9c>)
     e9a:	4905      	ldr	r1, [pc, #20]	; (eb0 <_malloc_trim_r+0x98>)
     e9c:	6824      	ldr	r4, [r4, #0]
     e9e:	f043 0301 	orr.w	r3, r3, #1
     ea2:	1b00      	subs	r0, r0, r4
     ea4:	6053      	str	r3, [r2, #4]
     ea6:	6008      	str	r0, [r1, #0]
     ea8:	e7d5      	b.n	e56 <_malloc_trim_r+0x3e>
     eaa:	bf00      	nop
     eac:	20000434 	.word	0x20000434
     eb0:	20000864 	.word	0x20000864
     eb4:	2000083c 	.word	0x2000083c

00000eb8 <_free_r>:
     eb8:	2900      	cmp	r1, #0
     eba:	d044      	beq.n	f46 <_free_r+0x8e>
     ebc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     ec0:	460d      	mov	r5, r1
     ec2:	4680      	mov	r8, r0
     ec4:	f000 ff0a 	bl	1cdc <__malloc_lock>
     ec8:	f855 7c04 	ldr.w	r7, [r5, #-4]
     ecc:	4969      	ldr	r1, [pc, #420]	; (1074 <_free_r+0x1bc>)
     ece:	f027 0301 	bic.w	r3, r7, #1
     ed2:	f1a5 0408 	sub.w	r4, r5, #8
     ed6:	18e2      	adds	r2, r4, r3
     ed8:	688e      	ldr	r6, [r1, #8]
     eda:	6850      	ldr	r0, [r2, #4]
     edc:	42b2      	cmp	r2, r6
     ede:	f020 0003 	bic.w	r0, r0, #3
     ee2:	d05e      	beq.n	fa2 <_free_r+0xea>
     ee4:	07fe      	lsls	r6, r7, #31
     ee6:	6050      	str	r0, [r2, #4]
     ee8:	d40b      	bmi.n	f02 <_free_r+0x4a>
     eea:	f855 7c08 	ldr.w	r7, [r5, #-8]
     eee:	1be4      	subs	r4, r4, r7
     ef0:	f101 0e08 	add.w	lr, r1, #8
     ef4:	68a5      	ldr	r5, [r4, #8]
     ef6:	4575      	cmp	r5, lr
     ef8:	443b      	add	r3, r7
     efa:	d06d      	beq.n	fd8 <_free_r+0x120>
     efc:	68e7      	ldr	r7, [r4, #12]
     efe:	60ef      	str	r7, [r5, #12]
     f00:	60bd      	str	r5, [r7, #8]
     f02:	1815      	adds	r5, r2, r0
     f04:	686d      	ldr	r5, [r5, #4]
     f06:	07ed      	lsls	r5, r5, #31
     f08:	d53e      	bpl.n	f88 <_free_r+0xd0>
     f0a:	f043 0201 	orr.w	r2, r3, #1
     f0e:	6062      	str	r2, [r4, #4]
     f10:	50e3      	str	r3, [r4, r3]
     f12:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
     f16:	d217      	bcs.n	f48 <_free_r+0x90>
     f18:	08db      	lsrs	r3, r3, #3
     f1a:	1c58      	adds	r0, r3, #1
     f1c:	109a      	asrs	r2, r3, #2
     f1e:	684d      	ldr	r5, [r1, #4]
     f20:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
     f24:	60a7      	str	r7, [r4, #8]
     f26:	2301      	movs	r3, #1
     f28:	4093      	lsls	r3, r2
     f2a:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
     f2e:	432b      	orrs	r3, r5
     f30:	3a08      	subs	r2, #8
     f32:	60e2      	str	r2, [r4, #12]
     f34:	604b      	str	r3, [r1, #4]
     f36:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
     f3a:	60fc      	str	r4, [r7, #12]
     f3c:	4640      	mov	r0, r8
     f3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
     f42:	f000 bed1 	b.w	1ce8 <__malloc_unlock>
     f46:	4770      	bx	lr
     f48:	0a5a      	lsrs	r2, r3, #9
     f4a:	2a04      	cmp	r2, #4
     f4c:	d852      	bhi.n	ff4 <_free_r+0x13c>
     f4e:	099a      	lsrs	r2, r3, #6
     f50:	f102 0739 	add.w	r7, r2, #57	; 0x39
     f54:	00ff      	lsls	r7, r7, #3
     f56:	f102 0538 	add.w	r5, r2, #56	; 0x38
     f5a:	19c8      	adds	r0, r1, r7
     f5c:	59ca      	ldr	r2, [r1, r7]
     f5e:	3808      	subs	r0, #8
     f60:	4290      	cmp	r0, r2
     f62:	d04f      	beq.n	1004 <_free_r+0x14c>
     f64:	6851      	ldr	r1, [r2, #4]
     f66:	f021 0103 	bic.w	r1, r1, #3
     f6a:	428b      	cmp	r3, r1
     f6c:	d232      	bcs.n	fd4 <_free_r+0x11c>
     f6e:	6892      	ldr	r2, [r2, #8]
     f70:	4290      	cmp	r0, r2
     f72:	d1f7      	bne.n	f64 <_free_r+0xac>
     f74:	68c3      	ldr	r3, [r0, #12]
     f76:	60a0      	str	r0, [r4, #8]
     f78:	60e3      	str	r3, [r4, #12]
     f7a:	609c      	str	r4, [r3, #8]
     f7c:	60c4      	str	r4, [r0, #12]
     f7e:	4640      	mov	r0, r8
     f80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
     f84:	f000 beb0 	b.w	1ce8 <__malloc_unlock>
     f88:	6895      	ldr	r5, [r2, #8]
     f8a:	4f3b      	ldr	r7, [pc, #236]	; (1078 <_free_r+0x1c0>)
     f8c:	42bd      	cmp	r5, r7
     f8e:	4403      	add	r3, r0
     f90:	d040      	beq.n	1014 <_free_r+0x15c>
     f92:	68d0      	ldr	r0, [r2, #12]
     f94:	60e8      	str	r0, [r5, #12]
     f96:	f043 0201 	orr.w	r2, r3, #1
     f9a:	6085      	str	r5, [r0, #8]
     f9c:	6062      	str	r2, [r4, #4]
     f9e:	50e3      	str	r3, [r4, r3]
     fa0:	e7b7      	b.n	f12 <_free_r+0x5a>
     fa2:	07ff      	lsls	r7, r7, #31
     fa4:	4403      	add	r3, r0
     fa6:	d407      	bmi.n	fb8 <_free_r+0x100>
     fa8:	f855 2c08 	ldr.w	r2, [r5, #-8]
     fac:	1aa4      	subs	r4, r4, r2
     fae:	4413      	add	r3, r2
     fb0:	68a0      	ldr	r0, [r4, #8]
     fb2:	68e2      	ldr	r2, [r4, #12]
     fb4:	60c2      	str	r2, [r0, #12]
     fb6:	6090      	str	r0, [r2, #8]
     fb8:	4a30      	ldr	r2, [pc, #192]	; (107c <_free_r+0x1c4>)
     fba:	6812      	ldr	r2, [r2, #0]
     fbc:	f043 0001 	orr.w	r0, r3, #1
     fc0:	4293      	cmp	r3, r2
     fc2:	6060      	str	r0, [r4, #4]
     fc4:	608c      	str	r4, [r1, #8]
     fc6:	d3b9      	bcc.n	f3c <_free_r+0x84>
     fc8:	4b2d      	ldr	r3, [pc, #180]	; (1080 <_free_r+0x1c8>)
     fca:	4640      	mov	r0, r8
     fcc:	6819      	ldr	r1, [r3, #0]
     fce:	f7ff ff23 	bl	e18 <_malloc_trim_r>
     fd2:	e7b3      	b.n	f3c <_free_r+0x84>
     fd4:	4610      	mov	r0, r2
     fd6:	e7cd      	b.n	f74 <_free_r+0xbc>
     fd8:	1811      	adds	r1, r2, r0
     fda:	6849      	ldr	r1, [r1, #4]
     fdc:	07c9      	lsls	r1, r1, #31
     fde:	d444      	bmi.n	106a <_free_r+0x1b2>
     fe0:	6891      	ldr	r1, [r2, #8]
     fe2:	68d2      	ldr	r2, [r2, #12]
     fe4:	60ca      	str	r2, [r1, #12]
     fe6:	4403      	add	r3, r0
     fe8:	f043 0001 	orr.w	r0, r3, #1
     fec:	6091      	str	r1, [r2, #8]
     fee:	6060      	str	r0, [r4, #4]
     ff0:	50e3      	str	r3, [r4, r3]
     ff2:	e7a3      	b.n	f3c <_free_r+0x84>
     ff4:	2a14      	cmp	r2, #20
     ff6:	d816      	bhi.n	1026 <_free_r+0x16e>
     ff8:	f102 075c 	add.w	r7, r2, #92	; 0x5c
     ffc:	00ff      	lsls	r7, r7, #3
     ffe:	f102 055b 	add.w	r5, r2, #91	; 0x5b
    1002:	e7aa      	b.n	f5a <_free_r+0xa2>
    1004:	10aa      	asrs	r2, r5, #2
    1006:	2301      	movs	r3, #1
    1008:	684d      	ldr	r5, [r1, #4]
    100a:	4093      	lsls	r3, r2
    100c:	432b      	orrs	r3, r5
    100e:	604b      	str	r3, [r1, #4]
    1010:	4603      	mov	r3, r0
    1012:	e7b0      	b.n	f76 <_free_r+0xbe>
    1014:	f043 0201 	orr.w	r2, r3, #1
    1018:	614c      	str	r4, [r1, #20]
    101a:	610c      	str	r4, [r1, #16]
    101c:	60e5      	str	r5, [r4, #12]
    101e:	60a5      	str	r5, [r4, #8]
    1020:	6062      	str	r2, [r4, #4]
    1022:	50e3      	str	r3, [r4, r3]
    1024:	e78a      	b.n	f3c <_free_r+0x84>
    1026:	2a54      	cmp	r2, #84	; 0x54
    1028:	d806      	bhi.n	1038 <_free_r+0x180>
    102a:	0b1a      	lsrs	r2, r3, #12
    102c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
    1030:	00ff      	lsls	r7, r7, #3
    1032:	f102 056e 	add.w	r5, r2, #110	; 0x6e
    1036:	e790      	b.n	f5a <_free_r+0xa2>
    1038:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
    103c:	d806      	bhi.n	104c <_free_r+0x194>
    103e:	0bda      	lsrs	r2, r3, #15
    1040:	f102 0778 	add.w	r7, r2, #120	; 0x78
    1044:	00ff      	lsls	r7, r7, #3
    1046:	f102 0577 	add.w	r5, r2, #119	; 0x77
    104a:	e786      	b.n	f5a <_free_r+0xa2>
    104c:	f240 5054 	movw	r0, #1364	; 0x554
    1050:	4282      	cmp	r2, r0
    1052:	d806      	bhi.n	1062 <_free_r+0x1aa>
    1054:	0c9a      	lsrs	r2, r3, #18
    1056:	f102 077d 	add.w	r7, r2, #125	; 0x7d
    105a:	00ff      	lsls	r7, r7, #3
    105c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
    1060:	e77b      	b.n	f5a <_free_r+0xa2>
    1062:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
    1066:	257e      	movs	r5, #126	; 0x7e
    1068:	e777      	b.n	f5a <_free_r+0xa2>
    106a:	f043 0101 	orr.w	r1, r3, #1
    106e:	6061      	str	r1, [r4, #4]
    1070:	6013      	str	r3, [r2, #0]
    1072:	e763      	b.n	f3c <_free_r+0x84>
    1074:	20000434 	.word	0x20000434
    1078:	2000043c 	.word	0x2000043c
    107c:	20000840 	.word	0x20000840
    1080:	20000894 	.word	0x20000894

00001084 <__sfvwrite_r>:
    1084:	6893      	ldr	r3, [r2, #8]
    1086:	2b00      	cmp	r3, #0
    1088:	d073      	beq.n	1172 <__sfvwrite_r+0xee>
    108a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    108e:	898b      	ldrh	r3, [r1, #12]
    1090:	b083      	sub	sp, #12
    1092:	460c      	mov	r4, r1
    1094:	0719      	lsls	r1, r3, #28
    1096:	9000      	str	r0, [sp, #0]
    1098:	4616      	mov	r6, r2
    109a:	d526      	bpl.n	10ea <__sfvwrite_r+0x66>
    109c:	6922      	ldr	r2, [r4, #16]
    109e:	b322      	cbz	r2, 10ea <__sfvwrite_r+0x66>
    10a0:	f013 0002 	ands.w	r0, r3, #2
    10a4:	6835      	ldr	r5, [r6, #0]
    10a6:	d02c      	beq.n	1102 <__sfvwrite_r+0x7e>
    10a8:	f04f 0900 	mov.w	r9, #0
    10ac:	4fb0      	ldr	r7, [pc, #704]	; (1370 <__sfvwrite_r+0x2ec>)
    10ae:	46c8      	mov	r8, r9
    10b0:	46b2      	mov	sl, r6
    10b2:	45b8      	cmp	r8, r7
    10b4:	4643      	mov	r3, r8
    10b6:	464a      	mov	r2, r9
    10b8:	bf28      	it	cs
    10ba:	463b      	movcs	r3, r7
    10bc:	9800      	ldr	r0, [sp, #0]
    10be:	f1b8 0f00 	cmp.w	r8, #0
    10c2:	d050      	beq.n	1166 <__sfvwrite_r+0xe2>
    10c4:	69e1      	ldr	r1, [r4, #28]
    10c6:	6a66      	ldr	r6, [r4, #36]	; 0x24
    10c8:	47b0      	blx	r6
    10ca:	2800      	cmp	r0, #0
    10cc:	dd58      	ble.n	1180 <__sfvwrite_r+0xfc>
    10ce:	f8da 3008 	ldr.w	r3, [sl, #8]
    10d2:	1a1b      	subs	r3, r3, r0
    10d4:	4481      	add	r9, r0
    10d6:	eba8 0800 	sub.w	r8, r8, r0
    10da:	f8ca 3008 	str.w	r3, [sl, #8]
    10de:	2b00      	cmp	r3, #0
    10e0:	d1e7      	bne.n	10b2 <__sfvwrite_r+0x2e>
    10e2:	2000      	movs	r0, #0
    10e4:	b003      	add	sp, #12
    10e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10ea:	4621      	mov	r1, r4
    10ec:	9800      	ldr	r0, [sp, #0]
    10ee:	f7ff fcd5 	bl	a9c <__swsetup_r>
    10f2:	2800      	cmp	r0, #0
    10f4:	f040 8133 	bne.w	135e <__sfvwrite_r+0x2da>
    10f8:	89a3      	ldrh	r3, [r4, #12]
    10fa:	6835      	ldr	r5, [r6, #0]
    10fc:	f013 0002 	ands.w	r0, r3, #2
    1100:	d1d2      	bne.n	10a8 <__sfvwrite_r+0x24>
    1102:	f013 0901 	ands.w	r9, r3, #1
    1106:	d145      	bne.n	1194 <__sfvwrite_r+0x110>
    1108:	464f      	mov	r7, r9
    110a:	9601      	str	r6, [sp, #4]
    110c:	b337      	cbz	r7, 115c <__sfvwrite_r+0xd8>
    110e:	059a      	lsls	r2, r3, #22
    1110:	f8d4 8008 	ldr.w	r8, [r4, #8]
    1114:	f140 8083 	bpl.w	121e <__sfvwrite_r+0x19a>
    1118:	4547      	cmp	r7, r8
    111a:	46c3      	mov	fp, r8
    111c:	f0c0 80ab 	bcc.w	1276 <__sfvwrite_r+0x1f2>
    1120:	f413 6f90 	tst.w	r3, #1152	; 0x480
    1124:	f040 80ac 	bne.w	1280 <__sfvwrite_r+0x1fc>
    1128:	6820      	ldr	r0, [r4, #0]
    112a:	46ba      	mov	sl, r7
    112c:	465a      	mov	r2, fp
    112e:	4649      	mov	r1, r9
    1130:	f000 fd70 	bl	1c14 <memmove>
    1134:	68a2      	ldr	r2, [r4, #8]
    1136:	6823      	ldr	r3, [r4, #0]
    1138:	eba2 0208 	sub.w	r2, r2, r8
    113c:	445b      	add	r3, fp
    113e:	60a2      	str	r2, [r4, #8]
    1140:	6023      	str	r3, [r4, #0]
    1142:	9a01      	ldr	r2, [sp, #4]
    1144:	6893      	ldr	r3, [r2, #8]
    1146:	eba3 030a 	sub.w	r3, r3, sl
    114a:	44d1      	add	r9, sl
    114c:	eba7 070a 	sub.w	r7, r7, sl
    1150:	6093      	str	r3, [r2, #8]
    1152:	2b00      	cmp	r3, #0
    1154:	d0c5      	beq.n	10e2 <__sfvwrite_r+0x5e>
    1156:	89a3      	ldrh	r3, [r4, #12]
    1158:	2f00      	cmp	r7, #0
    115a:	d1d8      	bne.n	110e <__sfvwrite_r+0x8a>
    115c:	f8d5 9000 	ldr.w	r9, [r5]
    1160:	686f      	ldr	r7, [r5, #4]
    1162:	3508      	adds	r5, #8
    1164:	e7d2      	b.n	110c <__sfvwrite_r+0x88>
    1166:	f8d5 9000 	ldr.w	r9, [r5]
    116a:	f8d5 8004 	ldr.w	r8, [r5, #4]
    116e:	3508      	adds	r5, #8
    1170:	e79f      	b.n	10b2 <__sfvwrite_r+0x2e>
    1172:	2000      	movs	r0, #0
    1174:	4770      	bx	lr
    1176:	4621      	mov	r1, r4
    1178:	9800      	ldr	r0, [sp, #0]
    117a:	f7ff fda3 	bl	cc4 <_fflush_r>
    117e:	b370      	cbz	r0, 11de <__sfvwrite_r+0x15a>
    1180:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    1184:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1188:	f04f 30ff 	mov.w	r0, #4294967295
    118c:	81a3      	strh	r3, [r4, #12]
    118e:	b003      	add	sp, #12
    1190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1194:	4681      	mov	r9, r0
    1196:	4633      	mov	r3, r6
    1198:	464e      	mov	r6, r9
    119a:	46a8      	mov	r8, r5
    119c:	469a      	mov	sl, r3
    119e:	464d      	mov	r5, r9
    11a0:	b34e      	cbz	r6, 11f6 <__sfvwrite_r+0x172>
    11a2:	b380      	cbz	r0, 1206 <__sfvwrite_r+0x182>
    11a4:	6820      	ldr	r0, [r4, #0]
    11a6:	6923      	ldr	r3, [r4, #16]
    11a8:	6962      	ldr	r2, [r4, #20]
    11aa:	45b1      	cmp	r9, r6
    11ac:	46cb      	mov	fp, r9
    11ae:	bf28      	it	cs
    11b0:	46b3      	movcs	fp, r6
    11b2:	4298      	cmp	r0, r3
    11b4:	465f      	mov	r7, fp
    11b6:	d904      	bls.n	11c2 <__sfvwrite_r+0x13e>
    11b8:	68a3      	ldr	r3, [r4, #8]
    11ba:	4413      	add	r3, r2
    11bc:	459b      	cmp	fp, r3
    11be:	f300 80a6 	bgt.w	130e <__sfvwrite_r+0x28a>
    11c2:	4593      	cmp	fp, r2
    11c4:	db4b      	blt.n	125e <__sfvwrite_r+0x1da>
    11c6:	4613      	mov	r3, r2
    11c8:	6a67      	ldr	r7, [r4, #36]	; 0x24
    11ca:	69e1      	ldr	r1, [r4, #28]
    11cc:	9800      	ldr	r0, [sp, #0]
    11ce:	462a      	mov	r2, r5
    11d0:	47b8      	blx	r7
    11d2:	1e07      	subs	r7, r0, #0
    11d4:	ddd4      	ble.n	1180 <__sfvwrite_r+0xfc>
    11d6:	ebb9 0907 	subs.w	r9, r9, r7
    11da:	d0cc      	beq.n	1176 <__sfvwrite_r+0xf2>
    11dc:	2001      	movs	r0, #1
    11de:	f8da 3008 	ldr.w	r3, [sl, #8]
    11e2:	1bdb      	subs	r3, r3, r7
    11e4:	443d      	add	r5, r7
    11e6:	1bf6      	subs	r6, r6, r7
    11e8:	f8ca 3008 	str.w	r3, [sl, #8]
    11ec:	2b00      	cmp	r3, #0
    11ee:	f43f af78 	beq.w	10e2 <__sfvwrite_r+0x5e>
    11f2:	2e00      	cmp	r6, #0
    11f4:	d1d5      	bne.n	11a2 <__sfvwrite_r+0x11e>
    11f6:	f108 0308 	add.w	r3, r8, #8
    11fa:	e913 0060 	ldmdb	r3, {r5, r6}
    11fe:	4698      	mov	r8, r3
    1200:	3308      	adds	r3, #8
    1202:	2e00      	cmp	r6, #0
    1204:	d0f9      	beq.n	11fa <__sfvwrite_r+0x176>
    1206:	4632      	mov	r2, r6
    1208:	210a      	movs	r1, #10
    120a:	4628      	mov	r0, r5
    120c:	f000 fc18 	bl	1a40 <memchr>
    1210:	2800      	cmp	r0, #0
    1212:	f000 80a1 	beq.w	1358 <__sfvwrite_r+0x2d4>
    1216:	3001      	adds	r0, #1
    1218:	eba0 0905 	sub.w	r9, r0, r5
    121c:	e7c2      	b.n	11a4 <__sfvwrite_r+0x120>
    121e:	6820      	ldr	r0, [r4, #0]
    1220:	6923      	ldr	r3, [r4, #16]
    1222:	4298      	cmp	r0, r3
    1224:	d802      	bhi.n	122c <__sfvwrite_r+0x1a8>
    1226:	6963      	ldr	r3, [r4, #20]
    1228:	429f      	cmp	r7, r3
    122a:	d25d      	bcs.n	12e8 <__sfvwrite_r+0x264>
    122c:	45b8      	cmp	r8, r7
    122e:	bf28      	it	cs
    1230:	46b8      	movcs	r8, r7
    1232:	4642      	mov	r2, r8
    1234:	4649      	mov	r1, r9
    1236:	f000 fced 	bl	1c14 <memmove>
    123a:	68a3      	ldr	r3, [r4, #8]
    123c:	6822      	ldr	r2, [r4, #0]
    123e:	eba3 0308 	sub.w	r3, r3, r8
    1242:	4442      	add	r2, r8
    1244:	60a3      	str	r3, [r4, #8]
    1246:	6022      	str	r2, [r4, #0]
    1248:	b10b      	cbz	r3, 124e <__sfvwrite_r+0x1ca>
    124a:	46c2      	mov	sl, r8
    124c:	e779      	b.n	1142 <__sfvwrite_r+0xbe>
    124e:	4621      	mov	r1, r4
    1250:	9800      	ldr	r0, [sp, #0]
    1252:	f7ff fd37 	bl	cc4 <_fflush_r>
    1256:	2800      	cmp	r0, #0
    1258:	d192      	bne.n	1180 <__sfvwrite_r+0xfc>
    125a:	46c2      	mov	sl, r8
    125c:	e771      	b.n	1142 <__sfvwrite_r+0xbe>
    125e:	465a      	mov	r2, fp
    1260:	4629      	mov	r1, r5
    1262:	f000 fcd7 	bl	1c14 <memmove>
    1266:	68a2      	ldr	r2, [r4, #8]
    1268:	6823      	ldr	r3, [r4, #0]
    126a:	eba2 020b 	sub.w	r2, r2, fp
    126e:	445b      	add	r3, fp
    1270:	60a2      	str	r2, [r4, #8]
    1272:	6023      	str	r3, [r4, #0]
    1274:	e7af      	b.n	11d6 <__sfvwrite_r+0x152>
    1276:	6820      	ldr	r0, [r4, #0]
    1278:	46b8      	mov	r8, r7
    127a:	46ba      	mov	sl, r7
    127c:	46bb      	mov	fp, r7
    127e:	e755      	b.n	112c <__sfvwrite_r+0xa8>
    1280:	6962      	ldr	r2, [r4, #20]
    1282:	6820      	ldr	r0, [r4, #0]
    1284:	6921      	ldr	r1, [r4, #16]
    1286:	eb02 0842 	add.w	r8, r2, r2, lsl #1
    128a:	eba0 0a01 	sub.w	sl, r0, r1
    128e:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
    1292:	f10a 0001 	add.w	r0, sl, #1
    1296:	ea4f 0868 	mov.w	r8, r8, asr #1
    129a:	4438      	add	r0, r7
    129c:	4540      	cmp	r0, r8
    129e:	4642      	mov	r2, r8
    12a0:	bf84      	itt	hi
    12a2:	4680      	movhi	r8, r0
    12a4:	4642      	movhi	r2, r8
    12a6:	055b      	lsls	r3, r3, #21
    12a8:	d544      	bpl.n	1334 <__sfvwrite_r+0x2b0>
    12aa:	4611      	mov	r1, r2
    12ac:	9800      	ldr	r0, [sp, #0]
    12ae:	f000 f913 	bl	14d8 <_malloc_r>
    12b2:	4683      	mov	fp, r0
    12b4:	2800      	cmp	r0, #0
    12b6:	d055      	beq.n	1364 <__sfvwrite_r+0x2e0>
    12b8:	4652      	mov	r2, sl
    12ba:	6921      	ldr	r1, [r4, #16]
    12bc:	f000 fc10 	bl	1ae0 <memcpy>
    12c0:	89a3      	ldrh	r3, [r4, #12]
    12c2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    12c6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    12ca:	81a3      	strh	r3, [r4, #12]
    12cc:	eb0b 000a 	add.w	r0, fp, sl
    12d0:	eba8 030a 	sub.w	r3, r8, sl
    12d4:	f8c4 b010 	str.w	fp, [r4, #16]
    12d8:	f8c4 8014 	str.w	r8, [r4, #20]
    12dc:	6020      	str	r0, [r4, #0]
    12de:	60a3      	str	r3, [r4, #8]
    12e0:	46b8      	mov	r8, r7
    12e2:	46ba      	mov	sl, r7
    12e4:	46bb      	mov	fp, r7
    12e6:	e721      	b.n	112c <__sfvwrite_r+0xa8>
    12e8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    12ec:	42b9      	cmp	r1, r7
    12ee:	bf28      	it	cs
    12f0:	4639      	movcs	r1, r7
    12f2:	464a      	mov	r2, r9
    12f4:	fb91 f1f3 	sdiv	r1, r1, r3
    12f8:	9800      	ldr	r0, [sp, #0]
    12fa:	6a66      	ldr	r6, [r4, #36]	; 0x24
    12fc:	fb03 f301 	mul.w	r3, r3, r1
    1300:	69e1      	ldr	r1, [r4, #28]
    1302:	47b0      	blx	r6
    1304:	f1b0 0a00 	subs.w	sl, r0, #0
    1308:	f73f af1b 	bgt.w	1142 <__sfvwrite_r+0xbe>
    130c:	e738      	b.n	1180 <__sfvwrite_r+0xfc>
    130e:	461a      	mov	r2, r3
    1310:	4629      	mov	r1, r5
    1312:	9301      	str	r3, [sp, #4]
    1314:	f000 fc7e 	bl	1c14 <memmove>
    1318:	6822      	ldr	r2, [r4, #0]
    131a:	9b01      	ldr	r3, [sp, #4]
    131c:	9800      	ldr	r0, [sp, #0]
    131e:	441a      	add	r2, r3
    1320:	6022      	str	r2, [r4, #0]
    1322:	4621      	mov	r1, r4
    1324:	f7ff fcce 	bl	cc4 <_fflush_r>
    1328:	9b01      	ldr	r3, [sp, #4]
    132a:	2800      	cmp	r0, #0
    132c:	f47f af28 	bne.w	1180 <__sfvwrite_r+0xfc>
    1330:	461f      	mov	r7, r3
    1332:	e750      	b.n	11d6 <__sfvwrite_r+0x152>
    1334:	9800      	ldr	r0, [sp, #0]
    1336:	f000 fcdd 	bl	1cf4 <_realloc_r>
    133a:	4683      	mov	fp, r0
    133c:	2800      	cmp	r0, #0
    133e:	d1c5      	bne.n	12cc <__sfvwrite_r+0x248>
    1340:	9d00      	ldr	r5, [sp, #0]
    1342:	6921      	ldr	r1, [r4, #16]
    1344:	4628      	mov	r0, r5
    1346:	f7ff fdb7 	bl	eb8 <_free_r>
    134a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    134e:	220c      	movs	r2, #12
    1350:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    1354:	602a      	str	r2, [r5, #0]
    1356:	e715      	b.n	1184 <__sfvwrite_r+0x100>
    1358:	f106 0901 	add.w	r9, r6, #1
    135c:	e722      	b.n	11a4 <__sfvwrite_r+0x120>
    135e:	f04f 30ff 	mov.w	r0, #4294967295
    1362:	e6bf      	b.n	10e4 <__sfvwrite_r+0x60>
    1364:	9a00      	ldr	r2, [sp, #0]
    1366:	230c      	movs	r3, #12
    1368:	6013      	str	r3, [r2, #0]
    136a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    136e:	e709      	b.n	1184 <__sfvwrite_r+0x100>
    1370:	7ffffc00 	.word	0x7ffffc00

00001374 <_fwalk_reent>:
    1374:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    1378:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
    137c:	d01f      	beq.n	13be <_fwalk_reent+0x4a>
    137e:	4688      	mov	r8, r1
    1380:	4606      	mov	r6, r0
    1382:	f04f 0900 	mov.w	r9, #0
    1386:	687d      	ldr	r5, [r7, #4]
    1388:	68bc      	ldr	r4, [r7, #8]
    138a:	3d01      	subs	r5, #1
    138c:	d411      	bmi.n	13b2 <_fwalk_reent+0x3e>
    138e:	89a3      	ldrh	r3, [r4, #12]
    1390:	2b01      	cmp	r3, #1
    1392:	f105 35ff 	add.w	r5, r5, #4294967295
    1396:	d908      	bls.n	13aa <_fwalk_reent+0x36>
    1398:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
    139c:	3301      	adds	r3, #1
    139e:	4621      	mov	r1, r4
    13a0:	4630      	mov	r0, r6
    13a2:	d002      	beq.n	13aa <_fwalk_reent+0x36>
    13a4:	47c0      	blx	r8
    13a6:	ea49 0900 	orr.w	r9, r9, r0
    13aa:	1c6b      	adds	r3, r5, #1
    13ac:	f104 0468 	add.w	r4, r4, #104	; 0x68
    13b0:	d1ed      	bne.n	138e <_fwalk_reent+0x1a>
    13b2:	683f      	ldr	r7, [r7, #0]
    13b4:	2f00      	cmp	r7, #0
    13b6:	d1e6      	bne.n	1386 <_fwalk_reent+0x12>
    13b8:	4648      	mov	r0, r9
    13ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    13be:	46b9      	mov	r9, r7
    13c0:	4648      	mov	r0, r9
    13c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    13c6:	bf00      	nop

000013c8 <__retarget_lock_init_recursive>:
    13c8:	4770      	bx	lr
    13ca:	bf00      	nop

000013cc <__retarget_lock_close_recursive>:
    13cc:	4770      	bx	lr
    13ce:	bf00      	nop

000013d0 <__retarget_lock_acquire_recursive>:
    13d0:	4770      	bx	lr
    13d2:	bf00      	nop

000013d4 <__retarget_lock_release_recursive>:
    13d4:	4770      	bx	lr
    13d6:	bf00      	nop

000013d8 <__swhatbuf_r>:
    13d8:	b570      	push	{r4, r5, r6, lr}
    13da:	460c      	mov	r4, r1
    13dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    13e0:	2900      	cmp	r1, #0
    13e2:	b090      	sub	sp, #64	; 0x40
    13e4:	4615      	mov	r5, r2
    13e6:	461e      	mov	r6, r3
    13e8:	db14      	blt.n	1414 <__swhatbuf_r+0x3c>
    13ea:	aa01      	add	r2, sp, #4
    13ec:	f000 ff6a 	bl	22c4 <_fstat_r>
    13f0:	2800      	cmp	r0, #0
    13f2:	db0f      	blt.n	1414 <__swhatbuf_r+0x3c>
    13f4:	9a02      	ldr	r2, [sp, #8]
    13f6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
    13fa:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
    13fe:	fab2 f282 	clz	r2, r2
    1402:	0952      	lsrs	r2, r2, #5
    1404:	f44f 6380 	mov.w	r3, #1024	; 0x400
    1408:	f44f 6000 	mov.w	r0, #2048	; 0x800
    140c:	6032      	str	r2, [r6, #0]
    140e:	602b      	str	r3, [r5, #0]
    1410:	b010      	add	sp, #64	; 0x40
    1412:	bd70      	pop	{r4, r5, r6, pc}
    1414:	89a2      	ldrh	r2, [r4, #12]
    1416:	2300      	movs	r3, #0
    1418:	f012 0080 	ands.w	r0, r2, #128	; 0x80
    141c:	6033      	str	r3, [r6, #0]
    141e:	d004      	beq.n	142a <__swhatbuf_r+0x52>
    1420:	2240      	movs	r2, #64	; 0x40
    1422:	4618      	mov	r0, r3
    1424:	602a      	str	r2, [r5, #0]
    1426:	b010      	add	sp, #64	; 0x40
    1428:	bd70      	pop	{r4, r5, r6, pc}
    142a:	f44f 6380 	mov.w	r3, #1024	; 0x400
    142e:	602b      	str	r3, [r5, #0]
    1430:	b010      	add	sp, #64	; 0x40
    1432:	bd70      	pop	{r4, r5, r6, pc}

00001434 <__smakebuf_r>:
    1434:	898a      	ldrh	r2, [r1, #12]
    1436:	0792      	lsls	r2, r2, #30
    1438:	460b      	mov	r3, r1
    143a:	d506      	bpl.n	144a <__smakebuf_r+0x16>
    143c:	f101 0243 	add.w	r2, r1, #67	; 0x43
    1440:	2101      	movs	r1, #1
    1442:	601a      	str	r2, [r3, #0]
    1444:	611a      	str	r2, [r3, #16]
    1446:	6159      	str	r1, [r3, #20]
    1448:	4770      	bx	lr
    144a:	b5f0      	push	{r4, r5, r6, r7, lr}
    144c:	b083      	sub	sp, #12
    144e:	ab01      	add	r3, sp, #4
    1450:	466a      	mov	r2, sp
    1452:	460c      	mov	r4, r1
    1454:	4606      	mov	r6, r0
    1456:	f7ff ffbf 	bl	13d8 <__swhatbuf_r>
    145a:	9900      	ldr	r1, [sp, #0]
    145c:	4605      	mov	r5, r0
    145e:	4630      	mov	r0, r6
    1460:	f000 f83a 	bl	14d8 <_malloc_r>
    1464:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    1468:	b1d8      	cbz	r0, 14a2 <__smakebuf_r+0x6e>
    146a:	9a01      	ldr	r2, [sp, #4]
    146c:	4f15      	ldr	r7, [pc, #84]	; (14c4 <__smakebuf_r+0x90>)
    146e:	9900      	ldr	r1, [sp, #0]
    1470:	63f7      	str	r7, [r6, #60]	; 0x3c
    1472:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    1476:	81a3      	strh	r3, [r4, #12]
    1478:	6020      	str	r0, [r4, #0]
    147a:	6120      	str	r0, [r4, #16]
    147c:	6161      	str	r1, [r4, #20]
    147e:	b91a      	cbnz	r2, 1488 <__smakebuf_r+0x54>
    1480:	432b      	orrs	r3, r5
    1482:	81a3      	strh	r3, [r4, #12]
    1484:	b003      	add	sp, #12
    1486:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1488:	4630      	mov	r0, r6
    148a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    148e:	f000 ff2d 	bl	22ec <_isatty_r>
    1492:	b1a0      	cbz	r0, 14be <__smakebuf_r+0x8a>
    1494:	89a3      	ldrh	r3, [r4, #12]
    1496:	f023 0303 	bic.w	r3, r3, #3
    149a:	f043 0301 	orr.w	r3, r3, #1
    149e:	b21b      	sxth	r3, r3
    14a0:	e7ee      	b.n	1480 <__smakebuf_r+0x4c>
    14a2:	059a      	lsls	r2, r3, #22
    14a4:	d4ee      	bmi.n	1484 <__smakebuf_r+0x50>
    14a6:	f023 0303 	bic.w	r3, r3, #3
    14aa:	f104 0243 	add.w	r2, r4, #67	; 0x43
    14ae:	f043 0302 	orr.w	r3, r3, #2
    14b2:	2101      	movs	r1, #1
    14b4:	81a3      	strh	r3, [r4, #12]
    14b6:	6022      	str	r2, [r4, #0]
    14b8:	6122      	str	r2, [r4, #16]
    14ba:	6161      	str	r1, [r4, #20]
    14bc:	e7e2      	b.n	1484 <__smakebuf_r+0x50>
    14be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    14c2:	e7dd      	b.n	1480 <__smakebuf_r+0x4c>
    14c4:	00000d19 	.word	0x00000d19

000014c8 <malloc>:
    14c8:	4b02      	ldr	r3, [pc, #8]	; (14d4 <malloc+0xc>)
    14ca:	4601      	mov	r1, r0
    14cc:	6818      	ldr	r0, [r3, #0]
    14ce:	f000 b803 	b.w	14d8 <_malloc_r>
    14d2:	bf00      	nop
    14d4:	20000000 	.word	0x20000000

000014d8 <_malloc_r>:
    14d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    14dc:	f101 060b 	add.w	r6, r1, #11
    14e0:	2e16      	cmp	r6, #22
    14e2:	b083      	sub	sp, #12
    14e4:	4605      	mov	r5, r0
    14e6:	f240 809e 	bls.w	1626 <_malloc_r+0x14e>
    14ea:	f036 0607 	bics.w	r6, r6, #7
    14ee:	f100 80bd 	bmi.w	166c <_malloc_r+0x194>
    14f2:	42b1      	cmp	r1, r6
    14f4:	f200 80ba 	bhi.w	166c <_malloc_r+0x194>
    14f8:	f000 fbf0 	bl	1cdc <__malloc_lock>
    14fc:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
    1500:	f0c0 8293 	bcc.w	1a2a <_malloc_r+0x552>
    1504:	0a73      	lsrs	r3, r6, #9
    1506:	f000 80b8 	beq.w	167a <_malloc_r+0x1a2>
    150a:	2b04      	cmp	r3, #4
    150c:	f200 8179 	bhi.w	1802 <_malloc_r+0x32a>
    1510:	09b3      	lsrs	r3, r6, #6
    1512:	f103 0039 	add.w	r0, r3, #57	; 0x39
    1516:	f103 0e38 	add.w	lr, r3, #56	; 0x38
    151a:	00c3      	lsls	r3, r0, #3
    151c:	4fbf      	ldr	r7, [pc, #764]	; (181c <_malloc_r+0x344>)
    151e:	443b      	add	r3, r7
    1520:	f1a3 0108 	sub.w	r1, r3, #8
    1524:	685c      	ldr	r4, [r3, #4]
    1526:	42a1      	cmp	r1, r4
    1528:	d106      	bne.n	1538 <_malloc_r+0x60>
    152a:	e00c      	b.n	1546 <_malloc_r+0x6e>
    152c:	2a00      	cmp	r2, #0
    152e:	f280 80aa 	bge.w	1686 <_malloc_r+0x1ae>
    1532:	68e4      	ldr	r4, [r4, #12]
    1534:	42a1      	cmp	r1, r4
    1536:	d006      	beq.n	1546 <_malloc_r+0x6e>
    1538:	6863      	ldr	r3, [r4, #4]
    153a:	f023 0303 	bic.w	r3, r3, #3
    153e:	1b9a      	subs	r2, r3, r6
    1540:	2a0f      	cmp	r2, #15
    1542:	ddf3      	ble.n	152c <_malloc_r+0x54>
    1544:	4670      	mov	r0, lr
    1546:	693c      	ldr	r4, [r7, #16]
    1548:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 1830 <_malloc_r+0x358>
    154c:	4574      	cmp	r4, lr
    154e:	f000 81ab 	beq.w	18a8 <_malloc_r+0x3d0>
    1552:	6863      	ldr	r3, [r4, #4]
    1554:	f023 0303 	bic.w	r3, r3, #3
    1558:	1b9a      	subs	r2, r3, r6
    155a:	2a0f      	cmp	r2, #15
    155c:	f300 8190 	bgt.w	1880 <_malloc_r+0x3a8>
    1560:	2a00      	cmp	r2, #0
    1562:	f8c7 e014 	str.w	lr, [r7, #20]
    1566:	f8c7 e010 	str.w	lr, [r7, #16]
    156a:	f280 809d 	bge.w	16a8 <_malloc_r+0x1d0>
    156e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    1572:	f080 8161 	bcs.w	1838 <_malloc_r+0x360>
    1576:	08db      	lsrs	r3, r3, #3
    1578:	f103 0c01 	add.w	ip, r3, #1
    157c:	1099      	asrs	r1, r3, #2
    157e:	687a      	ldr	r2, [r7, #4]
    1580:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
    1584:	f8c4 8008 	str.w	r8, [r4, #8]
    1588:	2301      	movs	r3, #1
    158a:	408b      	lsls	r3, r1
    158c:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
    1590:	4313      	orrs	r3, r2
    1592:	3908      	subs	r1, #8
    1594:	60e1      	str	r1, [r4, #12]
    1596:	607b      	str	r3, [r7, #4]
    1598:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
    159c:	f8c8 400c 	str.w	r4, [r8, #12]
    15a0:	1082      	asrs	r2, r0, #2
    15a2:	2401      	movs	r4, #1
    15a4:	4094      	lsls	r4, r2
    15a6:	429c      	cmp	r4, r3
    15a8:	f200 808b 	bhi.w	16c2 <_malloc_r+0x1ea>
    15ac:	421c      	tst	r4, r3
    15ae:	d106      	bne.n	15be <_malloc_r+0xe6>
    15b0:	f020 0003 	bic.w	r0, r0, #3
    15b4:	0064      	lsls	r4, r4, #1
    15b6:	421c      	tst	r4, r3
    15b8:	f100 0004 	add.w	r0, r0, #4
    15bc:	d0fa      	beq.n	15b4 <_malloc_r+0xdc>
    15be:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
    15c2:	46cc      	mov	ip, r9
    15c4:	4680      	mov	r8, r0
    15c6:	f8dc 300c 	ldr.w	r3, [ip, #12]
    15ca:	459c      	cmp	ip, r3
    15cc:	d107      	bne.n	15de <_malloc_r+0x106>
    15ce:	e16d      	b.n	18ac <_malloc_r+0x3d4>
    15d0:	2a00      	cmp	r2, #0
    15d2:	f280 817b 	bge.w	18cc <_malloc_r+0x3f4>
    15d6:	68db      	ldr	r3, [r3, #12]
    15d8:	459c      	cmp	ip, r3
    15da:	f000 8167 	beq.w	18ac <_malloc_r+0x3d4>
    15de:	6859      	ldr	r1, [r3, #4]
    15e0:	f021 0103 	bic.w	r1, r1, #3
    15e4:	1b8a      	subs	r2, r1, r6
    15e6:	2a0f      	cmp	r2, #15
    15e8:	ddf2      	ble.n	15d0 <_malloc_r+0xf8>
    15ea:	f8d3 c00c 	ldr.w	ip, [r3, #12]
    15ee:	f8d3 8008 	ldr.w	r8, [r3, #8]
    15f2:	9300      	str	r3, [sp, #0]
    15f4:	199c      	adds	r4, r3, r6
    15f6:	4628      	mov	r0, r5
    15f8:	f046 0601 	orr.w	r6, r6, #1
    15fc:	f042 0501 	orr.w	r5, r2, #1
    1600:	605e      	str	r6, [r3, #4]
    1602:	f8c8 c00c 	str.w	ip, [r8, #12]
    1606:	f8cc 8008 	str.w	r8, [ip, #8]
    160a:	617c      	str	r4, [r7, #20]
    160c:	613c      	str	r4, [r7, #16]
    160e:	f8c4 e00c 	str.w	lr, [r4, #12]
    1612:	f8c4 e008 	str.w	lr, [r4, #8]
    1616:	6065      	str	r5, [r4, #4]
    1618:	505a      	str	r2, [r3, r1]
    161a:	f000 fb65 	bl	1ce8 <__malloc_unlock>
    161e:	9b00      	ldr	r3, [sp, #0]
    1620:	f103 0408 	add.w	r4, r3, #8
    1624:	e01e      	b.n	1664 <_malloc_r+0x18c>
    1626:	2910      	cmp	r1, #16
    1628:	d820      	bhi.n	166c <_malloc_r+0x194>
    162a:	f000 fb57 	bl	1cdc <__malloc_lock>
    162e:	2610      	movs	r6, #16
    1630:	2318      	movs	r3, #24
    1632:	2002      	movs	r0, #2
    1634:	4f79      	ldr	r7, [pc, #484]	; (181c <_malloc_r+0x344>)
    1636:	443b      	add	r3, r7
    1638:	f1a3 0208 	sub.w	r2, r3, #8
    163c:	685c      	ldr	r4, [r3, #4]
    163e:	4294      	cmp	r4, r2
    1640:	f000 813d 	beq.w	18be <_malloc_r+0x3e6>
    1644:	6863      	ldr	r3, [r4, #4]
    1646:	68e1      	ldr	r1, [r4, #12]
    1648:	68a6      	ldr	r6, [r4, #8]
    164a:	f023 0303 	bic.w	r3, r3, #3
    164e:	4423      	add	r3, r4
    1650:	4628      	mov	r0, r5
    1652:	685a      	ldr	r2, [r3, #4]
    1654:	60f1      	str	r1, [r6, #12]
    1656:	f042 0201 	orr.w	r2, r2, #1
    165a:	608e      	str	r6, [r1, #8]
    165c:	605a      	str	r2, [r3, #4]
    165e:	f000 fb43 	bl	1ce8 <__malloc_unlock>
    1662:	3408      	adds	r4, #8
    1664:	4620      	mov	r0, r4
    1666:	b003      	add	sp, #12
    1668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    166c:	2400      	movs	r4, #0
    166e:	230c      	movs	r3, #12
    1670:	4620      	mov	r0, r4
    1672:	602b      	str	r3, [r5, #0]
    1674:	b003      	add	sp, #12
    1676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    167a:	2040      	movs	r0, #64	; 0x40
    167c:	f44f 7300 	mov.w	r3, #512	; 0x200
    1680:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
    1684:	e74a      	b.n	151c <_malloc_r+0x44>
    1686:	4423      	add	r3, r4
    1688:	68e1      	ldr	r1, [r4, #12]
    168a:	685a      	ldr	r2, [r3, #4]
    168c:	68a6      	ldr	r6, [r4, #8]
    168e:	f042 0201 	orr.w	r2, r2, #1
    1692:	60f1      	str	r1, [r6, #12]
    1694:	4628      	mov	r0, r5
    1696:	608e      	str	r6, [r1, #8]
    1698:	605a      	str	r2, [r3, #4]
    169a:	f000 fb25 	bl	1ce8 <__malloc_unlock>
    169e:	3408      	adds	r4, #8
    16a0:	4620      	mov	r0, r4
    16a2:	b003      	add	sp, #12
    16a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    16a8:	4423      	add	r3, r4
    16aa:	4628      	mov	r0, r5
    16ac:	685a      	ldr	r2, [r3, #4]
    16ae:	f042 0201 	orr.w	r2, r2, #1
    16b2:	605a      	str	r2, [r3, #4]
    16b4:	f000 fb18 	bl	1ce8 <__malloc_unlock>
    16b8:	3408      	adds	r4, #8
    16ba:	4620      	mov	r0, r4
    16bc:	b003      	add	sp, #12
    16be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    16c2:	68bc      	ldr	r4, [r7, #8]
    16c4:	6863      	ldr	r3, [r4, #4]
    16c6:	f023 0803 	bic.w	r8, r3, #3
    16ca:	45b0      	cmp	r8, r6
    16cc:	d304      	bcc.n	16d8 <_malloc_r+0x200>
    16ce:	eba8 0306 	sub.w	r3, r8, r6
    16d2:	2b0f      	cmp	r3, #15
    16d4:	f300 8085 	bgt.w	17e2 <_malloc_r+0x30a>
    16d8:	f8df 9158 	ldr.w	r9, [pc, #344]	; 1834 <_malloc_r+0x35c>
    16dc:	4b50      	ldr	r3, [pc, #320]	; (1820 <_malloc_r+0x348>)
    16de:	f8d9 2000 	ldr.w	r2, [r9]
    16e2:	681b      	ldr	r3, [r3, #0]
    16e4:	3201      	adds	r2, #1
    16e6:	4433      	add	r3, r6
    16e8:	eb04 0a08 	add.w	sl, r4, r8
    16ec:	f000 8155 	beq.w	199a <_malloc_r+0x4c2>
    16f0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    16f4:	330f      	adds	r3, #15
    16f6:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
    16fa:	f02b 0b0f 	bic.w	fp, fp, #15
    16fe:	4659      	mov	r1, fp
    1700:	4628      	mov	r0, r5
    1702:	f000 fc9d 	bl	2040 <_sbrk_r>
    1706:	1c41      	adds	r1, r0, #1
    1708:	4602      	mov	r2, r0
    170a:	f000 80fc 	beq.w	1906 <_malloc_r+0x42e>
    170e:	4582      	cmp	sl, r0
    1710:	f200 80f7 	bhi.w	1902 <_malloc_r+0x42a>
    1714:	4b43      	ldr	r3, [pc, #268]	; (1824 <_malloc_r+0x34c>)
    1716:	6819      	ldr	r1, [r3, #0]
    1718:	4459      	add	r1, fp
    171a:	6019      	str	r1, [r3, #0]
    171c:	f000 814d 	beq.w	19ba <_malloc_r+0x4e2>
    1720:	f8d9 0000 	ldr.w	r0, [r9]
    1724:	3001      	adds	r0, #1
    1726:	bf1b      	ittet	ne
    1728:	eba2 0a0a 	subne.w	sl, r2, sl
    172c:	4451      	addne	r1, sl
    172e:	f8c9 2000 	streq.w	r2, [r9]
    1732:	6019      	strne	r1, [r3, #0]
    1734:	f012 0107 	ands.w	r1, r2, #7
    1738:	f000 8115 	beq.w	1966 <_malloc_r+0x48e>
    173c:	f1c1 0008 	rsb	r0, r1, #8
    1740:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
    1744:	4402      	add	r2, r0
    1746:	3108      	adds	r1, #8
    1748:	eb02 090b 	add.w	r9, r2, fp
    174c:	f3c9 090b 	ubfx	r9, r9, #0, #12
    1750:	eba1 0909 	sub.w	r9, r1, r9
    1754:	4649      	mov	r1, r9
    1756:	4628      	mov	r0, r5
    1758:	9301      	str	r3, [sp, #4]
    175a:	9200      	str	r2, [sp, #0]
    175c:	f000 fc70 	bl	2040 <_sbrk_r>
    1760:	1c43      	adds	r3, r0, #1
    1762:	e89d 000c 	ldmia.w	sp, {r2, r3}
    1766:	f000 8143 	beq.w	19f0 <_malloc_r+0x518>
    176a:	1a80      	subs	r0, r0, r2
    176c:	4448      	add	r0, r9
    176e:	f040 0001 	orr.w	r0, r0, #1
    1772:	6819      	ldr	r1, [r3, #0]
    1774:	60ba      	str	r2, [r7, #8]
    1776:	4449      	add	r1, r9
    1778:	42bc      	cmp	r4, r7
    177a:	6050      	str	r0, [r2, #4]
    177c:	6019      	str	r1, [r3, #0]
    177e:	d017      	beq.n	17b0 <_malloc_r+0x2d8>
    1780:	f1b8 0f0f 	cmp.w	r8, #15
    1784:	f240 80fb 	bls.w	197e <_malloc_r+0x4a6>
    1788:	6860      	ldr	r0, [r4, #4]
    178a:	f1a8 020c 	sub.w	r2, r8, #12
    178e:	f022 0207 	bic.w	r2, r2, #7
    1792:	eb04 0e02 	add.w	lr, r4, r2
    1796:	f000 0001 	and.w	r0, r0, #1
    179a:	f04f 0c05 	mov.w	ip, #5
    179e:	4310      	orrs	r0, r2
    17a0:	2a0f      	cmp	r2, #15
    17a2:	6060      	str	r0, [r4, #4]
    17a4:	f8ce c004 	str.w	ip, [lr, #4]
    17a8:	f8ce c008 	str.w	ip, [lr, #8]
    17ac:	f200 8117 	bhi.w	19de <_malloc_r+0x506>
    17b0:	4b1d      	ldr	r3, [pc, #116]	; (1828 <_malloc_r+0x350>)
    17b2:	68bc      	ldr	r4, [r7, #8]
    17b4:	681a      	ldr	r2, [r3, #0]
    17b6:	4291      	cmp	r1, r2
    17b8:	bf88      	it	hi
    17ba:	6019      	strhi	r1, [r3, #0]
    17bc:	4b1b      	ldr	r3, [pc, #108]	; (182c <_malloc_r+0x354>)
    17be:	681a      	ldr	r2, [r3, #0]
    17c0:	4291      	cmp	r1, r2
    17c2:	6862      	ldr	r2, [r4, #4]
    17c4:	bf88      	it	hi
    17c6:	6019      	strhi	r1, [r3, #0]
    17c8:	f022 0203 	bic.w	r2, r2, #3
    17cc:	4296      	cmp	r6, r2
    17ce:	eba2 0306 	sub.w	r3, r2, r6
    17d2:	d801      	bhi.n	17d8 <_malloc_r+0x300>
    17d4:	2b0f      	cmp	r3, #15
    17d6:	dc04      	bgt.n	17e2 <_malloc_r+0x30a>
    17d8:	4628      	mov	r0, r5
    17da:	f000 fa85 	bl	1ce8 <__malloc_unlock>
    17de:	2400      	movs	r4, #0
    17e0:	e740      	b.n	1664 <_malloc_r+0x18c>
    17e2:	19a2      	adds	r2, r4, r6
    17e4:	f043 0301 	orr.w	r3, r3, #1
    17e8:	f046 0601 	orr.w	r6, r6, #1
    17ec:	6066      	str	r6, [r4, #4]
    17ee:	4628      	mov	r0, r5
    17f0:	60ba      	str	r2, [r7, #8]
    17f2:	6053      	str	r3, [r2, #4]
    17f4:	f000 fa78 	bl	1ce8 <__malloc_unlock>
    17f8:	3408      	adds	r4, #8
    17fa:	4620      	mov	r0, r4
    17fc:	b003      	add	sp, #12
    17fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1802:	2b14      	cmp	r3, #20
    1804:	d971      	bls.n	18ea <_malloc_r+0x412>
    1806:	2b54      	cmp	r3, #84	; 0x54
    1808:	f200 80a3 	bhi.w	1952 <_malloc_r+0x47a>
    180c:	0b33      	lsrs	r3, r6, #12
    180e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
    1812:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
    1816:	00c3      	lsls	r3, r0, #3
    1818:	e680      	b.n	151c <_malloc_r+0x44>
    181a:	bf00      	nop
    181c:	20000434 	.word	0x20000434
    1820:	20000894 	.word	0x20000894
    1824:	20000864 	.word	0x20000864
    1828:	2000088c 	.word	0x2000088c
    182c:	20000890 	.word	0x20000890
    1830:	2000043c 	.word	0x2000043c
    1834:	2000083c 	.word	0x2000083c
    1838:	0a5a      	lsrs	r2, r3, #9
    183a:	2a04      	cmp	r2, #4
    183c:	d95b      	bls.n	18f6 <_malloc_r+0x41e>
    183e:	2a14      	cmp	r2, #20
    1840:	f200 80ae 	bhi.w	19a0 <_malloc_r+0x4c8>
    1844:	f102 015c 	add.w	r1, r2, #92	; 0x5c
    1848:	00c9      	lsls	r1, r1, #3
    184a:	325b      	adds	r2, #91	; 0x5b
    184c:	eb07 0c01 	add.w	ip, r7, r1
    1850:	5879      	ldr	r1, [r7, r1]
    1852:	f1ac 0c08 	sub.w	ip, ip, #8
    1856:	458c      	cmp	ip, r1
    1858:	f000 8088 	beq.w	196c <_malloc_r+0x494>
    185c:	684a      	ldr	r2, [r1, #4]
    185e:	f022 0203 	bic.w	r2, r2, #3
    1862:	4293      	cmp	r3, r2
    1864:	d273      	bcs.n	194e <_malloc_r+0x476>
    1866:	6889      	ldr	r1, [r1, #8]
    1868:	458c      	cmp	ip, r1
    186a:	d1f7      	bne.n	185c <_malloc_r+0x384>
    186c:	f8dc 200c 	ldr.w	r2, [ip, #12]
    1870:	687b      	ldr	r3, [r7, #4]
    1872:	60e2      	str	r2, [r4, #12]
    1874:	f8c4 c008 	str.w	ip, [r4, #8]
    1878:	6094      	str	r4, [r2, #8]
    187a:	f8cc 400c 	str.w	r4, [ip, #12]
    187e:	e68f      	b.n	15a0 <_malloc_r+0xc8>
    1880:	19a1      	adds	r1, r4, r6
    1882:	f046 0c01 	orr.w	ip, r6, #1
    1886:	f042 0601 	orr.w	r6, r2, #1
    188a:	f8c4 c004 	str.w	ip, [r4, #4]
    188e:	4628      	mov	r0, r5
    1890:	6179      	str	r1, [r7, #20]
    1892:	6139      	str	r1, [r7, #16]
    1894:	f8c1 e00c 	str.w	lr, [r1, #12]
    1898:	f8c1 e008 	str.w	lr, [r1, #8]
    189c:	604e      	str	r6, [r1, #4]
    189e:	50e2      	str	r2, [r4, r3]
    18a0:	f000 fa22 	bl	1ce8 <__malloc_unlock>
    18a4:	3408      	adds	r4, #8
    18a6:	e6dd      	b.n	1664 <_malloc_r+0x18c>
    18a8:	687b      	ldr	r3, [r7, #4]
    18aa:	e679      	b.n	15a0 <_malloc_r+0xc8>
    18ac:	f108 0801 	add.w	r8, r8, #1
    18b0:	f018 0f03 	tst.w	r8, #3
    18b4:	f10c 0c08 	add.w	ip, ip, #8
    18b8:	f47f ae85 	bne.w	15c6 <_malloc_r+0xee>
    18bc:	e02d      	b.n	191a <_malloc_r+0x442>
    18be:	68dc      	ldr	r4, [r3, #12]
    18c0:	42a3      	cmp	r3, r4
    18c2:	bf08      	it	eq
    18c4:	3002      	addeq	r0, #2
    18c6:	f43f ae3e 	beq.w	1546 <_malloc_r+0x6e>
    18ca:	e6bb      	b.n	1644 <_malloc_r+0x16c>
    18cc:	4419      	add	r1, r3
    18ce:	461c      	mov	r4, r3
    18d0:	684a      	ldr	r2, [r1, #4]
    18d2:	68db      	ldr	r3, [r3, #12]
    18d4:	f854 6f08 	ldr.w	r6, [r4, #8]!
    18d8:	f042 0201 	orr.w	r2, r2, #1
    18dc:	604a      	str	r2, [r1, #4]
    18de:	4628      	mov	r0, r5
    18e0:	60f3      	str	r3, [r6, #12]
    18e2:	609e      	str	r6, [r3, #8]
    18e4:	f000 fa00 	bl	1ce8 <__malloc_unlock>
    18e8:	e6bc      	b.n	1664 <_malloc_r+0x18c>
    18ea:	f103 005c 	add.w	r0, r3, #92	; 0x5c
    18ee:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
    18f2:	00c3      	lsls	r3, r0, #3
    18f4:	e612      	b.n	151c <_malloc_r+0x44>
    18f6:	099a      	lsrs	r2, r3, #6
    18f8:	f102 0139 	add.w	r1, r2, #57	; 0x39
    18fc:	00c9      	lsls	r1, r1, #3
    18fe:	3238      	adds	r2, #56	; 0x38
    1900:	e7a4      	b.n	184c <_malloc_r+0x374>
    1902:	42bc      	cmp	r4, r7
    1904:	d054      	beq.n	19b0 <_malloc_r+0x4d8>
    1906:	68bc      	ldr	r4, [r7, #8]
    1908:	6862      	ldr	r2, [r4, #4]
    190a:	f022 0203 	bic.w	r2, r2, #3
    190e:	e75d      	b.n	17cc <_malloc_r+0x2f4>
    1910:	f859 3908 	ldr.w	r3, [r9], #-8
    1914:	4599      	cmp	r9, r3
    1916:	f040 8086 	bne.w	1a26 <_malloc_r+0x54e>
    191a:	f010 0f03 	tst.w	r0, #3
    191e:	f100 30ff 	add.w	r0, r0, #4294967295
    1922:	d1f5      	bne.n	1910 <_malloc_r+0x438>
    1924:	687b      	ldr	r3, [r7, #4]
    1926:	ea23 0304 	bic.w	r3, r3, r4
    192a:	607b      	str	r3, [r7, #4]
    192c:	0064      	lsls	r4, r4, #1
    192e:	429c      	cmp	r4, r3
    1930:	f63f aec7 	bhi.w	16c2 <_malloc_r+0x1ea>
    1934:	2c00      	cmp	r4, #0
    1936:	f43f aec4 	beq.w	16c2 <_malloc_r+0x1ea>
    193a:	421c      	tst	r4, r3
    193c:	4640      	mov	r0, r8
    193e:	f47f ae3e 	bne.w	15be <_malloc_r+0xe6>
    1942:	0064      	lsls	r4, r4, #1
    1944:	421c      	tst	r4, r3
    1946:	f100 0004 	add.w	r0, r0, #4
    194a:	d0fa      	beq.n	1942 <_malloc_r+0x46a>
    194c:	e637      	b.n	15be <_malloc_r+0xe6>
    194e:	468c      	mov	ip, r1
    1950:	e78c      	b.n	186c <_malloc_r+0x394>
    1952:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    1956:	d815      	bhi.n	1984 <_malloc_r+0x4ac>
    1958:	0bf3      	lsrs	r3, r6, #15
    195a:	f103 0078 	add.w	r0, r3, #120	; 0x78
    195e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
    1962:	00c3      	lsls	r3, r0, #3
    1964:	e5da      	b.n	151c <_malloc_r+0x44>
    1966:	f44f 5180 	mov.w	r1, #4096	; 0x1000
    196a:	e6ed      	b.n	1748 <_malloc_r+0x270>
    196c:	687b      	ldr	r3, [r7, #4]
    196e:	1092      	asrs	r2, r2, #2
    1970:	2101      	movs	r1, #1
    1972:	fa01 f202 	lsl.w	r2, r1, r2
    1976:	4313      	orrs	r3, r2
    1978:	607b      	str	r3, [r7, #4]
    197a:	4662      	mov	r2, ip
    197c:	e779      	b.n	1872 <_malloc_r+0x39a>
    197e:	2301      	movs	r3, #1
    1980:	6053      	str	r3, [r2, #4]
    1982:	e729      	b.n	17d8 <_malloc_r+0x300>
    1984:	f240 5254 	movw	r2, #1364	; 0x554
    1988:	4293      	cmp	r3, r2
    198a:	d822      	bhi.n	19d2 <_malloc_r+0x4fa>
    198c:	0cb3      	lsrs	r3, r6, #18
    198e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
    1992:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
    1996:	00c3      	lsls	r3, r0, #3
    1998:	e5c0      	b.n	151c <_malloc_r+0x44>
    199a:	f103 0b10 	add.w	fp, r3, #16
    199e:	e6ae      	b.n	16fe <_malloc_r+0x226>
    19a0:	2a54      	cmp	r2, #84	; 0x54
    19a2:	d829      	bhi.n	19f8 <_malloc_r+0x520>
    19a4:	0b1a      	lsrs	r2, r3, #12
    19a6:	f102 016f 	add.w	r1, r2, #111	; 0x6f
    19aa:	00c9      	lsls	r1, r1, #3
    19ac:	326e      	adds	r2, #110	; 0x6e
    19ae:	e74d      	b.n	184c <_malloc_r+0x374>
    19b0:	4b20      	ldr	r3, [pc, #128]	; (1a34 <_malloc_r+0x55c>)
    19b2:	6819      	ldr	r1, [r3, #0]
    19b4:	4459      	add	r1, fp
    19b6:	6019      	str	r1, [r3, #0]
    19b8:	e6b2      	b.n	1720 <_malloc_r+0x248>
    19ba:	f3ca 000b 	ubfx	r0, sl, #0, #12
    19be:	2800      	cmp	r0, #0
    19c0:	f47f aeae 	bne.w	1720 <_malloc_r+0x248>
    19c4:	eb08 030b 	add.w	r3, r8, fp
    19c8:	68ba      	ldr	r2, [r7, #8]
    19ca:	f043 0301 	orr.w	r3, r3, #1
    19ce:	6053      	str	r3, [r2, #4]
    19d0:	e6ee      	b.n	17b0 <_malloc_r+0x2d8>
    19d2:	207f      	movs	r0, #127	; 0x7f
    19d4:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
    19d8:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
    19dc:	e59e      	b.n	151c <_malloc_r+0x44>
    19de:	f104 0108 	add.w	r1, r4, #8
    19e2:	4628      	mov	r0, r5
    19e4:	9300      	str	r3, [sp, #0]
    19e6:	f7ff fa67 	bl	eb8 <_free_r>
    19ea:	9b00      	ldr	r3, [sp, #0]
    19ec:	6819      	ldr	r1, [r3, #0]
    19ee:	e6df      	b.n	17b0 <_malloc_r+0x2d8>
    19f0:	2001      	movs	r0, #1
    19f2:	f04f 0900 	mov.w	r9, #0
    19f6:	e6bc      	b.n	1772 <_malloc_r+0x29a>
    19f8:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
    19fc:	d805      	bhi.n	1a0a <_malloc_r+0x532>
    19fe:	0bda      	lsrs	r2, r3, #15
    1a00:	f102 0178 	add.w	r1, r2, #120	; 0x78
    1a04:	00c9      	lsls	r1, r1, #3
    1a06:	3277      	adds	r2, #119	; 0x77
    1a08:	e720      	b.n	184c <_malloc_r+0x374>
    1a0a:	f240 5154 	movw	r1, #1364	; 0x554
    1a0e:	428a      	cmp	r2, r1
    1a10:	d805      	bhi.n	1a1e <_malloc_r+0x546>
    1a12:	0c9a      	lsrs	r2, r3, #18
    1a14:	f102 017d 	add.w	r1, r2, #125	; 0x7d
    1a18:	00c9      	lsls	r1, r1, #3
    1a1a:	327c      	adds	r2, #124	; 0x7c
    1a1c:	e716      	b.n	184c <_malloc_r+0x374>
    1a1e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
    1a22:	227e      	movs	r2, #126	; 0x7e
    1a24:	e712      	b.n	184c <_malloc_r+0x374>
    1a26:	687b      	ldr	r3, [r7, #4]
    1a28:	e780      	b.n	192c <_malloc_r+0x454>
    1a2a:	08f0      	lsrs	r0, r6, #3
    1a2c:	f106 0308 	add.w	r3, r6, #8
    1a30:	e600      	b.n	1634 <_malloc_r+0x15c>
    1a32:	bf00      	nop
    1a34:	20000864 	.word	0x20000864
	...

00001a40 <memchr>:
    1a40:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    1a44:	2a10      	cmp	r2, #16
    1a46:	db2b      	blt.n	1aa0 <memchr+0x60>
    1a48:	f010 0f07 	tst.w	r0, #7
    1a4c:	d008      	beq.n	1a60 <memchr+0x20>
    1a4e:	f810 3b01 	ldrb.w	r3, [r0], #1
    1a52:	3a01      	subs	r2, #1
    1a54:	428b      	cmp	r3, r1
    1a56:	d02d      	beq.n	1ab4 <memchr+0x74>
    1a58:	f010 0f07 	tst.w	r0, #7
    1a5c:	b342      	cbz	r2, 1ab0 <memchr+0x70>
    1a5e:	d1f6      	bne.n	1a4e <memchr+0xe>
    1a60:	b4f0      	push	{r4, r5, r6, r7}
    1a62:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    1a66:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    1a6a:	f022 0407 	bic.w	r4, r2, #7
    1a6e:	f07f 0700 	mvns.w	r7, #0
    1a72:	2300      	movs	r3, #0
    1a74:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    1a78:	3c08      	subs	r4, #8
    1a7a:	ea85 0501 	eor.w	r5, r5, r1
    1a7e:	ea86 0601 	eor.w	r6, r6, r1
    1a82:	fa85 f547 	uadd8	r5, r5, r7
    1a86:	faa3 f587 	sel	r5, r3, r7
    1a8a:	fa86 f647 	uadd8	r6, r6, r7
    1a8e:	faa5 f687 	sel	r6, r5, r7
    1a92:	b98e      	cbnz	r6, 1ab8 <memchr+0x78>
    1a94:	d1ee      	bne.n	1a74 <memchr+0x34>
    1a96:	bcf0      	pop	{r4, r5, r6, r7}
    1a98:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    1a9c:	f002 0207 	and.w	r2, r2, #7
    1aa0:	b132      	cbz	r2, 1ab0 <memchr+0x70>
    1aa2:	f810 3b01 	ldrb.w	r3, [r0], #1
    1aa6:	3a01      	subs	r2, #1
    1aa8:	ea83 0301 	eor.w	r3, r3, r1
    1aac:	b113      	cbz	r3, 1ab4 <memchr+0x74>
    1aae:	d1f8      	bne.n	1aa2 <memchr+0x62>
    1ab0:	2000      	movs	r0, #0
    1ab2:	4770      	bx	lr
    1ab4:	3801      	subs	r0, #1
    1ab6:	4770      	bx	lr
    1ab8:	2d00      	cmp	r5, #0
    1aba:	bf06      	itte	eq
    1abc:	4635      	moveq	r5, r6
    1abe:	3803      	subeq	r0, #3
    1ac0:	3807      	subne	r0, #7
    1ac2:	f015 0f01 	tst.w	r5, #1
    1ac6:	d107      	bne.n	1ad8 <memchr+0x98>
    1ac8:	3001      	adds	r0, #1
    1aca:	f415 7f80 	tst.w	r5, #256	; 0x100
    1ace:	bf02      	ittt	eq
    1ad0:	3001      	addeq	r0, #1
    1ad2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    1ad6:	3001      	addeq	r0, #1
    1ad8:	bcf0      	pop	{r4, r5, r6, r7}
    1ada:	3801      	subs	r0, #1
    1adc:	4770      	bx	lr
    1ade:	bf00      	nop

00001ae0 <memcpy>:
    1ae0:	4684      	mov	ip, r0
    1ae2:	ea41 0300 	orr.w	r3, r1, r0
    1ae6:	f013 0303 	ands.w	r3, r3, #3
    1aea:	d16d      	bne.n	1bc8 <memcpy+0xe8>
    1aec:	3a40      	subs	r2, #64	; 0x40
    1aee:	d341      	bcc.n	1b74 <memcpy+0x94>
    1af0:	f851 3b04 	ldr.w	r3, [r1], #4
    1af4:	f840 3b04 	str.w	r3, [r0], #4
    1af8:	f851 3b04 	ldr.w	r3, [r1], #4
    1afc:	f840 3b04 	str.w	r3, [r0], #4
    1b00:	f851 3b04 	ldr.w	r3, [r1], #4
    1b04:	f840 3b04 	str.w	r3, [r0], #4
    1b08:	f851 3b04 	ldr.w	r3, [r1], #4
    1b0c:	f840 3b04 	str.w	r3, [r0], #4
    1b10:	f851 3b04 	ldr.w	r3, [r1], #4
    1b14:	f840 3b04 	str.w	r3, [r0], #4
    1b18:	f851 3b04 	ldr.w	r3, [r1], #4
    1b1c:	f840 3b04 	str.w	r3, [r0], #4
    1b20:	f851 3b04 	ldr.w	r3, [r1], #4
    1b24:	f840 3b04 	str.w	r3, [r0], #4
    1b28:	f851 3b04 	ldr.w	r3, [r1], #4
    1b2c:	f840 3b04 	str.w	r3, [r0], #4
    1b30:	f851 3b04 	ldr.w	r3, [r1], #4
    1b34:	f840 3b04 	str.w	r3, [r0], #4
    1b38:	f851 3b04 	ldr.w	r3, [r1], #4
    1b3c:	f840 3b04 	str.w	r3, [r0], #4
    1b40:	f851 3b04 	ldr.w	r3, [r1], #4
    1b44:	f840 3b04 	str.w	r3, [r0], #4
    1b48:	f851 3b04 	ldr.w	r3, [r1], #4
    1b4c:	f840 3b04 	str.w	r3, [r0], #4
    1b50:	f851 3b04 	ldr.w	r3, [r1], #4
    1b54:	f840 3b04 	str.w	r3, [r0], #4
    1b58:	f851 3b04 	ldr.w	r3, [r1], #4
    1b5c:	f840 3b04 	str.w	r3, [r0], #4
    1b60:	f851 3b04 	ldr.w	r3, [r1], #4
    1b64:	f840 3b04 	str.w	r3, [r0], #4
    1b68:	f851 3b04 	ldr.w	r3, [r1], #4
    1b6c:	f840 3b04 	str.w	r3, [r0], #4
    1b70:	3a40      	subs	r2, #64	; 0x40
    1b72:	d2bd      	bcs.n	1af0 <memcpy+0x10>
    1b74:	3230      	adds	r2, #48	; 0x30
    1b76:	d311      	bcc.n	1b9c <memcpy+0xbc>
    1b78:	f851 3b04 	ldr.w	r3, [r1], #4
    1b7c:	f840 3b04 	str.w	r3, [r0], #4
    1b80:	f851 3b04 	ldr.w	r3, [r1], #4
    1b84:	f840 3b04 	str.w	r3, [r0], #4
    1b88:	f851 3b04 	ldr.w	r3, [r1], #4
    1b8c:	f840 3b04 	str.w	r3, [r0], #4
    1b90:	f851 3b04 	ldr.w	r3, [r1], #4
    1b94:	f840 3b04 	str.w	r3, [r0], #4
    1b98:	3a10      	subs	r2, #16
    1b9a:	d2ed      	bcs.n	1b78 <memcpy+0x98>
    1b9c:	320c      	adds	r2, #12
    1b9e:	d305      	bcc.n	1bac <memcpy+0xcc>
    1ba0:	f851 3b04 	ldr.w	r3, [r1], #4
    1ba4:	f840 3b04 	str.w	r3, [r0], #4
    1ba8:	3a04      	subs	r2, #4
    1baa:	d2f9      	bcs.n	1ba0 <memcpy+0xc0>
    1bac:	3204      	adds	r2, #4
    1bae:	d008      	beq.n	1bc2 <memcpy+0xe2>
    1bb0:	07d2      	lsls	r2, r2, #31
    1bb2:	bf1c      	itt	ne
    1bb4:	f811 3b01 	ldrbne.w	r3, [r1], #1
    1bb8:	f800 3b01 	strbne.w	r3, [r0], #1
    1bbc:	d301      	bcc.n	1bc2 <memcpy+0xe2>
    1bbe:	880b      	ldrh	r3, [r1, #0]
    1bc0:	8003      	strh	r3, [r0, #0]
    1bc2:	4660      	mov	r0, ip
    1bc4:	4770      	bx	lr
    1bc6:	bf00      	nop
    1bc8:	2a08      	cmp	r2, #8
    1bca:	d313      	bcc.n	1bf4 <memcpy+0x114>
    1bcc:	078b      	lsls	r3, r1, #30
    1bce:	d08d      	beq.n	1aec <memcpy+0xc>
    1bd0:	f010 0303 	ands.w	r3, r0, #3
    1bd4:	d08a      	beq.n	1aec <memcpy+0xc>
    1bd6:	f1c3 0304 	rsb	r3, r3, #4
    1bda:	1ad2      	subs	r2, r2, r3
    1bdc:	07db      	lsls	r3, r3, #31
    1bde:	bf1c      	itt	ne
    1be0:	f811 3b01 	ldrbne.w	r3, [r1], #1
    1be4:	f800 3b01 	strbne.w	r3, [r0], #1
    1be8:	d380      	bcc.n	1aec <memcpy+0xc>
    1bea:	f831 3b02 	ldrh.w	r3, [r1], #2
    1bee:	f820 3b02 	strh.w	r3, [r0], #2
    1bf2:	e77b      	b.n	1aec <memcpy+0xc>
    1bf4:	3a04      	subs	r2, #4
    1bf6:	d3d9      	bcc.n	1bac <memcpy+0xcc>
    1bf8:	3a01      	subs	r2, #1
    1bfa:	f811 3b01 	ldrb.w	r3, [r1], #1
    1bfe:	f800 3b01 	strb.w	r3, [r0], #1
    1c02:	d2f9      	bcs.n	1bf8 <memcpy+0x118>
    1c04:	780b      	ldrb	r3, [r1, #0]
    1c06:	7003      	strb	r3, [r0, #0]
    1c08:	784b      	ldrb	r3, [r1, #1]
    1c0a:	7043      	strb	r3, [r0, #1]
    1c0c:	788b      	ldrb	r3, [r1, #2]
    1c0e:	7083      	strb	r3, [r0, #2]
    1c10:	4660      	mov	r0, ip
    1c12:	4770      	bx	lr

00001c14 <memmove>:
    1c14:	4288      	cmp	r0, r1
    1c16:	b5f0      	push	{r4, r5, r6, r7, lr}
    1c18:	d90d      	bls.n	1c36 <memmove+0x22>
    1c1a:	188b      	adds	r3, r1, r2
    1c1c:	4298      	cmp	r0, r3
    1c1e:	d20a      	bcs.n	1c36 <memmove+0x22>
    1c20:	1884      	adds	r4, r0, r2
    1c22:	2a00      	cmp	r2, #0
    1c24:	d051      	beq.n	1cca <memmove+0xb6>
    1c26:	4622      	mov	r2, r4
    1c28:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
    1c2c:	f802 4d01 	strb.w	r4, [r2, #-1]!
    1c30:	4299      	cmp	r1, r3
    1c32:	d1f9      	bne.n	1c28 <memmove+0x14>
    1c34:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1c36:	2a0f      	cmp	r2, #15
    1c38:	d948      	bls.n	1ccc <memmove+0xb8>
    1c3a:	ea41 0300 	orr.w	r3, r1, r0
    1c3e:	079b      	lsls	r3, r3, #30
    1c40:	d146      	bne.n	1cd0 <memmove+0xbc>
    1c42:	f100 0410 	add.w	r4, r0, #16
    1c46:	f101 0310 	add.w	r3, r1, #16
    1c4a:	4615      	mov	r5, r2
    1c4c:	f853 6c10 	ldr.w	r6, [r3, #-16]
    1c50:	f844 6c10 	str.w	r6, [r4, #-16]
    1c54:	f853 6c0c 	ldr.w	r6, [r3, #-12]
    1c58:	f844 6c0c 	str.w	r6, [r4, #-12]
    1c5c:	f853 6c08 	ldr.w	r6, [r3, #-8]
    1c60:	f844 6c08 	str.w	r6, [r4, #-8]
    1c64:	3d10      	subs	r5, #16
    1c66:	f853 6c04 	ldr.w	r6, [r3, #-4]
    1c6a:	f844 6c04 	str.w	r6, [r4, #-4]
    1c6e:	2d0f      	cmp	r5, #15
    1c70:	f103 0310 	add.w	r3, r3, #16
    1c74:	f104 0410 	add.w	r4, r4, #16
    1c78:	d8e8      	bhi.n	1c4c <memmove+0x38>
    1c7a:	f1a2 0310 	sub.w	r3, r2, #16
    1c7e:	f023 030f 	bic.w	r3, r3, #15
    1c82:	f002 0e0f 	and.w	lr, r2, #15
    1c86:	3310      	adds	r3, #16
    1c88:	f1be 0f03 	cmp.w	lr, #3
    1c8c:	4419      	add	r1, r3
    1c8e:	4403      	add	r3, r0
    1c90:	d921      	bls.n	1cd6 <memmove+0xc2>
    1c92:	1f1e      	subs	r6, r3, #4
    1c94:	460d      	mov	r5, r1
    1c96:	4674      	mov	r4, lr
    1c98:	3c04      	subs	r4, #4
    1c9a:	f855 7b04 	ldr.w	r7, [r5], #4
    1c9e:	f846 7f04 	str.w	r7, [r6, #4]!
    1ca2:	2c03      	cmp	r4, #3
    1ca4:	d8f8      	bhi.n	1c98 <memmove+0x84>
    1ca6:	f1ae 0404 	sub.w	r4, lr, #4
    1caa:	f024 0403 	bic.w	r4, r4, #3
    1cae:	3404      	adds	r4, #4
    1cb0:	4421      	add	r1, r4
    1cb2:	4423      	add	r3, r4
    1cb4:	f002 0203 	and.w	r2, r2, #3
    1cb8:	b162      	cbz	r2, 1cd4 <memmove+0xc0>
    1cba:	3b01      	subs	r3, #1
    1cbc:	440a      	add	r2, r1
    1cbe:	f811 4b01 	ldrb.w	r4, [r1], #1
    1cc2:	f803 4f01 	strb.w	r4, [r3, #1]!
    1cc6:	428a      	cmp	r2, r1
    1cc8:	d1f9      	bne.n	1cbe <memmove+0xaa>
    1cca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1ccc:	4603      	mov	r3, r0
    1cce:	e7f3      	b.n	1cb8 <memmove+0xa4>
    1cd0:	4603      	mov	r3, r0
    1cd2:	e7f2      	b.n	1cba <memmove+0xa6>
    1cd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1cd6:	4672      	mov	r2, lr
    1cd8:	e7ee      	b.n	1cb8 <memmove+0xa4>
    1cda:	bf00      	nop

00001cdc <__malloc_lock>:
    1cdc:	4801      	ldr	r0, [pc, #4]	; (1ce4 <__malloc_lock+0x8>)
    1cde:	f7ff bb77 	b.w	13d0 <__retarget_lock_acquire_recursive>
    1ce2:	bf00      	nop
    1ce4:	200008a8 	.word	0x200008a8

00001ce8 <__malloc_unlock>:
    1ce8:	4801      	ldr	r0, [pc, #4]	; (1cf0 <__malloc_unlock+0x8>)
    1cea:	f7ff bb73 	b.w	13d4 <__retarget_lock_release_recursive>
    1cee:	bf00      	nop
    1cf0:	200008a8 	.word	0x200008a8

00001cf4 <_realloc_r>:
    1cf4:	2900      	cmp	r1, #0
    1cf6:	f000 8095 	beq.w	1e24 <_realloc_r+0x130>
    1cfa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1cfe:	460d      	mov	r5, r1
    1d00:	4616      	mov	r6, r2
    1d02:	b083      	sub	sp, #12
    1d04:	4680      	mov	r8, r0
    1d06:	f106 070b 	add.w	r7, r6, #11
    1d0a:	f7ff ffe7 	bl	1cdc <__malloc_lock>
    1d0e:	f855 ec04 	ldr.w	lr, [r5, #-4]
    1d12:	2f16      	cmp	r7, #22
    1d14:	f02e 0403 	bic.w	r4, lr, #3
    1d18:	f1a5 0908 	sub.w	r9, r5, #8
    1d1c:	d83c      	bhi.n	1d98 <_realloc_r+0xa4>
    1d1e:	2210      	movs	r2, #16
    1d20:	4617      	mov	r7, r2
    1d22:	42be      	cmp	r6, r7
    1d24:	d83d      	bhi.n	1da2 <_realloc_r+0xae>
    1d26:	4294      	cmp	r4, r2
    1d28:	da43      	bge.n	1db2 <_realloc_r+0xbe>
    1d2a:	4bc4      	ldr	r3, [pc, #784]	; (203c <_realloc_r+0x348>)
    1d2c:	6899      	ldr	r1, [r3, #8]
    1d2e:	eb09 0004 	add.w	r0, r9, r4
    1d32:	4288      	cmp	r0, r1
    1d34:	f000 80b4 	beq.w	1ea0 <_realloc_r+0x1ac>
    1d38:	6843      	ldr	r3, [r0, #4]
    1d3a:	f023 0101 	bic.w	r1, r3, #1
    1d3e:	4401      	add	r1, r0
    1d40:	6849      	ldr	r1, [r1, #4]
    1d42:	07c9      	lsls	r1, r1, #31
    1d44:	d54c      	bpl.n	1de0 <_realloc_r+0xec>
    1d46:	f01e 0f01 	tst.w	lr, #1
    1d4a:	f000 809b 	beq.w	1e84 <_realloc_r+0x190>
    1d4e:	4631      	mov	r1, r6
    1d50:	4640      	mov	r0, r8
    1d52:	f7ff fbc1 	bl	14d8 <_malloc_r>
    1d56:	4606      	mov	r6, r0
    1d58:	2800      	cmp	r0, #0
    1d5a:	d03a      	beq.n	1dd2 <_realloc_r+0xde>
    1d5c:	f855 3c04 	ldr.w	r3, [r5, #-4]
    1d60:	f023 0301 	bic.w	r3, r3, #1
    1d64:	444b      	add	r3, r9
    1d66:	f1a0 0208 	sub.w	r2, r0, #8
    1d6a:	429a      	cmp	r2, r3
    1d6c:	f000 8121 	beq.w	1fb2 <_realloc_r+0x2be>
    1d70:	1f22      	subs	r2, r4, #4
    1d72:	2a24      	cmp	r2, #36	; 0x24
    1d74:	f200 8107 	bhi.w	1f86 <_realloc_r+0x292>
    1d78:	2a13      	cmp	r2, #19
    1d7a:	f200 80db 	bhi.w	1f34 <_realloc_r+0x240>
    1d7e:	4603      	mov	r3, r0
    1d80:	462a      	mov	r2, r5
    1d82:	6811      	ldr	r1, [r2, #0]
    1d84:	6019      	str	r1, [r3, #0]
    1d86:	6851      	ldr	r1, [r2, #4]
    1d88:	6059      	str	r1, [r3, #4]
    1d8a:	6892      	ldr	r2, [r2, #8]
    1d8c:	609a      	str	r2, [r3, #8]
    1d8e:	4629      	mov	r1, r5
    1d90:	4640      	mov	r0, r8
    1d92:	f7ff f891 	bl	eb8 <_free_r>
    1d96:	e01c      	b.n	1dd2 <_realloc_r+0xde>
    1d98:	f027 0707 	bic.w	r7, r7, #7
    1d9c:	2f00      	cmp	r7, #0
    1d9e:	463a      	mov	r2, r7
    1da0:	dabf      	bge.n	1d22 <_realloc_r+0x2e>
    1da2:	2600      	movs	r6, #0
    1da4:	230c      	movs	r3, #12
    1da6:	4630      	mov	r0, r6
    1da8:	f8c8 3000 	str.w	r3, [r8]
    1dac:	b003      	add	sp, #12
    1dae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1db2:	462e      	mov	r6, r5
    1db4:	1be3      	subs	r3, r4, r7
    1db6:	2b0f      	cmp	r3, #15
    1db8:	d81e      	bhi.n	1df8 <_realloc_r+0x104>
    1dba:	f8d9 3004 	ldr.w	r3, [r9, #4]
    1dbe:	f003 0301 	and.w	r3, r3, #1
    1dc2:	4323      	orrs	r3, r4
    1dc4:	444c      	add	r4, r9
    1dc6:	f8c9 3004 	str.w	r3, [r9, #4]
    1dca:	6863      	ldr	r3, [r4, #4]
    1dcc:	f043 0301 	orr.w	r3, r3, #1
    1dd0:	6063      	str	r3, [r4, #4]
    1dd2:	4640      	mov	r0, r8
    1dd4:	f7ff ff88 	bl	1ce8 <__malloc_unlock>
    1dd8:	4630      	mov	r0, r6
    1dda:	b003      	add	sp, #12
    1ddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1de0:	f023 0303 	bic.w	r3, r3, #3
    1de4:	18e1      	adds	r1, r4, r3
    1de6:	4291      	cmp	r1, r2
    1de8:	db1f      	blt.n	1e2a <_realloc_r+0x136>
    1dea:	68c3      	ldr	r3, [r0, #12]
    1dec:	6882      	ldr	r2, [r0, #8]
    1dee:	462e      	mov	r6, r5
    1df0:	60d3      	str	r3, [r2, #12]
    1df2:	460c      	mov	r4, r1
    1df4:	609a      	str	r2, [r3, #8]
    1df6:	e7dd      	b.n	1db4 <_realloc_r+0xc0>
    1df8:	f8d9 2004 	ldr.w	r2, [r9, #4]
    1dfc:	eb09 0107 	add.w	r1, r9, r7
    1e00:	f002 0201 	and.w	r2, r2, #1
    1e04:	444c      	add	r4, r9
    1e06:	f043 0301 	orr.w	r3, r3, #1
    1e0a:	4317      	orrs	r7, r2
    1e0c:	f8c9 7004 	str.w	r7, [r9, #4]
    1e10:	604b      	str	r3, [r1, #4]
    1e12:	6863      	ldr	r3, [r4, #4]
    1e14:	f043 0301 	orr.w	r3, r3, #1
    1e18:	3108      	adds	r1, #8
    1e1a:	6063      	str	r3, [r4, #4]
    1e1c:	4640      	mov	r0, r8
    1e1e:	f7ff f84b 	bl	eb8 <_free_r>
    1e22:	e7d6      	b.n	1dd2 <_realloc_r+0xde>
    1e24:	4611      	mov	r1, r2
    1e26:	f7ff bb57 	b.w	14d8 <_malloc_r>
    1e2a:	f01e 0f01 	tst.w	lr, #1
    1e2e:	d18e      	bne.n	1d4e <_realloc_r+0x5a>
    1e30:	f855 1c08 	ldr.w	r1, [r5, #-8]
    1e34:	eba9 0a01 	sub.w	sl, r9, r1
    1e38:	f8da 1004 	ldr.w	r1, [sl, #4]
    1e3c:	f021 0103 	bic.w	r1, r1, #3
    1e40:	440b      	add	r3, r1
    1e42:	4423      	add	r3, r4
    1e44:	4293      	cmp	r3, r2
    1e46:	db25      	blt.n	1e94 <_realloc_r+0x1a0>
    1e48:	68c2      	ldr	r2, [r0, #12]
    1e4a:	6881      	ldr	r1, [r0, #8]
    1e4c:	4656      	mov	r6, sl
    1e4e:	60ca      	str	r2, [r1, #12]
    1e50:	6091      	str	r1, [r2, #8]
    1e52:	f8da 100c 	ldr.w	r1, [sl, #12]
    1e56:	f856 0f08 	ldr.w	r0, [r6, #8]!
    1e5a:	1f22      	subs	r2, r4, #4
    1e5c:	2a24      	cmp	r2, #36	; 0x24
    1e5e:	60c1      	str	r1, [r0, #12]
    1e60:	6088      	str	r0, [r1, #8]
    1e62:	f200 8094 	bhi.w	1f8e <_realloc_r+0x29a>
    1e66:	2a13      	cmp	r2, #19
    1e68:	d96f      	bls.n	1f4a <_realloc_r+0x256>
    1e6a:	6829      	ldr	r1, [r5, #0]
    1e6c:	f8ca 1008 	str.w	r1, [sl, #8]
    1e70:	6869      	ldr	r1, [r5, #4]
    1e72:	f8ca 100c 	str.w	r1, [sl, #12]
    1e76:	2a1b      	cmp	r2, #27
    1e78:	f200 80a2 	bhi.w	1fc0 <_realloc_r+0x2cc>
    1e7c:	3508      	adds	r5, #8
    1e7e:	f10a 0210 	add.w	r2, sl, #16
    1e82:	e063      	b.n	1f4c <_realloc_r+0x258>
    1e84:	f855 3c08 	ldr.w	r3, [r5, #-8]
    1e88:	eba9 0a03 	sub.w	sl, r9, r3
    1e8c:	f8da 1004 	ldr.w	r1, [sl, #4]
    1e90:	f021 0103 	bic.w	r1, r1, #3
    1e94:	1863      	adds	r3, r4, r1
    1e96:	4293      	cmp	r3, r2
    1e98:	f6ff af59 	blt.w	1d4e <_realloc_r+0x5a>
    1e9c:	4656      	mov	r6, sl
    1e9e:	e7d8      	b.n	1e52 <_realloc_r+0x15e>
    1ea0:	6841      	ldr	r1, [r0, #4]
    1ea2:	f021 0b03 	bic.w	fp, r1, #3
    1ea6:	44a3      	add	fp, r4
    1ea8:	f107 0010 	add.w	r0, r7, #16
    1eac:	4583      	cmp	fp, r0
    1eae:	da56      	bge.n	1f5e <_realloc_r+0x26a>
    1eb0:	f01e 0f01 	tst.w	lr, #1
    1eb4:	f47f af4b 	bne.w	1d4e <_realloc_r+0x5a>
    1eb8:	f855 1c08 	ldr.w	r1, [r5, #-8]
    1ebc:	eba9 0a01 	sub.w	sl, r9, r1
    1ec0:	f8da 1004 	ldr.w	r1, [sl, #4]
    1ec4:	f021 0103 	bic.w	r1, r1, #3
    1ec8:	448b      	add	fp, r1
    1eca:	4558      	cmp	r0, fp
    1ecc:	dce2      	bgt.n	1e94 <_realloc_r+0x1a0>
    1ece:	4656      	mov	r6, sl
    1ed0:	f8da 100c 	ldr.w	r1, [sl, #12]
    1ed4:	f856 0f08 	ldr.w	r0, [r6, #8]!
    1ed8:	1f22      	subs	r2, r4, #4
    1eda:	2a24      	cmp	r2, #36	; 0x24
    1edc:	60c1      	str	r1, [r0, #12]
    1ede:	6088      	str	r0, [r1, #8]
    1ee0:	f200 808f 	bhi.w	2002 <_realloc_r+0x30e>
    1ee4:	2a13      	cmp	r2, #19
    1ee6:	f240 808a 	bls.w	1ffe <_realloc_r+0x30a>
    1eea:	6829      	ldr	r1, [r5, #0]
    1eec:	f8ca 1008 	str.w	r1, [sl, #8]
    1ef0:	6869      	ldr	r1, [r5, #4]
    1ef2:	f8ca 100c 	str.w	r1, [sl, #12]
    1ef6:	2a1b      	cmp	r2, #27
    1ef8:	f200 808a 	bhi.w	2010 <_realloc_r+0x31c>
    1efc:	3508      	adds	r5, #8
    1efe:	f10a 0210 	add.w	r2, sl, #16
    1f02:	6829      	ldr	r1, [r5, #0]
    1f04:	6011      	str	r1, [r2, #0]
    1f06:	6869      	ldr	r1, [r5, #4]
    1f08:	6051      	str	r1, [r2, #4]
    1f0a:	68a9      	ldr	r1, [r5, #8]
    1f0c:	6091      	str	r1, [r2, #8]
    1f0e:	eb0a 0107 	add.w	r1, sl, r7
    1f12:	ebab 0207 	sub.w	r2, fp, r7
    1f16:	f042 0201 	orr.w	r2, r2, #1
    1f1a:	6099      	str	r1, [r3, #8]
    1f1c:	604a      	str	r2, [r1, #4]
    1f1e:	f8da 3004 	ldr.w	r3, [sl, #4]
    1f22:	f003 0301 	and.w	r3, r3, #1
    1f26:	431f      	orrs	r7, r3
    1f28:	4640      	mov	r0, r8
    1f2a:	f8ca 7004 	str.w	r7, [sl, #4]
    1f2e:	f7ff fedb 	bl	1ce8 <__malloc_unlock>
    1f32:	e751      	b.n	1dd8 <_realloc_r+0xe4>
    1f34:	682b      	ldr	r3, [r5, #0]
    1f36:	6003      	str	r3, [r0, #0]
    1f38:	686b      	ldr	r3, [r5, #4]
    1f3a:	6043      	str	r3, [r0, #4]
    1f3c:	2a1b      	cmp	r2, #27
    1f3e:	d82d      	bhi.n	1f9c <_realloc_r+0x2a8>
    1f40:	f100 0308 	add.w	r3, r0, #8
    1f44:	f105 0208 	add.w	r2, r5, #8
    1f48:	e71b      	b.n	1d82 <_realloc_r+0x8e>
    1f4a:	4632      	mov	r2, r6
    1f4c:	6829      	ldr	r1, [r5, #0]
    1f4e:	6011      	str	r1, [r2, #0]
    1f50:	6869      	ldr	r1, [r5, #4]
    1f52:	6051      	str	r1, [r2, #4]
    1f54:	68a9      	ldr	r1, [r5, #8]
    1f56:	6091      	str	r1, [r2, #8]
    1f58:	461c      	mov	r4, r3
    1f5a:	46d1      	mov	r9, sl
    1f5c:	e72a      	b.n	1db4 <_realloc_r+0xc0>
    1f5e:	eb09 0107 	add.w	r1, r9, r7
    1f62:	ebab 0b07 	sub.w	fp, fp, r7
    1f66:	f04b 0201 	orr.w	r2, fp, #1
    1f6a:	6099      	str	r1, [r3, #8]
    1f6c:	604a      	str	r2, [r1, #4]
    1f6e:	f855 3c04 	ldr.w	r3, [r5, #-4]
    1f72:	f003 0301 	and.w	r3, r3, #1
    1f76:	431f      	orrs	r7, r3
    1f78:	4640      	mov	r0, r8
    1f7a:	f845 7c04 	str.w	r7, [r5, #-4]
    1f7e:	f7ff feb3 	bl	1ce8 <__malloc_unlock>
    1f82:	462e      	mov	r6, r5
    1f84:	e728      	b.n	1dd8 <_realloc_r+0xe4>
    1f86:	4629      	mov	r1, r5
    1f88:	f7ff fe44 	bl	1c14 <memmove>
    1f8c:	e6ff      	b.n	1d8e <_realloc_r+0x9a>
    1f8e:	4629      	mov	r1, r5
    1f90:	4630      	mov	r0, r6
    1f92:	461c      	mov	r4, r3
    1f94:	46d1      	mov	r9, sl
    1f96:	f7ff fe3d 	bl	1c14 <memmove>
    1f9a:	e70b      	b.n	1db4 <_realloc_r+0xc0>
    1f9c:	68ab      	ldr	r3, [r5, #8]
    1f9e:	6083      	str	r3, [r0, #8]
    1fa0:	68eb      	ldr	r3, [r5, #12]
    1fa2:	60c3      	str	r3, [r0, #12]
    1fa4:	2a24      	cmp	r2, #36	; 0x24
    1fa6:	d017      	beq.n	1fd8 <_realloc_r+0x2e4>
    1fa8:	f100 0310 	add.w	r3, r0, #16
    1fac:	f105 0210 	add.w	r2, r5, #16
    1fb0:	e6e7      	b.n	1d82 <_realloc_r+0x8e>
    1fb2:	f850 3c04 	ldr.w	r3, [r0, #-4]
    1fb6:	f023 0303 	bic.w	r3, r3, #3
    1fba:	441c      	add	r4, r3
    1fbc:	462e      	mov	r6, r5
    1fbe:	e6f9      	b.n	1db4 <_realloc_r+0xc0>
    1fc0:	68a9      	ldr	r1, [r5, #8]
    1fc2:	f8ca 1010 	str.w	r1, [sl, #16]
    1fc6:	68e9      	ldr	r1, [r5, #12]
    1fc8:	f8ca 1014 	str.w	r1, [sl, #20]
    1fcc:	2a24      	cmp	r2, #36	; 0x24
    1fce:	d00c      	beq.n	1fea <_realloc_r+0x2f6>
    1fd0:	3510      	adds	r5, #16
    1fd2:	f10a 0218 	add.w	r2, sl, #24
    1fd6:	e7b9      	b.n	1f4c <_realloc_r+0x258>
    1fd8:	692b      	ldr	r3, [r5, #16]
    1fda:	6103      	str	r3, [r0, #16]
    1fdc:	696b      	ldr	r3, [r5, #20]
    1fde:	6143      	str	r3, [r0, #20]
    1fe0:	f105 0218 	add.w	r2, r5, #24
    1fe4:	f100 0318 	add.w	r3, r0, #24
    1fe8:	e6cb      	b.n	1d82 <_realloc_r+0x8e>
    1fea:	692a      	ldr	r2, [r5, #16]
    1fec:	f8ca 2018 	str.w	r2, [sl, #24]
    1ff0:	696a      	ldr	r2, [r5, #20]
    1ff2:	f8ca 201c 	str.w	r2, [sl, #28]
    1ff6:	3518      	adds	r5, #24
    1ff8:	f10a 0220 	add.w	r2, sl, #32
    1ffc:	e7a6      	b.n	1f4c <_realloc_r+0x258>
    1ffe:	4632      	mov	r2, r6
    2000:	e77f      	b.n	1f02 <_realloc_r+0x20e>
    2002:	4629      	mov	r1, r5
    2004:	4630      	mov	r0, r6
    2006:	9301      	str	r3, [sp, #4]
    2008:	f7ff fe04 	bl	1c14 <memmove>
    200c:	9b01      	ldr	r3, [sp, #4]
    200e:	e77e      	b.n	1f0e <_realloc_r+0x21a>
    2010:	68a9      	ldr	r1, [r5, #8]
    2012:	f8ca 1010 	str.w	r1, [sl, #16]
    2016:	68e9      	ldr	r1, [r5, #12]
    2018:	f8ca 1014 	str.w	r1, [sl, #20]
    201c:	2a24      	cmp	r2, #36	; 0x24
    201e:	d003      	beq.n	2028 <_realloc_r+0x334>
    2020:	3510      	adds	r5, #16
    2022:	f10a 0218 	add.w	r2, sl, #24
    2026:	e76c      	b.n	1f02 <_realloc_r+0x20e>
    2028:	692a      	ldr	r2, [r5, #16]
    202a:	f8ca 2018 	str.w	r2, [sl, #24]
    202e:	696a      	ldr	r2, [r5, #20]
    2030:	f8ca 201c 	str.w	r2, [sl, #28]
    2034:	3518      	adds	r5, #24
    2036:	f10a 0220 	add.w	r2, sl, #32
    203a:	e762      	b.n	1f02 <_realloc_r+0x20e>
    203c:	20000434 	.word	0x20000434

00002040 <_sbrk_r>:
    2040:	b538      	push	{r3, r4, r5, lr}
    2042:	4c07      	ldr	r4, [pc, #28]	; (2060 <_sbrk_r+0x20>)
    2044:	2300      	movs	r3, #0
    2046:	4605      	mov	r5, r0
    2048:	4608      	mov	r0, r1
    204a:	6023      	str	r3, [r4, #0]
    204c:	f7fe faf0 	bl	630 <_sbrk>
    2050:	1c43      	adds	r3, r0, #1
    2052:	d000      	beq.n	2056 <_sbrk_r+0x16>
    2054:	bd38      	pop	{r3, r4, r5, pc}
    2056:	6823      	ldr	r3, [r4, #0]
    2058:	2b00      	cmp	r3, #0
    205a:	d0fb      	beq.n	2054 <_sbrk_r+0x14>
    205c:	602b      	str	r3, [r5, #0]
    205e:	bd38      	pop	{r3, r4, r5, pc}
    2060:	200008bc 	.word	0x200008bc

00002064 <__sread>:
    2064:	b510      	push	{r4, lr}
    2066:	460c      	mov	r4, r1
    2068:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    206c:	f000 f966 	bl	233c <_read_r>
    2070:	2800      	cmp	r0, #0
    2072:	db03      	blt.n	207c <__sread+0x18>
    2074:	6d23      	ldr	r3, [r4, #80]	; 0x50
    2076:	4403      	add	r3, r0
    2078:	6523      	str	r3, [r4, #80]	; 0x50
    207a:	bd10      	pop	{r4, pc}
    207c:	89a3      	ldrh	r3, [r4, #12]
    207e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    2082:	81a3      	strh	r3, [r4, #12]
    2084:	bd10      	pop	{r4, pc}
    2086:	bf00      	nop

00002088 <__swrite>:
    2088:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    208c:	4616      	mov	r6, r2
    208e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
    2092:	461f      	mov	r7, r3
    2094:	05d3      	lsls	r3, r2, #23
    2096:	460c      	mov	r4, r1
    2098:	4605      	mov	r5, r0
    209a:	d507      	bpl.n	20ac <__swrite+0x24>
    209c:	2200      	movs	r2, #0
    209e:	2302      	movs	r3, #2
    20a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    20a4:	f000 f934 	bl	2310 <_lseek_r>
    20a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    20ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    20b0:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
    20b4:	81a2      	strh	r2, [r4, #12]
    20b6:	463b      	mov	r3, r7
    20b8:	4632      	mov	r2, r6
    20ba:	4628      	mov	r0, r5
    20bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    20c0:	f000 b814 	b.w	20ec <_write_r>

000020c4 <__sseek>:
    20c4:	b510      	push	{r4, lr}
    20c6:	460c      	mov	r4, r1
    20c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    20cc:	f000 f920 	bl	2310 <_lseek_r>
    20d0:	89a3      	ldrh	r3, [r4, #12]
    20d2:	1c42      	adds	r2, r0, #1
    20d4:	bf0e      	itee	eq
    20d6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    20da:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    20de:	6520      	strne	r0, [r4, #80]	; 0x50
    20e0:	81a3      	strh	r3, [r4, #12]
    20e2:	bd10      	pop	{r4, pc}

000020e4 <__sclose>:
    20e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    20e8:	f000 b878 	b.w	21dc <_close_r>

000020ec <_write_r>:
    20ec:	b570      	push	{r4, r5, r6, lr}
    20ee:	460d      	mov	r5, r1
    20f0:	4c08      	ldr	r4, [pc, #32]	; (2114 <_write_r+0x28>)
    20f2:	4611      	mov	r1, r2
    20f4:	4606      	mov	r6, r0
    20f6:	461a      	mov	r2, r3
    20f8:	4628      	mov	r0, r5
    20fa:	2300      	movs	r3, #0
    20fc:	6023      	str	r3, [r4, #0]
    20fe:	f7fe fa83 	bl	608 <_write>
    2102:	1c43      	adds	r3, r0, #1
    2104:	d000      	beq.n	2108 <_write_r+0x1c>
    2106:	bd70      	pop	{r4, r5, r6, pc}
    2108:	6823      	ldr	r3, [r4, #0]
    210a:	2b00      	cmp	r3, #0
    210c:	d0fb      	beq.n	2106 <_write_r+0x1a>
    210e:	6033      	str	r3, [r6, #0]
    2110:	bd70      	pop	{r4, r5, r6, pc}
    2112:	bf00      	nop
    2114:	200008bc 	.word	0x200008bc

00002118 <__register_exitproc>:
    2118:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    211c:	4d2c      	ldr	r5, [pc, #176]	; (21d0 <__register_exitproc+0xb8>)
    211e:	4606      	mov	r6, r0
    2120:	6828      	ldr	r0, [r5, #0]
    2122:	4698      	mov	r8, r3
    2124:	460f      	mov	r7, r1
    2126:	4691      	mov	r9, r2
    2128:	f7ff f952 	bl	13d0 <__retarget_lock_acquire_recursive>
    212c:	4b29      	ldr	r3, [pc, #164]	; (21d4 <__register_exitproc+0xbc>)
    212e:	681c      	ldr	r4, [r3, #0]
    2130:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    2134:	2b00      	cmp	r3, #0
    2136:	d03e      	beq.n	21b6 <__register_exitproc+0x9e>
    2138:	685a      	ldr	r2, [r3, #4]
    213a:	2a1f      	cmp	r2, #31
    213c:	dc1c      	bgt.n	2178 <__register_exitproc+0x60>
    213e:	f102 0e01 	add.w	lr, r2, #1
    2142:	b176      	cbz	r6, 2162 <__register_exitproc+0x4a>
    2144:	eb03 0182 	add.w	r1, r3, r2, lsl #2
    2148:	2401      	movs	r4, #1
    214a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
    214e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
    2152:	4094      	lsls	r4, r2
    2154:	4320      	orrs	r0, r4
    2156:	2e02      	cmp	r6, #2
    2158:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
    215c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
    2160:	d023      	beq.n	21aa <__register_exitproc+0x92>
    2162:	3202      	adds	r2, #2
    2164:	f8c3 e004 	str.w	lr, [r3, #4]
    2168:	6828      	ldr	r0, [r5, #0]
    216a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
    216e:	f7ff f931 	bl	13d4 <__retarget_lock_release_recursive>
    2172:	2000      	movs	r0, #0
    2174:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    2178:	4b17      	ldr	r3, [pc, #92]	; (21d8 <__register_exitproc+0xc0>)
    217a:	b30b      	cbz	r3, 21c0 <__register_exitproc+0xa8>
    217c:	f44f 70c8 	mov.w	r0, #400	; 0x190
    2180:	f7ff f9a2 	bl	14c8 <malloc>
    2184:	4603      	mov	r3, r0
    2186:	b1d8      	cbz	r0, 21c0 <__register_exitproc+0xa8>
    2188:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
    218c:	6002      	str	r2, [r0, #0]
    218e:	2100      	movs	r1, #0
    2190:	6041      	str	r1, [r0, #4]
    2192:	460a      	mov	r2, r1
    2194:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
    2198:	f04f 0e01 	mov.w	lr, #1
    219c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
    21a0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
    21a4:	2e00      	cmp	r6, #0
    21a6:	d0dc      	beq.n	2162 <__register_exitproc+0x4a>
    21a8:	e7cc      	b.n	2144 <__register_exitproc+0x2c>
    21aa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
    21ae:	430c      	orrs	r4, r1
    21b0:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
    21b4:	e7d5      	b.n	2162 <__register_exitproc+0x4a>
    21b6:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
    21ba:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
    21be:	e7bb      	b.n	2138 <__register_exitproc+0x20>
    21c0:	6828      	ldr	r0, [r5, #0]
    21c2:	f7ff f907 	bl	13d4 <__retarget_lock_release_recursive>
    21c6:	f04f 30ff 	mov.w	r0, #4294967295
    21ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    21ce:	bf00      	nop
    21d0:	20000430 	.word	0x20000430
    21d4:	0000237c 	.word	0x0000237c
    21d8:	000014c9 	.word	0x000014c9

000021dc <_close_r>:
    21dc:	b538      	push	{r3, r4, r5, lr}
    21de:	4c07      	ldr	r4, [pc, #28]	; (21fc <_close_r+0x20>)
    21e0:	2300      	movs	r3, #0
    21e2:	4605      	mov	r5, r0
    21e4:	4608      	mov	r0, r1
    21e6:	6023      	str	r3, [r4, #0]
    21e8:	f7fe fa34 	bl	654 <_close>
    21ec:	1c43      	adds	r3, r0, #1
    21ee:	d000      	beq.n	21f2 <_close_r+0x16>
    21f0:	bd38      	pop	{r3, r4, r5, pc}
    21f2:	6823      	ldr	r3, [r4, #0]
    21f4:	2b00      	cmp	r3, #0
    21f6:	d0fb      	beq.n	21f0 <_close_r+0x14>
    21f8:	602b      	str	r3, [r5, #0]
    21fa:	bd38      	pop	{r3, r4, r5, pc}
    21fc:	200008bc 	.word	0x200008bc

00002200 <_fclose_r>:
    2200:	b570      	push	{r4, r5, r6, lr}
    2202:	b159      	cbz	r1, 221c <_fclose_r+0x1c>
    2204:	4605      	mov	r5, r0
    2206:	460c      	mov	r4, r1
    2208:	b110      	cbz	r0, 2210 <_fclose_r+0x10>
    220a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    220c:	2b00      	cmp	r3, #0
    220e:	d03c      	beq.n	228a <_fclose_r+0x8a>
    2210:	6e63      	ldr	r3, [r4, #100]	; 0x64
    2212:	07d8      	lsls	r0, r3, #31
    2214:	d505      	bpl.n	2222 <_fclose_r+0x22>
    2216:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    221a:	b92b      	cbnz	r3, 2228 <_fclose_r+0x28>
    221c:	2600      	movs	r6, #0
    221e:	4630      	mov	r0, r6
    2220:	bd70      	pop	{r4, r5, r6, pc}
    2222:	89a3      	ldrh	r3, [r4, #12]
    2224:	0599      	lsls	r1, r3, #22
    2226:	d53c      	bpl.n	22a2 <_fclose_r+0xa2>
    2228:	4621      	mov	r1, r4
    222a:	4628      	mov	r0, r5
    222c:	f7fe fcaa 	bl	b84 <__sflush_r>
    2230:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    2232:	4606      	mov	r6, r0
    2234:	b133      	cbz	r3, 2244 <_fclose_r+0x44>
    2236:	69e1      	ldr	r1, [r4, #28]
    2238:	4628      	mov	r0, r5
    223a:	4798      	blx	r3
    223c:	2800      	cmp	r0, #0
    223e:	bfb8      	it	lt
    2240:	f04f 36ff 	movlt.w	r6, #4294967295
    2244:	89a3      	ldrh	r3, [r4, #12]
    2246:	061a      	lsls	r2, r3, #24
    2248:	d422      	bmi.n	2290 <_fclose_r+0x90>
    224a:	6b21      	ldr	r1, [r4, #48]	; 0x30
    224c:	b141      	cbz	r1, 2260 <_fclose_r+0x60>
    224e:	f104 0340 	add.w	r3, r4, #64	; 0x40
    2252:	4299      	cmp	r1, r3
    2254:	d002      	beq.n	225c <_fclose_r+0x5c>
    2256:	4628      	mov	r0, r5
    2258:	f7fe fe2e 	bl	eb8 <_free_r>
    225c:	2300      	movs	r3, #0
    225e:	6323      	str	r3, [r4, #48]	; 0x30
    2260:	6c61      	ldr	r1, [r4, #68]	; 0x44
    2262:	b121      	cbz	r1, 226e <_fclose_r+0x6e>
    2264:	4628      	mov	r0, r5
    2266:	f7fe fe27 	bl	eb8 <_free_r>
    226a:	2300      	movs	r3, #0
    226c:	6463      	str	r3, [r4, #68]	; 0x44
    226e:	f7fe fdad 	bl	dcc <__sfp_lock_acquire>
    2272:	6e63      	ldr	r3, [r4, #100]	; 0x64
    2274:	2200      	movs	r2, #0
    2276:	07db      	lsls	r3, r3, #31
    2278:	81a2      	strh	r2, [r4, #12]
    227a:	d50e      	bpl.n	229a <_fclose_r+0x9a>
    227c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    227e:	f7ff f8a5 	bl	13cc <__retarget_lock_close_recursive>
    2282:	f7fe fda9 	bl	dd8 <__sfp_lock_release>
    2286:	4630      	mov	r0, r6
    2288:	bd70      	pop	{r4, r5, r6, pc}
    228a:	f7fe fd73 	bl	d74 <__sinit>
    228e:	e7bf      	b.n	2210 <_fclose_r+0x10>
    2290:	6921      	ldr	r1, [r4, #16]
    2292:	4628      	mov	r0, r5
    2294:	f7fe fe10 	bl	eb8 <_free_r>
    2298:	e7d7      	b.n	224a <_fclose_r+0x4a>
    229a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    229c:	f7ff f89a 	bl	13d4 <__retarget_lock_release_recursive>
    22a0:	e7ec      	b.n	227c <_fclose_r+0x7c>
    22a2:	6da0      	ldr	r0, [r4, #88]	; 0x58
    22a4:	f7ff f894 	bl	13d0 <__retarget_lock_acquire_recursive>
    22a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    22ac:	2b00      	cmp	r3, #0
    22ae:	d1bb      	bne.n	2228 <_fclose_r+0x28>
    22b0:	6e66      	ldr	r6, [r4, #100]	; 0x64
    22b2:	f016 0601 	ands.w	r6, r6, #1
    22b6:	d1b1      	bne.n	221c <_fclose_r+0x1c>
    22b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    22ba:	f7ff f88b 	bl	13d4 <__retarget_lock_release_recursive>
    22be:	4630      	mov	r0, r6
    22c0:	bd70      	pop	{r4, r5, r6, pc}
    22c2:	bf00      	nop

000022c4 <_fstat_r>:
    22c4:	b538      	push	{r3, r4, r5, lr}
    22c6:	460b      	mov	r3, r1
    22c8:	4c07      	ldr	r4, [pc, #28]	; (22e8 <_fstat_r+0x24>)
    22ca:	4605      	mov	r5, r0
    22cc:	4611      	mov	r1, r2
    22ce:	4618      	mov	r0, r3
    22d0:	2300      	movs	r3, #0
    22d2:	6023      	str	r3, [r4, #0]
    22d4:	f7fe f9c1 	bl	65a <_fstat>
    22d8:	1c43      	adds	r3, r0, #1
    22da:	d000      	beq.n	22de <_fstat_r+0x1a>
    22dc:	bd38      	pop	{r3, r4, r5, pc}
    22de:	6823      	ldr	r3, [r4, #0]
    22e0:	2b00      	cmp	r3, #0
    22e2:	d0fb      	beq.n	22dc <_fstat_r+0x18>
    22e4:	602b      	str	r3, [r5, #0]
    22e6:	bd38      	pop	{r3, r4, r5, pc}
    22e8:	200008bc 	.word	0x200008bc

000022ec <_isatty_r>:
    22ec:	b538      	push	{r3, r4, r5, lr}
    22ee:	4c07      	ldr	r4, [pc, #28]	; (230c <_isatty_r+0x20>)
    22f0:	2300      	movs	r3, #0
    22f2:	4605      	mov	r5, r0
    22f4:	4608      	mov	r0, r1
    22f6:	6023      	str	r3, [r4, #0]
    22f8:	f7fe f9b4 	bl	664 <_isatty>
    22fc:	1c43      	adds	r3, r0, #1
    22fe:	d000      	beq.n	2302 <_isatty_r+0x16>
    2300:	bd38      	pop	{r3, r4, r5, pc}
    2302:	6823      	ldr	r3, [r4, #0]
    2304:	2b00      	cmp	r3, #0
    2306:	d0fb      	beq.n	2300 <_isatty_r+0x14>
    2308:	602b      	str	r3, [r5, #0]
    230a:	bd38      	pop	{r3, r4, r5, pc}
    230c:	200008bc 	.word	0x200008bc

00002310 <_lseek_r>:
    2310:	b570      	push	{r4, r5, r6, lr}
    2312:	460d      	mov	r5, r1
    2314:	4c08      	ldr	r4, [pc, #32]	; (2338 <_lseek_r+0x28>)
    2316:	4611      	mov	r1, r2
    2318:	4606      	mov	r6, r0
    231a:	461a      	mov	r2, r3
    231c:	4628      	mov	r0, r5
    231e:	2300      	movs	r3, #0
    2320:	6023      	str	r3, [r4, #0]
    2322:	f7fe f9a1 	bl	668 <_lseek>
    2326:	1c43      	adds	r3, r0, #1
    2328:	d000      	beq.n	232c <_lseek_r+0x1c>
    232a:	bd70      	pop	{r4, r5, r6, pc}
    232c:	6823      	ldr	r3, [r4, #0]
    232e:	2b00      	cmp	r3, #0
    2330:	d0fb      	beq.n	232a <_lseek_r+0x1a>
    2332:	6033      	str	r3, [r6, #0]
    2334:	bd70      	pop	{r4, r5, r6, pc}
    2336:	bf00      	nop
    2338:	200008bc 	.word	0x200008bc

0000233c <_read_r>:
    233c:	b570      	push	{r4, r5, r6, lr}
    233e:	460d      	mov	r5, r1
    2340:	4c08      	ldr	r4, [pc, #32]	; (2364 <_read_r+0x28>)
    2342:	4611      	mov	r1, r2
    2344:	4606      	mov	r6, r0
    2346:	461a      	mov	r2, r3
    2348:	4628      	mov	r0, r5
    234a:	2300      	movs	r3, #0
    234c:	6023      	str	r3, [r4, #0]
    234e:	f7fe f949 	bl	5e4 <_read>
    2352:	1c43      	adds	r3, r0, #1
    2354:	d000      	beq.n	2358 <_read_r+0x1c>
    2356:	bd70      	pop	{r4, r5, r6, pc}
    2358:	6823      	ldr	r3, [r4, #0]
    235a:	2b00      	cmp	r3, #0
    235c:	d0fb      	beq.n	2356 <_read_r+0x1a>
    235e:	6033      	str	r3, [r6, #0]
    2360:	bd70      	pop	{r4, r5, r6, pc}
    2362:	bf00      	nop
    2364:	200008bc 	.word	0x200008bc
    2368:	6c6c6568 	.word	0x6c6c6568
    236c:	0000006f 	.word	0x0000006f
    2370:	73696874 	.word	0x73696874
    2374:	726f7720 	.word	0x726f7720
    2378:	0000736b 	.word	0x0000736b

0000237c <_global_impure_ptr>:
    237c:	20000008 0000000a                       ... ....

00002384 <_init>:
    2384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2386:	bf00      	nop
    2388:	bcf8      	pop	{r3, r4, r5, r6, r7}
    238a:	bc08      	pop	{r3}
    238c:	469e      	mov	lr, r3
    238e:	4770      	bx	lr

00002390 <__init_array_start>:
    2390:	00000b65 	.word	0x00000b65

00002394 <__frame_dummy_init_array_entry>:
    2394:	00000289                                ....

00002398 <_fini>:
    2398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    239a:	bf00      	nop
    239c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    239e:	bc08      	pop	{r3}
    23a0:	469e      	mov	lr, r3
    23a2:	4770      	bx	lr

000023a4 <__fini_array_start>:
    23a4:	00000265 	.word	0x00000265
